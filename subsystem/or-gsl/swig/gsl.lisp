(in-package #:gsl)
;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 3.0.5
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


;;;SWIG wrapper code starts here

(cl:defmacro defanonenum (cl:&body enums)
   "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                        for index = 0 then (cl:1+ index)
                        when (cl:listp value) do (cl:setf index (cl:second value)
                                                          value (cl:first value))
                        collect `(cl:defconstant ,value ,index))))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:fboundp 'swig-lispify)
    (cl:defun swig-lispify (name flag cl:&optional (package cl:*package*))
      (cl:labels ((helper (lst last rest cl:&aux (c (cl:car lst)))
                    (cl:cond
                      ((cl:null lst)
                       rest)
                      ((cl:upper-case-p c)
                       (helper (cl:cdr lst) 'upper
                               (cl:case last
                                 ((lower digit) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:lower-case-p c)
                       (helper (cl:cdr lst) 'lower (cl:cons (cl:char-upcase c) rest)))
                      ((cl:digit-char-p c)
                       (helper (cl:cdr lst) 'digit 
                               (cl:case last
                                 ((upper lower) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:char-equal c #\_)
                       (helper (cl:cdr lst) '_ (cl:cons #\- rest)))
                      (cl:t
                       (cl:error "Invalid character: ~A" c)))))
        (cl:let ((fix (cl:case flag
                        ((constant enumvalue) "+")
                        (variable "*")
                        (cl:t ""))))
          (cl:intern
           (cl:concatenate
            'cl:string
            fix
            (cl:nreverse (helper (cl:concatenate 'cl:list name) cl:nil cl:nil))
            fix)
           package))))))

;;;SWIG wrapper code ends here


(defanonenum 
	(#.(swig-lispify "GSL_SUCCESS" 'enumvalue) #.0)
	(#.(swig-lispify "GSL_FAILURE" 'enumvalue) #.-1)
	(#.(swig-lispify "GSL_CONTINUE" 'enumvalue) #.-2)
	(#.(swig-lispify "GSL_EDOM" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_ERANGE" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_EFAULT" 'enumvalue) #.3)
	(#.(swig-lispify "GSL_EINVAL" 'enumvalue) #.4)
	(#.(swig-lispify "GSL_EFAILED" 'enumvalue) #.5)
	(#.(swig-lispify "GSL_EFACTOR" 'enumvalue) #.6)
	(#.(swig-lispify "GSL_ESANITY" 'enumvalue) #.7)
	(#.(swig-lispify "GSL_ENOMEM" 'enumvalue) #.8)
	(#.(swig-lispify "GSL_EBADFUNC" 'enumvalue) #.9)
	(#.(swig-lispify "GSL_ERUNAWAY" 'enumvalue) #.10)
	(#.(swig-lispify "GSL_EMAXITER" 'enumvalue) #.11)
	(#.(swig-lispify "GSL_EZERODIV" 'enumvalue) #.12)
	(#.(swig-lispify "GSL_EBADTOL" 'enumvalue) #.13)
	(#.(swig-lispify "GSL_ETOL" 'enumvalue) #.14)
	(#.(swig-lispify "GSL_EUNDRFLW" 'enumvalue) #.15)
	(#.(swig-lispify "GSL_EOVRFLW" 'enumvalue) #.16)
	(#.(swig-lispify "GSL_ELOSS" 'enumvalue) #.17)
	(#.(swig-lispify "GSL_EROUND" 'enumvalue) #.18)
	(#.(swig-lispify "GSL_EBADLEN" 'enumvalue) #.19)
	(#.(swig-lispify "GSL_ENOTSQR" 'enumvalue) #.20)
	(#.(swig-lispify "GSL_ESING" 'enumvalue) #.21)
	(#.(swig-lispify "GSL_EDIVERGE" 'enumvalue) #.22)
	(#.(swig-lispify "GSL_EUNSUP" 'enumvalue) #.23)
	(#.(swig-lispify "GSL_EUNIMPL" 'enumvalue) #.24)
	(#.(swig-lispify "GSL_ECACHE" 'enumvalue) #.25)
	(#.(swig-lispify "GSL_ETABLE" 'enumvalue) #.26)
	(#.(swig-lispify "GSL_ENOPROG" 'enumvalue) #.27)
	(#.(swig-lispify "GSL_ENOPROGJ" 'enumvalue) #.28)
	(#.(swig-lispify "GSL_ETOLF" 'enumvalue) #.29)
	(#.(swig-lispify "GSL_ETOLX" 'enumvalue) #.30)
	(#.(swig-lispify "GSL_ETOLG" 'enumvalue) #.31)
	(#.(swig-lispify "GSL_EOF" 'enumvalue) #.32))

(cl:export '#.(swig-lispify "GSL_SUCCESS" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_FAILURE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_CONTINUE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EDOM" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ERANGE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EFAULT" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EINVAL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EFAILED" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EFACTOR" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ESANITY" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ENOMEM" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EBADFUNC" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ERUNAWAY" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EMAXITER" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EZERODIV" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EBADTOL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ETOL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EUNDRFLW" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EOVRFLW" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ELOSS" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EROUND" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EBADLEN" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ENOTSQR" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ESING" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EDIVERGE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EUNSUP" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EUNIMPL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ECACHE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ETABLE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ENOPROG" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ENOPROGJ" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ETOLF" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ETOLX" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_ETOLG" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_EOF" 'enumvalue))

(cffi:defcfun ("gsl_error" #.(swig-lispify "gsl_error" 'function)) :void
  (reason :string)
  (file :string)
  (line :int)
  (gsl_errno :int))

(cl:export '#.(swig-lispify "gsl_error" 'function))

(cffi:defcfun ("gsl_stream_printf" #.(swig-lispify "gsl_stream_printf" 'function)) :void
  (label :string)
  (file :string)
  (line :int)
  (reason :string))

(cl:export '#.(swig-lispify "gsl_stream_printf" 'function))

(cffi:defcfun ("gsl_strerror" #.(swig-lispify "gsl_strerror" 'function)) :string
  (gsl_errno :int))

(cl:export '#.(swig-lispify "gsl_strerror" 'function))

(cffi:defcfun ("gsl_set_error_handler" #.(swig-lispify "gsl_set_error_handler" 'function)) :pointer
  (new_handler :pointer))

(cl:export '#.(swig-lispify "gsl_set_error_handler" 'function))

(cffi:defcfun ("gsl_set_error_handler_off" #.(swig-lispify "gsl_set_error_handler_off" 'function)) :pointer)

(cl:export '#.(swig-lispify "gsl_set_error_handler_off" 'function))

(cffi:defcfun ("gsl_set_stream_handler" #.(swig-lispify "gsl_set_stream_handler" 'function)) :pointer
  (new_handler :pointer))

(cl:export '#.(swig-lispify "gsl_set_stream_handler" 'function))

(cffi:defcfun ("gsl_set_stream" #.(swig-lispify "gsl_set_stream" 'function)) :pointer
  (new_stream :pointer))

(cl:export '#.(swig-lispify "gsl_set_stream" 'function))

(cffi:defcvar ("gsl_check_range" #.(swig-lispify "gsl_check_range" 'variable))
 :int)

(cl:export '#.(swig-lispify "gsl_check_range" 'variable))

(cl:defconstant #.(swig-lispify "GSL_RANGE_CHECK" 'constant) 1)

(cl:export '#.(swig-lispify "GSL_RANGE_CHECK" 'constant))

(cffi:defcvar ("gsl_version" #.(swig-lispify "gsl_version" 'variable))
 :string)

(cl:export '#.(swig-lispify "gsl_version" 'variable))

(cffi:defcfun ("gsl_message" #.(swig-lispify "gsl_message" 'function)) :void
  (message :string)
  (file :string)
  (line :int)
  (mask :unsigned-int))

(cl:export '#.(swig-lispify "gsl_message" 'function))

(cffi:defcvar ("gsl_message_mask" #.(swig-lispify "gsl_message_mask" 'variable))
 :unsigned-int)

(cl:export '#.(swig-lispify "gsl_message_mask" 'variable))

(defanonenum 
	(#.(swig-lispify "GSL_MESSAGE_MASK_A" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_MESSAGE_MASK_B" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_MESSAGE_MASK_C" 'enumvalue) #.4)
	(#.(swig-lispify "GSL_MESSAGE_MASK_D" 'enumvalue) #.8)
	(#.(swig-lispify "GSL_MESSAGE_MASK_E" 'enumvalue) #.16)
	(#.(swig-lispify "GSL_MESSAGE_MASK_F" 'enumvalue) #.32)
	(#.(swig-lispify "GSL_MESSAGE_MASK_G" 'enumvalue) #.64)
	(#.(swig-lispify "GSL_MESSAGE_MASK_H" 'enumvalue) #.128))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_A" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_B" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_C" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_D" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_E" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_F" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_G" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_MESSAGE_MASK_H" 'enumvalue))

(cffi:defcfun ("gsl_ran_bernoulli" #.(swig-lispify "gsl_ran_bernoulli" 'function)) :unsigned-int
  (r :pointer)
  (p :double))

(cl:export '#.(swig-lispify "gsl_ran_bernoulli" 'function))

(cffi:defcfun ("gsl_ran_bernoulli_pdf" #.(swig-lispify "gsl_ran_bernoulli_pdf" 'function)) :double
  (k :unsigned-int)
  (p :double))

(cl:export '#.(swig-lispify "gsl_ran_bernoulli_pdf" 'function))

(cffi:defcfun ("gsl_ran_beta" #.(swig-lispify "gsl_ran_beta" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_beta" 'function))

(cffi:defcfun ("gsl_ran_beta_pdf" #.(swig-lispify "gsl_ran_beta_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_beta_pdf" 'function))

(cffi:defcfun ("gsl_ran_binomial" #.(swig-lispify "gsl_ran_binomial" 'function)) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_binomial" 'function))

(cffi:defcfun ("gsl_ran_binomial_knuth" #.(swig-lispify "gsl_ran_binomial_knuth" 'function)) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_binomial_knuth" 'function))

(cffi:defcfun ("gsl_ran_binomial_tpe" #.(swig-lispify "gsl_ran_binomial_tpe" 'function)) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_binomial_tpe" 'function))

(cffi:defcfun ("gsl_ran_binomial_pdf" #.(swig-lispify "gsl_ran_binomial_pdf" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_binomial_pdf" 'function))

(cffi:defcfun ("gsl_ran_exponential" #.(swig-lispify "gsl_ran_exponential" 'function)) :double
  (r :pointer)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_ran_exponential" 'function))

(cffi:defcfun ("gsl_ran_exponential_pdf" #.(swig-lispify "gsl_ran_exponential_pdf" 'function)) :double
  (x :double)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_ran_exponential_pdf" 'function))

(cffi:defcfun ("gsl_ran_exppow" #.(swig-lispify "gsl_ran_exppow" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_exppow" 'function))

(cffi:defcfun ("gsl_ran_exppow_pdf" #.(swig-lispify "gsl_ran_exppow_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_exppow_pdf" 'function))

(cffi:defcfun ("gsl_ran_cauchy" #.(swig-lispify "gsl_ran_cauchy" 'function)) :double
  (r :pointer)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_cauchy" 'function))

(cffi:defcfun ("gsl_ran_cauchy_pdf" #.(swig-lispify "gsl_ran_cauchy_pdf" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_cauchy_pdf" 'function))

(cffi:defcfun ("gsl_ran_chisq" #.(swig-lispify "gsl_ran_chisq" 'function)) :double
  (r :pointer)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_ran_chisq" 'function))

(cffi:defcfun ("gsl_ran_chisq_pdf" #.(swig-lispify "gsl_ran_chisq_pdf" 'function)) :double
  (x :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_ran_chisq_pdf" 'function))

(cffi:defcfun ("gsl_ran_dirichlet" #.(swig-lispify "gsl_ran_dirichlet" 'function)) :void
  (r :pointer)
  (K :pointer)
  (alpha :pointer)
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dirichlet" 'function))

(cffi:defcfun ("gsl_ran_dirichlet_pdf" #.(swig-lispify "gsl_ran_dirichlet_pdf" 'function)) :double
  (K :pointer)
  (alpha :pointer)
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dirichlet_pdf" 'function))

(cffi:defcfun ("gsl_ran_dirichlet_lnpdf" #.(swig-lispify "gsl_ran_dirichlet_lnpdf" 'function)) :double
  (K :pointer)
  (alpha :pointer)
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dirichlet_lnpdf" 'function))

(cffi:defcfun ("gsl_ran_erlang" #.(swig-lispify "gsl_ran_erlang" 'function)) :double
  (r :pointer)
  (a :double)
  (n :double))

(cl:export '#.(swig-lispify "gsl_ran_erlang" 'function))

(cffi:defcfun ("gsl_ran_erlang_pdf" #.(swig-lispify "gsl_ran_erlang_pdf" 'function)) :double
  (x :double)
  (a :double)
  (n :double))

(cl:export '#.(swig-lispify "gsl_ran_erlang_pdf" 'function))

(cffi:defcfun ("gsl_ran_fdist" #.(swig-lispify "gsl_ran_fdist" 'function)) :double
  (r :pointer)
  (nu1 :double)
  (nu2 :double))

(cl:export '#.(swig-lispify "gsl_ran_fdist" 'function))

(cffi:defcfun ("gsl_ran_fdist_pdf" #.(swig-lispify "gsl_ran_fdist_pdf" 'function)) :double
  (x :double)
  (nu1 :double)
  (nu2 :double))

(cl:export '#.(swig-lispify "gsl_ran_fdist_pdf" 'function))

(cffi:defcfun ("gsl_ran_flat" #.(swig-lispify "gsl_ran_flat" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_flat" 'function))

(cffi:defcfun ("gsl_ran_flat_pdf" #.(swig-lispify "gsl_ran_flat_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_flat_pdf" 'function))

(cffi:defcfun ("gsl_ran_gamma" #.(swig-lispify "gsl_ran_gamma" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gamma" 'function))

(cffi:defcfun ("gsl_ran_gamma_int" #.(swig-lispify "gsl_ran_gamma_int" 'function)) :double
  (r :pointer)
  (a :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_gamma_int" 'function))

(cffi:defcfun ("gsl_ran_gamma_pdf" #.(swig-lispify "gsl_ran_gamma_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gamma_pdf" 'function))

(cffi:defcfun ("gsl_ran_gamma_mt" #.(swig-lispify "gsl_ran_gamma_mt" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gamma_mt" 'function))

(cffi:defcfun ("gsl_ran_gamma_knuth" #.(swig-lispify "gsl_ran_gamma_knuth" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gamma_knuth" 'function))

(cffi:defcfun ("gsl_ran_gaussian" #.(swig-lispify "gsl_ran_gaussian" 'function)) :double
  (r :pointer)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_gaussian" 'function))

(cffi:defcfun ("gsl_ran_gaussian_ratio_method" #.(swig-lispify "gsl_ran_gaussian_ratio_method" 'function)) :double
  (r :pointer)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_gaussian_ratio_method" 'function))

(cffi:defcfun ("gsl_ran_gaussian_ziggurat" #.(swig-lispify "gsl_ran_gaussian_ziggurat" 'function)) :double
  (r :pointer)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_gaussian_ziggurat" 'function))

(cffi:defcfun ("gsl_ran_gaussian_pdf" #.(swig-lispify "gsl_ran_gaussian_pdf" 'function)) :double
  (x :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_gaussian_pdf" 'function))

(cffi:defcfun ("gsl_ran_ugaussian" #.(swig-lispify "gsl_ran_ugaussian" 'function)) :double
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_ran_ugaussian" 'function))

(cffi:defcfun ("gsl_ran_ugaussian_ratio_method" #.(swig-lispify "gsl_ran_ugaussian_ratio_method" 'function)) :double
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_ran_ugaussian_ratio_method" 'function))

(cffi:defcfun ("gsl_ran_ugaussian_pdf" #.(swig-lispify "gsl_ran_ugaussian_pdf" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_ran_ugaussian_pdf" 'function))

(cffi:defcfun ("gsl_ran_gaussian_tail" #.(swig-lispify "gsl_ran_gaussian_tail" 'function)) :double
  (r :pointer)
  (a :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_gaussian_tail" 'function))

(cffi:defcfun ("gsl_ran_gaussian_tail_pdf" #.(swig-lispify "gsl_ran_gaussian_tail_pdf" 'function)) :double
  (x :double)
  (a :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_gaussian_tail_pdf" 'function))

(cffi:defcfun ("gsl_ran_ugaussian_tail" #.(swig-lispify "gsl_ran_ugaussian_tail" 'function)) :double
  (r :pointer)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_ugaussian_tail" 'function))

(cffi:defcfun ("gsl_ran_ugaussian_tail_pdf" #.(swig-lispify "gsl_ran_ugaussian_tail_pdf" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_ugaussian_tail_pdf" 'function))

(cffi:defcfun ("gsl_ran_bivariate_gaussian" #.(swig-lispify "gsl_ran_bivariate_gaussian" 'function)) :void
  (r :pointer)
  (sigma_x :double)
  (sigma_y :double)
  (rho :double)
  (x :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_ran_bivariate_gaussian" 'function))

(cffi:defcfun ("gsl_ran_bivariate_gaussian_pdf" #.(swig-lispify "gsl_ran_bivariate_gaussian_pdf" 'function)) :double
  (x :double)
  (y :double)
  (sigma_x :double)
  (sigma_y :double)
  (rho :double))

(cl:export '#.(swig-lispify "gsl_ran_bivariate_gaussian_pdf" 'function))

(cffi:defcfun ("gsl_ran_landau" #.(swig-lispify "gsl_ran_landau" 'function)) :double
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_ran_landau" 'function))

(cffi:defcfun ("gsl_ran_landau_pdf" #.(swig-lispify "gsl_ran_landau_pdf" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_ran_landau_pdf" 'function))

(cffi:defcfun ("gsl_ran_geometric" #.(swig-lispify "gsl_ran_geometric" 'function)) :unsigned-int
  (r :pointer)
  (p :double))

(cl:export '#.(swig-lispify "gsl_ran_geometric" 'function))

(cffi:defcfun ("gsl_ran_geometric_pdf" #.(swig-lispify "gsl_ran_geometric_pdf" 'function)) :double
  (k :unsigned-int)
  (p :double))

(cl:export '#.(swig-lispify "gsl_ran_geometric_pdf" 'function))

(cffi:defcfun ("gsl_ran_hypergeometric" #.(swig-lispify "gsl_ran_hypergeometric" 'function)) :unsigned-int
  (r :pointer)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_hypergeometric" 'function))

(cffi:defcfun ("gsl_ran_hypergeometric_pdf" #.(swig-lispify "gsl_ran_hypergeometric_pdf" 'function)) :double
  (k :unsigned-int)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_hypergeometric_pdf" 'function))

(cffi:defcfun ("gsl_ran_gumbel1" #.(swig-lispify "gsl_ran_gumbel1" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gumbel1" 'function))

(cffi:defcfun ("gsl_ran_gumbel1_pdf" #.(swig-lispify "gsl_ran_gumbel1_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gumbel1_pdf" 'function))

(cffi:defcfun ("gsl_ran_gumbel2" #.(swig-lispify "gsl_ran_gumbel2" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gumbel2" 'function))

(cffi:defcfun ("gsl_ran_gumbel2_pdf" #.(swig-lispify "gsl_ran_gumbel2_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_gumbel2_pdf" 'function))

(cffi:defcfun ("gsl_ran_logistic" #.(swig-lispify "gsl_ran_logistic" 'function)) :double
  (r :pointer)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_logistic" 'function))

(cffi:defcfun ("gsl_ran_logistic_pdf" #.(swig-lispify "gsl_ran_logistic_pdf" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_logistic_pdf" 'function))

(cffi:defcfun ("gsl_ran_lognormal" #.(swig-lispify "gsl_ran_lognormal" 'function)) :double
  (r :pointer)
  (zeta :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_lognormal" 'function))

(cffi:defcfun ("gsl_ran_lognormal_pdf" #.(swig-lispify "gsl_ran_lognormal_pdf" 'function)) :double
  (x :double)
  (zeta :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_lognormal_pdf" 'function))

(cffi:defcfun ("gsl_ran_logarithmic" #.(swig-lispify "gsl_ran_logarithmic" 'function)) :unsigned-int
  (r :pointer)
  (p :double))

(cl:export '#.(swig-lispify "gsl_ran_logarithmic" 'function))

(cffi:defcfun ("gsl_ran_logarithmic_pdf" #.(swig-lispify "gsl_ran_logarithmic_pdf" 'function)) :double
  (k :unsigned-int)
  (p :double))

(cl:export '#.(swig-lispify "gsl_ran_logarithmic_pdf" 'function))

(cffi:defcfun ("gsl_ran_multinomial" #.(swig-lispify "gsl_ran_multinomial" 'function)) :void
  (r :pointer)
  (K :pointer)
  (NN :unsigned-int)
  (p :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_ran_multinomial" 'function))

(cffi:defcfun ("gsl_ran_multinomial_pdf" #.(swig-lispify "gsl_ran_multinomial_pdf" 'function)) :double
  (K :pointer)
  (p :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_ran_multinomial_pdf" 'function))

(cffi:defcfun ("gsl_ran_multinomial_lnpdf" #.(swig-lispify "gsl_ran_multinomial_lnpdf" 'function)) :double
  (K :pointer)
  (p :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_ran_multinomial_lnpdf" 'function))

(cffi:defcfun ("gsl_ran_negative_binomial" #.(swig-lispify "gsl_ran_negative_binomial" 'function)) :unsigned-int
  (r :pointer)
  (p :double)
  (n :double))

(cl:export '#.(swig-lispify "gsl_ran_negative_binomial" 'function))

(cffi:defcfun ("gsl_ran_negative_binomial_pdf" #.(swig-lispify "gsl_ran_negative_binomial_pdf" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :double))

(cl:export '#.(swig-lispify "gsl_ran_negative_binomial_pdf" 'function))

(cffi:defcfun ("gsl_ran_pascal" #.(swig-lispify "gsl_ran_pascal" 'function)) :unsigned-int
  (r :pointer)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_pascal" 'function))

(cffi:defcfun ("gsl_ran_pascal_pdf" #.(swig-lispify "gsl_ran_pascal_pdf" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_ran_pascal_pdf" 'function))

(cffi:defcfun ("gsl_ran_pareto" #.(swig-lispify "gsl_ran_pareto" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_pareto" 'function))

(cffi:defcfun ("gsl_ran_pareto_pdf" #.(swig-lispify "gsl_ran_pareto_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_pareto_pdf" 'function))

(cffi:defcfun ("gsl_ran_poisson" #.(swig-lispify "gsl_ran_poisson" 'function)) :unsigned-int
  (r :pointer)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_ran_poisson" 'function))

(cffi:defcfun ("gsl_ran_poisson_array" #.(swig-lispify "gsl_ran_poisson_array" 'function)) :void
  (r :pointer)
  (n :pointer)
  (array :pointer)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_ran_poisson_array" 'function))

(cffi:defcfun ("gsl_ran_poisson_pdf" #.(swig-lispify "gsl_ran_poisson_pdf" 'function)) :double
  (k :unsigned-int)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_ran_poisson_pdf" 'function))

(cffi:defcfun ("gsl_ran_rayleigh" #.(swig-lispify "gsl_ran_rayleigh" 'function)) :double
  (r :pointer)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_rayleigh" 'function))

(cffi:defcfun ("gsl_ran_rayleigh_pdf" #.(swig-lispify "gsl_ran_rayleigh_pdf" 'function)) :double
  (x :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_rayleigh_pdf" 'function))

(cffi:defcfun ("gsl_ran_rayleigh_tail" #.(swig-lispify "gsl_ran_rayleigh_tail" 'function)) :double
  (r :pointer)
  (a :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_rayleigh_tail" 'function))

(cffi:defcfun ("gsl_ran_rayleigh_tail_pdf" #.(swig-lispify "gsl_ran_rayleigh_tail_pdf" 'function)) :double
  (x :double)
  (a :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_ran_rayleigh_tail_pdf" 'function))

(cffi:defcfun ("gsl_ran_tdist" #.(swig-lispify "gsl_ran_tdist" 'function)) :double
  (r :pointer)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_ran_tdist" 'function))

(cffi:defcfun ("gsl_ran_tdist_pdf" #.(swig-lispify "gsl_ran_tdist_pdf" 'function)) :double
  (x :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_ran_tdist_pdf" 'function))

(cffi:defcfun ("gsl_ran_laplace" #.(swig-lispify "gsl_ran_laplace" 'function)) :double
  (r :pointer)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_laplace" 'function))

(cffi:defcfun ("gsl_ran_laplace_pdf" #.(swig-lispify "gsl_ran_laplace_pdf" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_ran_laplace_pdf" 'function))

(cffi:defcfun ("gsl_ran_levy" #.(swig-lispify "gsl_ran_levy" 'function)) :double
  (r :pointer)
  (c :double)
  (alpha :double))

(cl:export '#.(swig-lispify "gsl_ran_levy" 'function))

(cffi:defcfun ("gsl_ran_levy_skew" #.(swig-lispify "gsl_ran_levy_skew" 'function)) :double
  (r :pointer)
  (c :double)
  (alpha :double)
  (beta :double))

(cl:export '#.(swig-lispify "gsl_ran_levy_skew" 'function))

(cffi:defcfun ("gsl_ran_weibull" #.(swig-lispify "gsl_ran_weibull" 'function)) :double
  (r :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_weibull" 'function))

(cffi:defcfun ("gsl_ran_weibull_pdf" #.(swig-lispify "gsl_ran_weibull_pdf" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_ran_weibull_pdf" 'function))

(cffi:defcfun ("gsl_ran_dir_2d" #.(swig-lispify "gsl_ran_dir_2d" 'function)) :void
  (r :pointer)
  (x :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dir_2d" 'function))

(cffi:defcfun ("gsl_ran_dir_2d_trig_method" #.(swig-lispify "gsl_ran_dir_2d_trig_method" 'function)) :void
  (r :pointer)
  (x :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dir_2d_trig_method" 'function))

(cffi:defcfun ("gsl_ran_dir_3d" #.(swig-lispify "gsl_ran_dir_3d" 'function)) :void
  (r :pointer)
  (x :pointer)
  (y :pointer)
  (z :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dir_3d" 'function))

(cffi:defcfun ("gsl_ran_dir_nd" #.(swig-lispify "gsl_ran_dir_nd" 'function)) :void
  (r :pointer)
  (n :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_ran_dir_nd" 'function))

(cffi:defcfun ("gsl_ran_shuffle" #.(swig-lispify "gsl_ran_shuffle" 'function)) :void
  (r :pointer)
  (base :pointer)
  (nmembm :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_ran_shuffle" 'function))

(cffi:defcfun ("gsl_ran_choose" #.(swig-lispify "gsl_ran_choose" 'function)) :int
  (r :pointer)
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (n :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_ran_choose" 'function))

(cffi:defcfun ("gsl_ran_sample" #.(swig-lispify "gsl_ran_sample" 'function)) :void
  (r :pointer)
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (n :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_ran_sample" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_ran_discrete_t" 'classname)
	(#.(swig-lispify "K" 'slotname) :pointer)
	(#.(swig-lispify "A" 'slotname) :pointer)
	(#.(swig-lispify "F" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_ran_discrete_t" 'classname))

(cl:export '#.(swig-lispify "K" 'slotname))

(cl:export '#.(swig-lispify "A" 'slotname))

(cl:export '#.(swig-lispify "F" 'slotname))

(cffi:defcfun ("gsl_ran_discrete_preproc" #.(swig-lispify "gsl_ran_discrete_preproc" 'function)) :pointer
  (K :pointer)
  (P :pointer))

(cl:export '#.(swig-lispify "gsl_ran_discrete_preproc" 'function))

(cffi:defcfun ("gsl_ran_discrete_free" #.(swig-lispify "gsl_ran_discrete_free" 'function)) :void
  (g :pointer))

(cl:export '#.(swig-lispify "gsl_ran_discrete_free" 'function))

(cffi:defcfun ("gsl_ran_discrete" #.(swig-lispify "gsl_ran_discrete" 'function)) :pointer
  (r :pointer)
  (g :pointer))

(cl:export '#.(swig-lispify "gsl_ran_discrete" 'function))

(cffi:defcfun ("gsl_ran_discrete_pdf" #.(swig-lispify "gsl_ran_discrete_pdf" 'function)) :double
  (k :pointer)
  (g :pointer))

(cl:export '#.(swig-lispify "gsl_ran_discrete_pdf" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multiroot_function_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_function_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcfun ("gsl_multiroot_fdjacobian" #.(swig-lispify "gsl_multiroot_fdjacobian" 'function)) :int
  (FF :pointer)
  (x :pointer)
  (f :pointer)
  (epsrel :double)
  (jacobian :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdjacobian" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multiroot_fsolver_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multiroot_fsolver" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "dx" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "dx" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_multiroot_fsolver_alloc" #.(swig-lispify "gsl_multiroot_fsolver_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_alloc" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_free" #.(swig-lispify "gsl_multiroot_fsolver_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_free" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_set" #.(swig-lispify "gsl_multiroot_fsolver_set" 'function)) :int
  (s :pointer)
  (f :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_set" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_iterate" #.(swig-lispify "gsl_multiroot_fsolver_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_iterate" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_name" #.(swig-lispify "gsl_multiroot_fsolver_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_name" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_root" #.(swig-lispify "gsl_multiroot_fsolver_root" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_root" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_dx" #.(swig-lispify "gsl_multiroot_fsolver_dx" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_dx" 'function))

(cffi:defcfun ("gsl_multiroot_fsolver_f" #.(swig-lispify "gsl_multiroot_fsolver_f" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_f" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multiroot_function_fdf_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "df" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_function_fdf_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "df" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multiroot_fdfsolver_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multiroot_fdfsolver" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "J" 'slotname) :pointer)
	(#.(swig-lispify "dx" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "J" 'slotname))

(cl:export '#.(swig-lispify "dx" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_multiroot_fdfsolver_alloc" #.(swig-lispify "gsl_multiroot_fdfsolver_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_alloc" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_set" #.(swig-lispify "gsl_multiroot_fdfsolver_set" 'function)) :int
  (s :pointer)
  (fdf :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_set" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_iterate" #.(swig-lispify "gsl_multiroot_fdfsolver_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_iterate" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_free" #.(swig-lispify "gsl_multiroot_fdfsolver_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_free" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_name" #.(swig-lispify "gsl_multiroot_fdfsolver_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_name" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_root" #.(swig-lispify "gsl_multiroot_fdfsolver_root" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_root" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_dx" #.(swig-lispify "gsl_multiroot_fdfsolver_dx" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_dx" 'function))

(cffi:defcfun ("gsl_multiroot_fdfsolver_f" #.(swig-lispify "gsl_multiroot_fdfsolver_f" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_f" 'function))

(cffi:defcfun ("gsl_multiroot_test_delta" #.(swig-lispify "gsl_multiroot_test_delta" 'function)) :int
  (dx :pointer)
  (x :pointer)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_multiroot_test_delta" 'function))

(cffi:defcfun ("gsl_multiroot_test_residual" #.(swig-lispify "gsl_multiroot_test_residual" 'function)) :int
  (f :pointer)
  (epsabs :double))

(cl:export '#.(swig-lispify "gsl_multiroot_test_residual" 'function))

(cffi:defcvar ("gsl_multiroot_fsolver_dnewton" #.(swig-lispify "gsl_multiroot_fsolver_dnewton" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_dnewton" 'variable))

(cffi:defcvar ("gsl_multiroot_fsolver_broyden" #.(swig-lispify "gsl_multiroot_fsolver_broyden" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_broyden" 'variable))

(cffi:defcvar ("gsl_multiroot_fsolver_hybrid" #.(swig-lispify "gsl_multiroot_fsolver_hybrid" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_hybrid" 'variable))

(cffi:defcvar ("gsl_multiroot_fsolver_hybrids" #.(swig-lispify "gsl_multiroot_fsolver_hybrids" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fsolver_hybrids" 'variable))

(cffi:defcvar ("gsl_multiroot_fdfsolver_newton" #.(swig-lispify "gsl_multiroot_fdfsolver_newton" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_newton" 'variable))

(cffi:defcvar ("gsl_multiroot_fdfsolver_gnewton" #.(swig-lispify "gsl_multiroot_fdfsolver_gnewton" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_gnewton" 'variable))

(cffi:defcvar ("gsl_multiroot_fdfsolver_hybridj" #.(swig-lispify "gsl_multiroot_fdfsolver_hybridj" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_hybridj" 'variable))

(cffi:defcvar ("gsl_multiroot_fdfsolver_hybridsj" #.(swig-lispify "gsl_multiroot_fdfsolver_hybridsj" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multiroot_fdfsolver_hybridsj" 'variable))

(cffi:defcfun ("gsl_blas_sdsdot" #.(swig-lispify "gsl_blas_sdsdot" 'function)) :int
  (alpha :float)
  (X :pointer)
  (Y :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sdsdot" 'function))

(cffi:defcfun ("gsl_blas_dsdot" #.(swig-lispify "gsl_blas_dsdot" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsdot" 'function))

(cffi:defcfun ("gsl_blas_sdot" #.(swig-lispify "gsl_blas_sdot" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sdot" 'function))

(cffi:defcfun ("gsl_blas_ddot" #.(swig-lispify "gsl_blas_ddot" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ddot" 'function))

(cffi:defcfun ("gsl_blas_cdotu" #.(swig-lispify "gsl_blas_cdotu" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (dotu :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cdotu" 'function))

(cffi:defcfun ("gsl_blas_cdotc" #.(swig-lispify "gsl_blas_cdotc" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (dotc :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cdotc" 'function))

(cffi:defcfun ("gsl_blas_zdotu" #.(swig-lispify "gsl_blas_zdotu" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (dotu :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zdotu" 'function))

(cffi:defcfun ("gsl_blas_zdotc" #.(swig-lispify "gsl_blas_zdotc" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (dotc :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zdotc" 'function))

(cffi:defcfun ("gsl_blas_snrm2" #.(swig-lispify "gsl_blas_snrm2" 'function)) :float
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_snrm2" 'function))

(cffi:defcfun ("gsl_blas_sasum" #.(swig-lispify "gsl_blas_sasum" 'function)) :float
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sasum" 'function))

(cffi:defcfun ("gsl_blas_dnrm2" #.(swig-lispify "gsl_blas_dnrm2" 'function)) :double
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dnrm2" 'function))

(cffi:defcfun ("gsl_blas_dasum" #.(swig-lispify "gsl_blas_dasum" 'function)) :double
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dasum" 'function))

(cffi:defcfun ("gsl_blas_scnrm2" #.(swig-lispify "gsl_blas_scnrm2" 'function)) :float
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_scnrm2" 'function))

(cffi:defcfun ("gsl_blas_scasum" #.(swig-lispify "gsl_blas_scasum" 'function)) :float
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_scasum" 'function))

(cffi:defcfun ("gsl_blas_dznrm2" #.(swig-lispify "gsl_blas_dznrm2" 'function)) :double
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dznrm2" 'function))

(cffi:defcfun ("gsl_blas_dzasum" #.(swig-lispify "gsl_blas_dzasum" 'function)) :double
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dzasum" 'function))

(cffi:defcfun ("gsl_blas_isamax" #.(swig-lispify "gsl_blas_isamax" 'function)) :pointer
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_isamax" 'function))

(cffi:defcfun ("gsl_blas_idamax" #.(swig-lispify "gsl_blas_idamax" 'function)) :pointer
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_idamax" 'function))

(cffi:defcfun ("gsl_blas_icamax" #.(swig-lispify "gsl_blas_icamax" 'function)) :pointer
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_icamax" 'function))

(cffi:defcfun ("gsl_blas_izamax" #.(swig-lispify "gsl_blas_izamax" 'function)) :pointer
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_izamax" 'function))

(cffi:defcfun ("gsl_blas_sswap" #.(swig-lispify "gsl_blas_sswap" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sswap" 'function))

(cffi:defcfun ("gsl_blas_scopy" #.(swig-lispify "gsl_blas_scopy" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_scopy" 'function))

(cffi:defcfun ("gsl_blas_saxpy" #.(swig-lispify "gsl_blas_saxpy" 'function)) :int
  (alpha :float)
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_saxpy" 'function))

(cffi:defcfun ("gsl_blas_dswap" #.(swig-lispify "gsl_blas_dswap" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dswap" 'function))

(cffi:defcfun ("gsl_blas_dcopy" #.(swig-lispify "gsl_blas_dcopy" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dcopy" 'function))

(cffi:defcfun ("gsl_blas_daxpy" #.(swig-lispify "gsl_blas_daxpy" 'function)) :int
  (alpha :double)
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_daxpy" 'function))

(cffi:defcfun ("gsl_blas_cswap" #.(swig-lispify "gsl_blas_cswap" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cswap" 'function))

(cffi:defcfun ("gsl_blas_ccopy" #.(swig-lispify "gsl_blas_ccopy" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ccopy" 'function))

(cffi:defcfun ("gsl_blas_caxpy" #.(swig-lispify "gsl_blas_caxpy" 'function)) :int
  (alpha :pointer)
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_caxpy" 'function))

(cffi:defcfun ("gsl_blas_zswap" #.(swig-lispify "gsl_blas_zswap" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zswap" 'function))

(cffi:defcfun ("gsl_blas_zcopy" #.(swig-lispify "gsl_blas_zcopy" 'function)) :int
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zcopy" 'function))

(cffi:defcfun ("gsl_blas_zaxpy" #.(swig-lispify "gsl_blas_zaxpy" 'function)) :int
  (alpha :pointer)
  (X :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zaxpy" 'function))

(cffi:defcfun ("gsl_blas_srotg" #.(swig-lispify "gsl_blas_srotg" 'function)) :int
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_blas_srotg" 'function))

(cffi:defcfun ("gsl_blas_srotmg" #.(swig-lispify "gsl_blas_srotmg" 'function)) :int
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :float)
  (P :pointer))

(cl:export '#.(swig-lispify "gsl_blas_srotmg" 'function))

(cffi:defcfun ("gsl_blas_srot" #.(swig-lispify "gsl_blas_srot" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (c :float)
  (s :float))

(cl:export '#.(swig-lispify "gsl_blas_srot" 'function))

(cffi:defcfun ("gsl_blas_srotm" #.(swig-lispify "gsl_blas_srotm" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (P :pointer))

(cl:export '#.(swig-lispify "gsl_blas_srotm" 'function))

(cffi:defcfun ("gsl_blas_drotg" #.(swig-lispify "gsl_blas_drotg" 'function)) :int
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_blas_drotg" 'function))

(cffi:defcfun ("gsl_blas_drotmg" #.(swig-lispify "gsl_blas_drotmg" 'function)) :int
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :double)
  (P :pointer))

(cl:export '#.(swig-lispify "gsl_blas_drotmg" 'function))

(cffi:defcfun ("gsl_blas_drot" #.(swig-lispify "gsl_blas_drot" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (c :double)
  (s :double))

(cl:export '#.(swig-lispify "gsl_blas_drot" 'function))

(cffi:defcfun ("gsl_blas_drotm" #.(swig-lispify "gsl_blas_drotm" 'function)) :int
  (X :pointer)
  (Y :pointer)
  (P :pointer))

(cl:export '#.(swig-lispify "gsl_blas_drotm" 'function))

(cffi:defcfun ("gsl_blas_sscal" #.(swig-lispify "gsl_blas_sscal" 'function)) :void
  (alpha :float)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sscal" 'function))

(cffi:defcfun ("gsl_blas_dscal" #.(swig-lispify "gsl_blas_dscal" 'function)) :void
  (alpha :double)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dscal" 'function))

(cffi:defcfun ("gsl_blas_cscal" #.(swig-lispify "gsl_blas_cscal" 'function)) :void
  (alpha :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cscal" 'function))

(cffi:defcfun ("gsl_blas_zscal" #.(swig-lispify "gsl_blas_zscal" 'function)) :void
  (alpha :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zscal" 'function))

(cffi:defcfun ("gsl_blas_csscal" #.(swig-lispify "gsl_blas_csscal" 'function)) :void
  (alpha :float)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_csscal" 'function))

(cffi:defcfun ("gsl_blas_zdscal" #.(swig-lispify "gsl_blas_zdscal" 'function)) :void
  (alpha :double)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zdscal" 'function))

(cffi:defcfun ("gsl_blas_sgemv" #.(swig-lispify "gsl_blas_sgemv" 'function)) :int
  (TransA :pointer)
  (alpha :float)
  (A :pointer)
  (X :pointer)
  (beta :float)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sgemv" 'function))

(cffi:defcfun ("gsl_blas_strmv" #.(swig-lispify "gsl_blas_strmv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_strmv" 'function))

(cffi:defcfun ("gsl_blas_strsv" #.(swig-lispify "gsl_blas_strsv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_strsv" 'function))

(cffi:defcfun ("gsl_blas_dgemv" #.(swig-lispify "gsl_blas_dgemv" 'function)) :int
  (TransA :pointer)
  (alpha :double)
  (A :pointer)
  (X :pointer)
  (beta :double)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dgemv" 'function))

(cffi:defcfun ("gsl_blas_dtrmv" #.(swig-lispify "gsl_blas_dtrmv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dtrmv" 'function))

(cffi:defcfun ("gsl_blas_dtrsv" #.(swig-lispify "gsl_blas_dtrsv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dtrsv" 'function))

(cffi:defcfun ("gsl_blas_cgemv" #.(swig-lispify "gsl_blas_cgemv" 'function)) :int
  (TransA :pointer)
  (alpha :pointer)
  (A :pointer)
  (X :pointer)
  (beta :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cgemv" 'function))

(cffi:defcfun ("gsl_blas_ctrmv" #.(swig-lispify "gsl_blas_ctrmv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ctrmv" 'function))

(cffi:defcfun ("gsl_blas_ctrsv" #.(swig-lispify "gsl_blas_ctrsv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ctrsv" 'function))

(cffi:defcfun ("gsl_blas_zgemv" #.(swig-lispify "gsl_blas_zgemv" 'function)) :int
  (TransA :pointer)
  (alpha :pointer)
  (A :pointer)
  (X :pointer)
  (beta :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zgemv" 'function))

(cffi:defcfun ("gsl_blas_ztrmv" #.(swig-lispify "gsl_blas_ztrmv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ztrmv" 'function))

(cffi:defcfun ("gsl_blas_ztrsv" #.(swig-lispify "gsl_blas_ztrsv" 'function)) :int
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (A :pointer)
  (X :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ztrsv" 'function))

(cffi:defcfun ("gsl_blas_ssymv" #.(swig-lispify "gsl_blas_ssymv" 'function)) :int
  (Uplo :pointer)
  (alpha :float)
  (A :pointer)
  (X :pointer)
  (beta :float)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ssymv" 'function))

(cffi:defcfun ("gsl_blas_sger" #.(swig-lispify "gsl_blas_sger" 'function)) :int
  (alpha :float)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sger" 'function))

(cffi:defcfun ("gsl_blas_ssyr" #.(swig-lispify "gsl_blas_ssyr" 'function)) :int
  (Uplo :pointer)
  (alpha :float)
  (X :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ssyr" 'function))

(cffi:defcfun ("gsl_blas_ssyr2" #.(swig-lispify "gsl_blas_ssyr2" 'function)) :int
  (Uplo :pointer)
  (alpha :float)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ssyr2" 'function))

(cffi:defcfun ("gsl_blas_dsymv" #.(swig-lispify "gsl_blas_dsymv" 'function)) :int
  (Uplo :pointer)
  (alpha :double)
  (A :pointer)
  (X :pointer)
  (beta :double)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsymv" 'function))

(cffi:defcfun ("gsl_blas_dger" #.(swig-lispify "gsl_blas_dger" 'function)) :int
  (alpha :double)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dger" 'function))

(cffi:defcfun ("gsl_blas_dsyr" #.(swig-lispify "gsl_blas_dsyr" 'function)) :int
  (Uplo :pointer)
  (alpha :double)
  (X :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsyr" 'function))

(cffi:defcfun ("gsl_blas_dsyr2" #.(swig-lispify "gsl_blas_dsyr2" 'function)) :int
  (Uplo :pointer)
  (alpha :double)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsyr2" 'function))

(cffi:defcfun ("gsl_blas_chemv" #.(swig-lispify "gsl_blas_chemv" 'function)) :int
  (Uplo :pointer)
  (alpha :pointer)
  (A :pointer)
  (X :pointer)
  (beta :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_chemv" 'function))

(cffi:defcfun ("gsl_blas_cgeru" #.(swig-lispify "gsl_blas_cgeru" 'function)) :int
  (alpha :pointer)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cgeru" 'function))

(cffi:defcfun ("gsl_blas_cgerc" #.(swig-lispify "gsl_blas_cgerc" 'function)) :int
  (alpha :pointer)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cgerc" 'function))

(cffi:defcfun ("gsl_blas_cher" #.(swig-lispify "gsl_blas_cher" 'function)) :int
  (Uplo :pointer)
  (alpha :float)
  (X :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cher" 'function))

(cffi:defcfun ("gsl_blas_cher2" #.(swig-lispify "gsl_blas_cher2" 'function)) :int
  (Uplo :pointer)
  (alpha :pointer)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cher2" 'function))

(cffi:defcfun ("gsl_blas_zhemv" #.(swig-lispify "gsl_blas_zhemv" 'function)) :int
  (Uplo :pointer)
  (alpha :pointer)
  (A :pointer)
  (X :pointer)
  (beta :pointer)
  (Y :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zhemv" 'function))

(cffi:defcfun ("gsl_blas_zgeru" #.(swig-lispify "gsl_blas_zgeru" 'function)) :int
  (alpha :pointer)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zgeru" 'function))

(cffi:defcfun ("gsl_blas_zgerc" #.(swig-lispify "gsl_blas_zgerc" 'function)) :int
  (alpha :pointer)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zgerc" 'function))

(cffi:defcfun ("gsl_blas_zher" #.(swig-lispify "gsl_blas_zher" 'function)) :int
  (Uplo :pointer)
  (alpha :double)
  (X :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zher" 'function))

(cffi:defcfun ("gsl_blas_zher2" #.(swig-lispify "gsl_blas_zher2" 'function)) :int
  (Uplo :pointer)
  (alpha :pointer)
  (X :pointer)
  (Y :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zher2" 'function))

(cffi:defcfun ("gsl_blas_sgemm" #.(swig-lispify "gsl_blas_sgemm" 'function)) :int
  (TransA :pointer)
  (TransB :pointer)
  (alpha :float)
  (A :pointer)
  (B :pointer)
  (beta :float)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_sgemm" 'function))

(cffi:defcfun ("gsl_blas_ssymm" #.(swig-lispify "gsl_blas_ssymm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (alpha :float)
  (A :pointer)
  (B :pointer)
  (beta :float)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ssymm" 'function))

(cffi:defcfun ("gsl_blas_ssyrk" #.(swig-lispify "gsl_blas_ssyrk" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :float)
  (A :pointer)
  (beta :float)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ssyrk" 'function))

(cffi:defcfun ("gsl_blas_ssyr2k" #.(swig-lispify "gsl_blas_ssyr2k" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :float)
  (A :pointer)
  (B :pointer)
  (beta :float)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ssyr2k" 'function))

(cffi:defcfun ("gsl_blas_strmm" #.(swig-lispify "gsl_blas_strmm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :float)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_strmm" 'function))

(cffi:defcfun ("gsl_blas_strsm" #.(swig-lispify "gsl_blas_strsm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :float)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_strsm" 'function))

(cffi:defcfun ("gsl_blas_dgemm" #.(swig-lispify "gsl_blas_dgemm" 'function)) :int
  (TransA :pointer)
  (TransB :pointer)
  (alpha :double)
  (A :pointer)
  (B :pointer)
  (beta :double)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dgemm" 'function))

(cffi:defcfun ("gsl_blas_dsymm" #.(swig-lispify "gsl_blas_dsymm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (alpha :double)
  (A :pointer)
  (B :pointer)
  (beta :double)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsymm" 'function))

(cffi:defcfun ("gsl_blas_dsyrk" #.(swig-lispify "gsl_blas_dsyrk" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :double)
  (A :pointer)
  (beta :double)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsyrk" 'function))

(cffi:defcfun ("gsl_blas_dsyr2k" #.(swig-lispify "gsl_blas_dsyr2k" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :double)
  (A :pointer)
  (B :pointer)
  (beta :double)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dsyr2k" 'function))

(cffi:defcfun ("gsl_blas_dtrmm" #.(swig-lispify "gsl_blas_dtrmm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :double)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dtrmm" 'function))

(cffi:defcfun ("gsl_blas_dtrsm" #.(swig-lispify "gsl_blas_dtrsm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :double)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_dtrsm" 'function))

(cffi:defcfun ("gsl_blas_cgemm" #.(swig-lispify "gsl_blas_cgemm" 'function)) :int
  (TransA :pointer)
  (TransB :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cgemm" 'function))

(cffi:defcfun ("gsl_blas_csymm" #.(swig-lispify "gsl_blas_csymm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_csymm" 'function))

(cffi:defcfun ("gsl_blas_csyrk" #.(swig-lispify "gsl_blas_csyrk" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :pointer)
  (A :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_csyrk" 'function))

(cffi:defcfun ("gsl_blas_csyr2k" #.(swig-lispify "gsl_blas_csyr2k" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_csyr2k" 'function))

(cffi:defcfun ("gsl_blas_ctrmm" #.(swig-lispify "gsl_blas_ctrmm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ctrmm" 'function))

(cffi:defcfun ("gsl_blas_ctrsm" #.(swig-lispify "gsl_blas_ctrsm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ctrsm" 'function))

(cffi:defcfun ("gsl_blas_zgemm" #.(swig-lispify "gsl_blas_zgemm" 'function)) :int
  (TransA :pointer)
  (TransB :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zgemm" 'function))

(cffi:defcfun ("gsl_blas_zsymm" #.(swig-lispify "gsl_blas_zsymm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zsymm" 'function))

(cffi:defcfun ("gsl_blas_zsyrk" #.(swig-lispify "gsl_blas_zsyrk" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :pointer)
  (A :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zsyrk" 'function))

(cffi:defcfun ("gsl_blas_zsyr2k" #.(swig-lispify "gsl_blas_zsyr2k" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zsyr2k" 'function))

(cffi:defcfun ("gsl_blas_ztrmm" #.(swig-lispify "gsl_blas_ztrmm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ztrmm" 'function))

(cffi:defcfun ("gsl_blas_ztrsm" #.(swig-lispify "gsl_blas_ztrsm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (TransA :pointer)
  (Diag :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_blas_ztrsm" 'function))

(cffi:defcfun ("gsl_blas_chemm" #.(swig-lispify "gsl_blas_chemm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_chemm" 'function))

(cffi:defcfun ("gsl_blas_cherk" #.(swig-lispify "gsl_blas_cherk" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :float)
  (A :pointer)
  (beta :float)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cherk" 'function))

(cffi:defcfun ("gsl_blas_cher2k" #.(swig-lispify "gsl_blas_cher2k" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :float)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_cher2k" 'function))

(cffi:defcfun ("gsl_blas_zhemm" #.(swig-lispify "gsl_blas_zhemm" 'function)) :int
  (Side :pointer)
  (Uplo :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zhemm" 'function))

(cffi:defcfun ("gsl_blas_zherk" #.(swig-lispify "gsl_blas_zherk" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :double)
  (A :pointer)
  (beta :double)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zherk" 'function))

(cffi:defcfun ("gsl_blas_zher2k" #.(swig-lispify "gsl_blas_zher2k" 'function)) :int
  (Uplo :pointer)
  (Trans :pointer)
  (alpha :pointer)
  (A :pointer)
  (B :pointer)
  (beta :double)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_blas_zher2k" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_char_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :string))

(cl:export '#.(swig-lispify "gsl_block_char_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_char_alloc" #.(swig-lispify "gsl_block_char_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_alloc" 'function))

(cffi:defcfun ("gsl_block_char_calloc" #.(swig-lispify "gsl_block_char_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_calloc" 'function))

(cffi:defcfun ("gsl_block_char_free" #.(swig-lispify "gsl_block_char_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_free" 'function))

(cffi:defcfun ("gsl_block_char_fread" #.(swig-lispify "gsl_block_char_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_fread" 'function))

(cffi:defcfun ("gsl_block_char_fwrite" #.(swig-lispify "gsl_block_char_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_fwrite" 'function))

(cffi:defcfun ("gsl_block_char_fscanf" #.(swig-lispify "gsl_block_char_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_fscanf" 'function))

(cffi:defcfun ("gsl_block_char_fprintf" #.(swig-lispify "gsl_block_char_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_char_fprintf" 'function))

(cffi:defcfun ("gsl_block_char_raw_fread" #.(swig-lispify "gsl_block_char_raw_fread" 'function)) :int
  (stream :pointer)
  (b :string)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_raw_fread" 'function))

(cffi:defcfun ("gsl_block_char_raw_fwrite" #.(swig-lispify "gsl_block_char_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :string)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_char_raw_fscanf" #.(swig-lispify "gsl_block_char_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :string)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_char_raw_fprintf" #.(swig-lispify "gsl_block_char_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :string)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_char_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_char_size" #.(swig-lispify "gsl_block_char_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_size" 'function))

(cffi:defcfun ("gsl_block_char_data" #.(swig-lispify "gsl_block_char_data" 'function)) :string
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_char_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_complex_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_complex_alloc" #.(swig-lispify "gsl_block_complex_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_alloc" 'function))

(cffi:defcfun ("gsl_block_complex_calloc" #.(swig-lispify "gsl_block_complex_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_calloc" 'function))

(cffi:defcfun ("gsl_block_complex_free" #.(swig-lispify "gsl_block_complex_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_free" 'function))

(cffi:defcfun ("gsl_block_complex_fread" #.(swig-lispify "gsl_block_complex_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_fread" 'function))

(cffi:defcfun ("gsl_block_complex_fwrite" #.(swig-lispify "gsl_block_complex_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_fwrite" 'function))

(cffi:defcfun ("gsl_block_complex_fscanf" #.(swig-lispify "gsl_block_complex_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_fscanf" 'function))

(cffi:defcfun ("gsl_block_complex_fprintf" #.(swig-lispify "gsl_block_complex_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_complex_fprintf" 'function))

(cffi:defcfun ("gsl_block_complex_raw_fread" #.(swig-lispify "gsl_block_complex_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_raw_fread" 'function))

(cffi:defcfun ("gsl_block_complex_raw_fwrite" #.(swig-lispify "gsl_block_complex_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_complex_raw_fscanf" #.(swig-lispify "gsl_block_complex_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_complex_raw_fprintf" #.(swig-lispify "gsl_block_complex_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_complex_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_complex_size" #.(swig-lispify "gsl_block_complex_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_size" 'function))

(cffi:defcfun ("gsl_block_complex_data" #.(swig-lispify "gsl_block_complex_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_complex_float_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_complex_float_alloc" #.(swig-lispify "gsl_block_complex_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_alloc" 'function))

(cffi:defcfun ("gsl_block_complex_float_calloc" #.(swig-lispify "gsl_block_complex_float_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_calloc" 'function))

(cffi:defcfun ("gsl_block_complex_float_free" #.(swig-lispify "gsl_block_complex_float_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_free" 'function))

(cffi:defcfun ("gsl_block_complex_float_fread" #.(swig-lispify "gsl_block_complex_float_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_fread" 'function))

(cffi:defcfun ("gsl_block_complex_float_fwrite" #.(swig-lispify "gsl_block_complex_float_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_fwrite" 'function))

(cffi:defcfun ("gsl_block_complex_float_fscanf" #.(swig-lispify "gsl_block_complex_float_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_fscanf" 'function))

(cffi:defcfun ("gsl_block_complex_float_fprintf" #.(swig-lispify "gsl_block_complex_float_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_complex_float_fprintf" 'function))

(cffi:defcfun ("gsl_block_complex_float_raw_fread" #.(swig-lispify "gsl_block_complex_float_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_raw_fread" 'function))

(cffi:defcfun ("gsl_block_complex_float_raw_fwrite" #.(swig-lispify "gsl_block_complex_float_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_complex_float_raw_fscanf" #.(swig-lispify "gsl_block_complex_float_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_complex_float_raw_fprintf" #.(swig-lispify "gsl_block_complex_float_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_complex_float_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_complex_float_size" #.(swig-lispify "gsl_block_complex_float_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_size" 'function))

(cffi:defcfun ("gsl_block_complex_float_data" #.(swig-lispify "gsl_block_complex_float_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_float_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_complex_long_double_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_complex_long_double_alloc" #.(swig-lispify "gsl_block_complex_long_double_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_alloc" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_calloc" #.(swig-lispify "gsl_block_complex_long_double_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_calloc" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_free" #.(swig-lispify "gsl_block_complex_long_double_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_free" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_fread" #.(swig-lispify "gsl_block_complex_long_double_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_fread" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_fwrite" #.(swig-lispify "gsl_block_complex_long_double_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_fwrite" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_fscanf" #.(swig-lispify "gsl_block_complex_long_double_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_fscanf" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_fprintf" #.(swig-lispify "gsl_block_complex_long_double_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_fprintf" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_raw_fread" #.(swig-lispify "gsl_block_complex_long_double_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_raw_fread" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_raw_fwrite" #.(swig-lispify "gsl_block_complex_long_double_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_raw_fscanf" #.(swig-lispify "gsl_block_complex_long_double_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_raw_fprintf" #.(swig-lispify "gsl_block_complex_long_double_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_size" #.(swig-lispify "gsl_block_complex_long_double_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_size" 'function))

(cffi:defcfun ("gsl_block_complex_long_double_data" #.(swig-lispify "gsl_block_complex_long_double_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_complex_long_double_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_alloc" #.(swig-lispify "gsl_block_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_alloc" 'function))

(cffi:defcfun ("gsl_block_calloc" #.(swig-lispify "gsl_block_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_calloc" 'function))

(cffi:defcfun ("gsl_block_free" #.(swig-lispify "gsl_block_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_free" 'function))

(cffi:defcfun ("gsl_block_fread" #.(swig-lispify "gsl_block_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_fread" 'function))

(cffi:defcfun ("gsl_block_fwrite" #.(swig-lispify "gsl_block_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_fwrite" 'function))

(cffi:defcfun ("gsl_block_fscanf" #.(swig-lispify "gsl_block_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_fscanf" 'function))

(cffi:defcfun ("gsl_block_fprintf" #.(swig-lispify "gsl_block_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_fprintf" 'function))

(cffi:defcfun ("gsl_block_raw_fread" #.(swig-lispify "gsl_block_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_raw_fread" 'function))

(cffi:defcfun ("gsl_block_raw_fwrite" #.(swig-lispify "gsl_block_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_raw_fscanf" #.(swig-lispify "gsl_block_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_raw_fprintf" #.(swig-lispify "gsl_block_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_size" #.(swig-lispify "gsl_block_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_size" 'function))

(cffi:defcfun ("gsl_block_data" #.(swig-lispify "gsl_block_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_float_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_float_alloc" #.(swig-lispify "gsl_block_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_alloc" 'function))

(cffi:defcfun ("gsl_block_float_calloc" #.(swig-lispify "gsl_block_float_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_calloc" 'function))

(cffi:defcfun ("gsl_block_float_free" #.(swig-lispify "gsl_block_float_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_free" 'function))

(cffi:defcfun ("gsl_block_float_fread" #.(swig-lispify "gsl_block_float_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_fread" 'function))

(cffi:defcfun ("gsl_block_float_fwrite" #.(swig-lispify "gsl_block_float_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_fwrite" 'function))

(cffi:defcfun ("gsl_block_float_fscanf" #.(swig-lispify "gsl_block_float_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_fscanf" 'function))

(cffi:defcfun ("gsl_block_float_fprintf" #.(swig-lispify "gsl_block_float_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_float_fprintf" 'function))

(cffi:defcfun ("gsl_block_float_raw_fread" #.(swig-lispify "gsl_block_float_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_raw_fread" 'function))

(cffi:defcfun ("gsl_block_float_raw_fwrite" #.(swig-lispify "gsl_block_float_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_float_raw_fscanf" #.(swig-lispify "gsl_block_float_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_float_raw_fprintf" #.(swig-lispify "gsl_block_float_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_float_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_float_size" #.(swig-lispify "gsl_block_float_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_size" 'function))

(cffi:defcfun ("gsl_block_float_data" #.(swig-lispify "gsl_block_float_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_float_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_int_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_int_alloc" #.(swig-lispify "gsl_block_int_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_alloc" 'function))

(cffi:defcfun ("gsl_block_int_calloc" #.(swig-lispify "gsl_block_int_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_calloc" 'function))

(cffi:defcfun ("gsl_block_int_free" #.(swig-lispify "gsl_block_int_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_free" 'function))

(cffi:defcfun ("gsl_block_int_fread" #.(swig-lispify "gsl_block_int_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_fread" 'function))

(cffi:defcfun ("gsl_block_int_fwrite" #.(swig-lispify "gsl_block_int_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_fwrite" 'function))

(cffi:defcfun ("gsl_block_int_fscanf" #.(swig-lispify "gsl_block_int_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_fscanf" 'function))

(cffi:defcfun ("gsl_block_int_fprintf" #.(swig-lispify "gsl_block_int_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_int_fprintf" 'function))

(cffi:defcfun ("gsl_block_int_raw_fread" #.(swig-lispify "gsl_block_int_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_raw_fread" 'function))

(cffi:defcfun ("gsl_block_int_raw_fwrite" #.(swig-lispify "gsl_block_int_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_int_raw_fscanf" #.(swig-lispify "gsl_block_int_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_int_raw_fprintf" #.(swig-lispify "gsl_block_int_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_int_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_int_size" #.(swig-lispify "gsl_block_int_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_size" 'function))

(cffi:defcfun ("gsl_block_int_data" #.(swig-lispify "gsl_block_int_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_int_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_long_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_long_alloc" #.(swig-lispify "gsl_block_long_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_alloc" 'function))

(cffi:defcfun ("gsl_block_long_calloc" #.(swig-lispify "gsl_block_long_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_calloc" 'function))

(cffi:defcfun ("gsl_block_long_free" #.(swig-lispify "gsl_block_long_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_free" 'function))

(cffi:defcfun ("gsl_block_long_fread" #.(swig-lispify "gsl_block_long_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_fread" 'function))

(cffi:defcfun ("gsl_block_long_fwrite" #.(swig-lispify "gsl_block_long_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_fwrite" 'function))

(cffi:defcfun ("gsl_block_long_fscanf" #.(swig-lispify "gsl_block_long_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_fscanf" 'function))

(cffi:defcfun ("gsl_block_long_fprintf" #.(swig-lispify "gsl_block_long_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_long_fprintf" 'function))

(cffi:defcfun ("gsl_block_long_raw_fread" #.(swig-lispify "gsl_block_long_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_raw_fread" 'function))

(cffi:defcfun ("gsl_block_long_raw_fwrite" #.(swig-lispify "gsl_block_long_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_long_raw_fscanf" #.(swig-lispify "gsl_block_long_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_long_raw_fprintf" #.(swig-lispify "gsl_block_long_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_long_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_long_size" #.(swig-lispify "gsl_block_long_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_size" 'function))

(cffi:defcfun ("gsl_block_long_data" #.(swig-lispify "gsl_block_long_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_long_double_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_long_double_alloc" #.(swig-lispify "gsl_block_long_double_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_alloc" 'function))

(cffi:defcfun ("gsl_block_long_double_calloc" #.(swig-lispify "gsl_block_long_double_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_calloc" 'function))

(cffi:defcfun ("gsl_block_long_double_free" #.(swig-lispify "gsl_block_long_double_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_free" 'function))

(cffi:defcfun ("gsl_block_long_double_fread" #.(swig-lispify "gsl_block_long_double_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_fread" 'function))

(cffi:defcfun ("gsl_block_long_double_fwrite" #.(swig-lispify "gsl_block_long_double_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_fwrite" 'function))

(cffi:defcfun ("gsl_block_long_double_fscanf" #.(swig-lispify "gsl_block_long_double_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_fscanf" 'function))

(cffi:defcfun ("gsl_block_long_double_fprintf" #.(swig-lispify "gsl_block_long_double_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_long_double_fprintf" 'function))

(cffi:defcfun ("gsl_block_long_double_raw_fread" #.(swig-lispify "gsl_block_long_double_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_raw_fread" 'function))

(cffi:defcfun ("gsl_block_long_double_raw_fwrite" #.(swig-lispify "gsl_block_long_double_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_long_double_raw_fscanf" #.(swig-lispify "gsl_block_long_double_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_long_double_raw_fprintf" #.(swig-lispify "gsl_block_long_double_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_long_double_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_long_double_size" #.(swig-lispify "gsl_block_long_double_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_size" 'function))

(cffi:defcfun ("gsl_block_long_double_data" #.(swig-lispify "gsl_block_long_double_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_long_double_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_short_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_short_alloc" #.(swig-lispify "gsl_block_short_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_alloc" 'function))

(cffi:defcfun ("gsl_block_short_calloc" #.(swig-lispify "gsl_block_short_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_calloc" 'function))

(cffi:defcfun ("gsl_block_short_free" #.(swig-lispify "gsl_block_short_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_free" 'function))

(cffi:defcfun ("gsl_block_short_fread" #.(swig-lispify "gsl_block_short_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_fread" 'function))

(cffi:defcfun ("gsl_block_short_fwrite" #.(swig-lispify "gsl_block_short_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_fwrite" 'function))

(cffi:defcfun ("gsl_block_short_fscanf" #.(swig-lispify "gsl_block_short_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_fscanf" 'function))

(cffi:defcfun ("gsl_block_short_fprintf" #.(swig-lispify "gsl_block_short_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_short_fprintf" 'function))

(cffi:defcfun ("gsl_block_short_raw_fread" #.(swig-lispify "gsl_block_short_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_raw_fread" 'function))

(cffi:defcfun ("gsl_block_short_raw_fwrite" #.(swig-lispify "gsl_block_short_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_short_raw_fscanf" #.(swig-lispify "gsl_block_short_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_short_raw_fprintf" #.(swig-lispify "gsl_block_short_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_short_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_short_size" #.(swig-lispify "gsl_block_short_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_size" 'function))

(cffi:defcfun ("gsl_block_short_data" #.(swig-lispify "gsl_block_short_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_short_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_uchar_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_uchar_alloc" #.(swig-lispify "gsl_block_uchar_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_alloc" 'function))

(cffi:defcfun ("gsl_block_uchar_calloc" #.(swig-lispify "gsl_block_uchar_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_calloc" 'function))

(cffi:defcfun ("gsl_block_uchar_free" #.(swig-lispify "gsl_block_uchar_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_free" 'function))

(cffi:defcfun ("gsl_block_uchar_fread" #.(swig-lispify "gsl_block_uchar_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_fread" 'function))

(cffi:defcfun ("gsl_block_uchar_fwrite" #.(swig-lispify "gsl_block_uchar_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_fwrite" 'function))

(cffi:defcfun ("gsl_block_uchar_fscanf" #.(swig-lispify "gsl_block_uchar_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_fscanf" 'function))

(cffi:defcfun ("gsl_block_uchar_fprintf" #.(swig-lispify "gsl_block_uchar_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_uchar_fprintf" 'function))

(cffi:defcfun ("gsl_block_uchar_raw_fread" #.(swig-lispify "gsl_block_uchar_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_raw_fread" 'function))

(cffi:defcfun ("gsl_block_uchar_raw_fwrite" #.(swig-lispify "gsl_block_uchar_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_uchar_raw_fscanf" #.(swig-lispify "gsl_block_uchar_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_uchar_raw_fprintf" #.(swig-lispify "gsl_block_uchar_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_uchar_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_uchar_size" #.(swig-lispify "gsl_block_uchar_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_size" 'function))

(cffi:defcfun ("gsl_block_uchar_data" #.(swig-lispify "gsl_block_uchar_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uchar_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_uint_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_uint_alloc" #.(swig-lispify "gsl_block_uint_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_alloc" 'function))

(cffi:defcfun ("gsl_block_uint_calloc" #.(swig-lispify "gsl_block_uint_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_calloc" 'function))

(cffi:defcfun ("gsl_block_uint_free" #.(swig-lispify "gsl_block_uint_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_free" 'function))

(cffi:defcfun ("gsl_block_uint_fread" #.(swig-lispify "gsl_block_uint_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_fread" 'function))

(cffi:defcfun ("gsl_block_uint_fwrite" #.(swig-lispify "gsl_block_uint_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_fwrite" 'function))

(cffi:defcfun ("gsl_block_uint_fscanf" #.(swig-lispify "gsl_block_uint_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_fscanf" 'function))

(cffi:defcfun ("gsl_block_uint_fprintf" #.(swig-lispify "gsl_block_uint_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_uint_fprintf" 'function))

(cffi:defcfun ("gsl_block_uint_raw_fread" #.(swig-lispify "gsl_block_uint_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_raw_fread" 'function))

(cffi:defcfun ("gsl_block_uint_raw_fwrite" #.(swig-lispify "gsl_block_uint_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_uint_raw_fscanf" #.(swig-lispify "gsl_block_uint_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_uint_raw_fprintf" #.(swig-lispify "gsl_block_uint_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_uint_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_uint_size" #.(swig-lispify "gsl_block_uint_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_size" 'function))

(cffi:defcfun ("gsl_block_uint_data" #.(swig-lispify "gsl_block_uint_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_uint_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_ulong_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_ulong_alloc" #.(swig-lispify "gsl_block_ulong_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_alloc" 'function))

(cffi:defcfun ("gsl_block_ulong_calloc" #.(swig-lispify "gsl_block_ulong_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_calloc" 'function))

(cffi:defcfun ("gsl_block_ulong_free" #.(swig-lispify "gsl_block_ulong_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_free" 'function))

(cffi:defcfun ("gsl_block_ulong_fread" #.(swig-lispify "gsl_block_ulong_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_fread" 'function))

(cffi:defcfun ("gsl_block_ulong_fwrite" #.(swig-lispify "gsl_block_ulong_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_fwrite" 'function))

(cffi:defcfun ("gsl_block_ulong_fscanf" #.(swig-lispify "gsl_block_ulong_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_fscanf" 'function))

(cffi:defcfun ("gsl_block_ulong_fprintf" #.(swig-lispify "gsl_block_ulong_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_ulong_fprintf" 'function))

(cffi:defcfun ("gsl_block_ulong_raw_fread" #.(swig-lispify "gsl_block_ulong_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_raw_fread" 'function))

(cffi:defcfun ("gsl_block_ulong_raw_fwrite" #.(swig-lispify "gsl_block_ulong_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_ulong_raw_fscanf" #.(swig-lispify "gsl_block_ulong_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_ulong_raw_fprintf" #.(swig-lispify "gsl_block_ulong_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_ulong_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_ulong_size" #.(swig-lispify "gsl_block_ulong_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_size" 'function))

(cffi:defcfun ("gsl_block_ulong_data" #.(swig-lispify "gsl_block_ulong_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ulong_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_block_ushort_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_block_ushort_alloc" #.(swig-lispify "gsl_block_ushort_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_alloc" 'function))

(cffi:defcfun ("gsl_block_ushort_calloc" #.(swig-lispify "gsl_block_ushort_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_calloc" 'function))

(cffi:defcfun ("gsl_block_ushort_free" #.(swig-lispify "gsl_block_ushort_free" 'function)) :void
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_free" 'function))

(cffi:defcfun ("gsl_block_ushort_fread" #.(swig-lispify "gsl_block_ushort_fread" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_fread" 'function))

(cffi:defcfun ("gsl_block_ushort_fwrite" #.(swig-lispify "gsl_block_ushort_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_fwrite" 'function))

(cffi:defcfun ("gsl_block_ushort_fscanf" #.(swig-lispify "gsl_block_ushort_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_fscanf" 'function))

(cffi:defcfun ("gsl_block_ushort_fprintf" #.(swig-lispify "gsl_block_ushort_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_ushort_fprintf" 'function))

(cffi:defcfun ("gsl_block_ushort_raw_fread" #.(swig-lispify "gsl_block_ushort_raw_fread" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_raw_fread" 'function))

(cffi:defcfun ("gsl_block_ushort_raw_fwrite" #.(swig-lispify "gsl_block_ushort_raw_fwrite" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_raw_fwrite" 'function))

(cffi:defcfun ("gsl_block_ushort_raw_fscanf" #.(swig-lispify "gsl_block_ushort_raw_fscanf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_raw_fscanf" 'function))

(cffi:defcfun ("gsl_block_ushort_raw_fprintf" #.(swig-lispify "gsl_block_ushort_raw_fprintf" 'function)) :int
  (stream :pointer)
  (b :pointer)
  (n :pointer)
  (stride :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_block_ushort_raw_fprintf" 'function))

(cffi:defcfun ("gsl_block_ushort_size" #.(swig-lispify "gsl_block_ushort_size" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_size" 'function))

(cffi:defcfun ("gsl_block_ushort_data" #.(swig-lispify "gsl_block_ushort_data" 'function)) :pointer
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_block_ushort_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_bspline_workspace" 'classname)
	(#.(swig-lispify "k" 'slotname) :pointer)
	(#.(swig-lispify "km1" 'slotname) :pointer)
	(#.(swig-lispify "l" 'slotname) :pointer)
	(#.(swig-lispify "nbreak" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "knots" 'slotname) :pointer)
	(#.(swig-lispify "deltal" 'slotname) :pointer)
	(#.(swig-lispify "deltar" 'slotname) :pointer)
	(#.(swig-lispify "B" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_workspace" 'classname))

(cl:export '#.(swig-lispify "k" 'slotname))

(cl:export '#.(swig-lispify "km1" 'slotname))

(cl:export '#.(swig-lispify "l" 'slotname))

(cl:export '#.(swig-lispify "nbreak" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "knots" 'slotname))

(cl:export '#.(swig-lispify "deltal" 'slotname))

(cl:export '#.(swig-lispify "deltar" 'slotname))

(cl:export '#.(swig-lispify "B" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_bspline_deriv_workspace" 'classname)
	(#.(swig-lispify "k" 'slotname) :pointer)
	(#.(swig-lispify "A" 'slotname) :pointer)
	(#.(swig-lispify "dB" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_deriv_workspace" 'classname))

(cl:export '#.(swig-lispify "k" 'slotname))

(cl:export '#.(swig-lispify "A" 'slotname))

(cl:export '#.(swig-lispify "dB" 'slotname))

(cffi:defcfun ("gsl_bspline_alloc" #.(swig-lispify "gsl_bspline_alloc" 'function)) :pointer
  (k :pointer)
  (nbreak :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_alloc" 'function))

(cffi:defcfun ("gsl_bspline_free" #.(swig-lispify "gsl_bspline_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_free" 'function))

(cffi:defcfun ("gsl_bspline_ncoeffs" #.(swig-lispify "gsl_bspline_ncoeffs" 'function)) :pointer
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_ncoeffs" 'function))

(cffi:defcfun ("gsl_bspline_order" #.(swig-lispify "gsl_bspline_order" 'function)) :pointer
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_order" 'function))

(cffi:defcfun ("gsl_bspline_nbreak" #.(swig-lispify "gsl_bspline_nbreak" 'function)) :pointer
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_nbreak" 'function))

(cffi:defcfun ("gsl_bspline_breakpoint" #.(swig-lispify "gsl_bspline_breakpoint" 'function)) :double
  (i :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_breakpoint" 'function))

(cffi:defcfun ("gsl_bspline_greville_abscissa" #.(swig-lispify "gsl_bspline_greville_abscissa" 'function)) :double
  (i :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_greville_abscissa" 'function))

(cffi:defcfun ("gsl_bspline_knots" #.(swig-lispify "gsl_bspline_knots" 'function)) :int
  (breakpts :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_knots" 'function))

(cffi:defcfun ("gsl_bspline_knots_uniform" #.(swig-lispify "gsl_bspline_knots_uniform" 'function)) :int
  (a :double)
  (b :double)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_knots_uniform" 'function))

(cffi:defcfun ("gsl_bspline_knots_greville" #.(swig-lispify "gsl_bspline_knots_greville" 'function)) :int
  (abscissae :pointer)
  (w :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_knots_greville" 'function))

(cffi:defcfun ("gsl_bspline_eval" #.(swig-lispify "gsl_bspline_eval" 'function)) :int
  (x :double)
  (B :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_eval" 'function))

(cffi:defcfun ("gsl_bspline_eval_nonzero" #.(swig-lispify "gsl_bspline_eval_nonzero" 'function)) :int
  (x :double)
  (Bk :pointer)
  (istart :pointer)
  (iend :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_eval_nonzero" 'function))

(cffi:defcfun ("gsl_bspline_deriv_alloc" #.(swig-lispify "gsl_bspline_deriv_alloc" 'function)) :pointer
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_deriv_alloc" 'function))

(cffi:defcfun ("gsl_bspline_deriv_free" #.(swig-lispify "gsl_bspline_deriv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_deriv_free" 'function))

(cffi:defcfun ("gsl_bspline_deriv_eval" #.(swig-lispify "gsl_bspline_deriv_eval" 'function)) :int
  (x :double)
  (nderiv :pointer)
  (dB :pointer)
  (w :pointer)
  (dw :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_deriv_eval" 'function))

(cffi:defcfun ("gsl_bspline_deriv_eval_nonzero" #.(swig-lispify "gsl_bspline_deriv_eval_nonzero" 'function)) :int
  (x :double)
  (nderiv :pointer)
  (dB :pointer)
  (istart :pointer)
  (iend :pointer)
  (w :pointer)
  (dw :pointer))

(cl:export '#.(swig-lispify "gsl_bspline_deriv_eval_nonzero" 'function))

(cffi:defcenum #.(swig-lispify "CBLAS_ORDER" 'enumname)
	(#.(swig-lispify "CblasRowMajor" 'enumvalue :keyword) #.101)
	(#.(swig-lispify "CblasColMajor" 'enumvalue :keyword) #.102))

(cl:export '#.(swig-lispify "CBLAS_ORDER" 'enumname))

(cffi:defcenum #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname)
	(#.(swig-lispify "CblasNoTrans" 'enumvalue :keyword) #.111)
	(#.(swig-lispify "CblasTrans" 'enumvalue :keyword) #.112)
	(#.(swig-lispify "CblasConjTrans" 'enumvalue :keyword) #.113))

(cl:export '#.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))

(cffi:defcenum #.(swig-lispify "CBLAS_UPLO" 'enumname)
	(#.(swig-lispify "CblasUpper" 'enumvalue :keyword) #.121)
	(#.(swig-lispify "CblasLower" 'enumvalue :keyword) #.122))

(cl:export '#.(swig-lispify "CBLAS_UPLO" 'enumname))

(cffi:defcenum #.(swig-lispify "CBLAS_DIAG" 'enumname)
	(#.(swig-lispify "CblasNonUnit" 'enumvalue :keyword) #.131)
	(#.(swig-lispify "CblasUnit" 'enumvalue :keyword) #.132))

(cl:export '#.(swig-lispify "CBLAS_DIAG" 'enumname))

(cffi:defcenum #.(swig-lispify "CBLAS_SIDE" 'enumname)
	(#.(swig-lispify "CblasLeft" 'enumvalue :keyword) #.141)
	(#.(swig-lispify "CblasRight" 'enumvalue :keyword) #.142))

(cl:export '#.(swig-lispify "CBLAS_SIDE" 'enumname))

(cffi:defcfun ("cblas_sdsdot" #.(swig-lispify "cblas_sdsdot" 'function)) :float
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_sdsdot" 'function))

(cffi:defcfun ("cblas_dsdot" #.(swig-lispify "cblas_dsdot" 'function)) :double
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dsdot" 'function))

(cffi:defcfun ("cblas_sdot" #.(swig-lispify "cblas_sdot" 'function)) :float
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_sdot" 'function))

(cffi:defcfun ("cblas_ddot" #.(swig-lispify "cblas_ddot" 'function)) :double
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_ddot" 'function))

(cffi:defcfun ("cblas_cdotu_sub" #.(swig-lispify "cblas_cdotu_sub" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (dotu :pointer))

(cl:export '#.(swig-lispify "cblas_cdotu_sub" 'function))

(cffi:defcfun ("cblas_cdotc_sub" #.(swig-lispify "cblas_cdotc_sub" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (dotc :pointer))

(cl:export '#.(swig-lispify "cblas_cdotc_sub" 'function))

(cffi:defcfun ("cblas_zdotu_sub" #.(swig-lispify "cblas_zdotu_sub" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (dotu :pointer))

(cl:export '#.(swig-lispify "cblas_zdotu_sub" 'function))

(cffi:defcfun ("cblas_zdotc_sub" #.(swig-lispify "cblas_zdotc_sub" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (dotc :pointer))

(cl:export '#.(swig-lispify "cblas_zdotc_sub" 'function))

(cffi:defcfun ("cblas_snrm2" #.(swig-lispify "cblas_snrm2" 'function)) :float
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_snrm2" 'function))

(cffi:defcfun ("cblas_sasum" #.(swig-lispify "cblas_sasum" 'function)) :float
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_sasum" 'function))

(cffi:defcfun ("cblas_dnrm2" #.(swig-lispify "cblas_dnrm2" 'function)) :double
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dnrm2" 'function))

(cffi:defcfun ("cblas_dasum" #.(swig-lispify "cblas_dasum" 'function)) :double
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dasum" 'function))

(cffi:defcfun ("cblas_scnrm2" #.(swig-lispify "cblas_scnrm2" 'function)) :float
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_scnrm2" 'function))

(cffi:defcfun ("cblas_scasum" #.(swig-lispify "cblas_scasum" 'function)) :float
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_scasum" 'function))

(cffi:defcfun ("cblas_dznrm2" #.(swig-lispify "cblas_dznrm2" 'function)) :double
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dznrm2" 'function))

(cffi:defcfun ("cblas_dzasum" #.(swig-lispify "cblas_dzasum" 'function)) :double
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dzasum" 'function))

(cffi:defcfun ("cblas_isamax" #.(swig-lispify "cblas_isamax" 'function)) :pointer
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_isamax" 'function))

(cffi:defcfun ("cblas_idamax" #.(swig-lispify "cblas_idamax" 'function)) :pointer
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_idamax" 'function))

(cffi:defcfun ("cblas_icamax" #.(swig-lispify "cblas_icamax" 'function)) :pointer
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_icamax" 'function))

(cffi:defcfun ("cblas_izamax" #.(swig-lispify "cblas_izamax" 'function)) :pointer
  (N :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_izamax" 'function))

(cffi:defcfun ("cblas_sswap" #.(swig-lispify "cblas_sswap" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_sswap" 'function))

(cffi:defcfun ("cblas_scopy" #.(swig-lispify "cblas_scopy" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_scopy" 'function))

(cffi:defcfun ("cblas_saxpy" #.(swig-lispify "cblas_saxpy" 'function)) :void
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_saxpy" 'function))

(cffi:defcfun ("cblas_dswap" #.(swig-lispify "cblas_dswap" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dswap" 'function))

(cffi:defcfun ("cblas_dcopy" #.(swig-lispify "cblas_dcopy" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dcopy" 'function))

(cffi:defcfun ("cblas_daxpy" #.(swig-lispify "cblas_daxpy" 'function)) :void
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_daxpy" 'function))

(cffi:defcfun ("cblas_cswap" #.(swig-lispify "cblas_cswap" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_cswap" 'function))

(cffi:defcfun ("cblas_ccopy" #.(swig-lispify "cblas_ccopy" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_ccopy" 'function))

(cffi:defcfun ("cblas_caxpy" #.(swig-lispify "cblas_caxpy" 'function)) :void
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_caxpy" 'function))

(cffi:defcfun ("cblas_zswap" #.(swig-lispify "cblas_zswap" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zswap" 'function))

(cffi:defcfun ("cblas_zcopy" #.(swig-lispify "cblas_zcopy" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zcopy" 'function))

(cffi:defcfun ("cblas_zaxpy" #.(swig-lispify "cblas_zaxpy" 'function)) :void
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zaxpy" 'function))

(cffi:defcfun ("cblas_srotg" #.(swig-lispify "cblas_srotg" 'function)) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cl:export '#.(swig-lispify "cblas_srotg" 'function))

(cffi:defcfun ("cblas_srotmg" #.(swig-lispify "cblas_srotmg" 'function)) :void
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :float)
  (P :pointer))

(cl:export '#.(swig-lispify "cblas_srotmg" 'function))

(cffi:defcfun ("cblas_srot" #.(swig-lispify "cblas_srot" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (c :float)
  (s :float))

(cl:export '#.(swig-lispify "cblas_srot" 'function))

(cffi:defcfun ("cblas_srotm" #.(swig-lispify "cblas_srotm" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (P :pointer))

(cl:export '#.(swig-lispify "cblas_srotm" 'function))

(cffi:defcfun ("cblas_drotg" #.(swig-lispify "cblas_drotg" 'function)) :void
  (a :pointer)
  (b :pointer)
  (c :pointer)
  (s :pointer))

(cl:export '#.(swig-lispify "cblas_drotg" 'function))

(cffi:defcfun ("cblas_drotmg" #.(swig-lispify "cblas_drotmg" 'function)) :void
  (d1 :pointer)
  (d2 :pointer)
  (b1 :pointer)
  (b2 :double)
  (P :pointer))

(cl:export '#.(swig-lispify "cblas_drotmg" 'function))

(cffi:defcfun ("cblas_drot" #.(swig-lispify "cblas_drot" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (c :double)
  (s :double))

(cl:export '#.(swig-lispify "cblas_drot" 'function))

(cffi:defcfun ("cblas_drotm" #.(swig-lispify "cblas_drotm" 'function)) :void
  (N :int)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (P :pointer))

(cl:export '#.(swig-lispify "cblas_drotm" 'function))

(cffi:defcfun ("cblas_sscal" #.(swig-lispify "cblas_sscal" 'function)) :void
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_sscal" 'function))

(cffi:defcfun ("cblas_dscal" #.(swig-lispify "cblas_dscal" 'function)) :void
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dscal" 'function))

(cffi:defcfun ("cblas_cscal" #.(swig-lispify "cblas_cscal" 'function)) :void
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_cscal" 'function))

(cffi:defcfun ("cblas_zscal" #.(swig-lispify "cblas_zscal" 'function)) :void
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_zscal" 'function))

(cffi:defcfun ("cblas_csscal" #.(swig-lispify "cblas_csscal" 'function)) :void
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_csscal" 'function))

(cffi:defcfun ("cblas_zdscal" #.(swig-lispify "cblas_zdscal" 'function)) :void
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_zdscal" 'function))

(cffi:defcfun ("cblas_sgemv" #.(swig-lispify "cblas_sgemv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_sgemv" 'function))

(cffi:defcfun ("cblas_sgbmv" #.(swig-lispify "cblas_sgbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (KL :int)
  (KU :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_sgbmv" 'function))

(cffi:defcfun ("cblas_strmv" #.(swig-lispify "cblas_strmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_strmv" 'function))

(cffi:defcfun ("cblas_stbmv" #.(swig-lispify "cblas_stbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_stbmv" 'function))

(cffi:defcfun ("cblas_stpmv" #.(swig-lispify "cblas_stpmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_stpmv" 'function))

(cffi:defcfun ("cblas_strsv" #.(swig-lispify "cblas_strsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_strsv" 'function))

(cffi:defcfun ("cblas_stbsv" #.(swig-lispify "cblas_stbsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_stbsv" 'function))

(cffi:defcfun ("cblas_stpsv" #.(swig-lispify "cblas_stpsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_stpsv" 'function))

(cffi:defcfun ("cblas_dgemv" #.(swig-lispify "cblas_dgemv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dgemv" 'function))

(cffi:defcfun ("cblas_dgbmv" #.(swig-lispify "cblas_dgbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (KL :int)
  (KU :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dgbmv" 'function))

(cffi:defcfun ("cblas_dtrmv" #.(swig-lispify "cblas_dtrmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dtrmv" 'function))

(cffi:defcfun ("cblas_dtbmv" #.(swig-lispify "cblas_dtbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dtbmv" 'function))

(cffi:defcfun ("cblas_dtpmv" #.(swig-lispify "cblas_dtpmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dtpmv" 'function))

(cffi:defcfun ("cblas_dtrsv" #.(swig-lispify "cblas_dtrsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dtrsv" 'function))

(cffi:defcfun ("cblas_dtbsv" #.(swig-lispify "cblas_dtbsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dtbsv" 'function))

(cffi:defcfun ("cblas_dtpsv" #.(swig-lispify "cblas_dtpsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_dtpsv" 'function))

(cffi:defcfun ("cblas_cgemv" #.(swig-lispify "cblas_cgemv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_cgemv" 'function))

(cffi:defcfun ("cblas_cgbmv" #.(swig-lispify "cblas_cgbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (KL :int)
  (KU :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_cgbmv" 'function))

(cffi:defcfun ("cblas_ctrmv" #.(swig-lispify "cblas_ctrmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ctrmv" 'function))

(cffi:defcfun ("cblas_ctbmv" #.(swig-lispify "cblas_ctbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ctbmv" 'function))

(cffi:defcfun ("cblas_ctpmv" #.(swig-lispify "cblas_ctpmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ctpmv" 'function))

(cffi:defcfun ("cblas_ctrsv" #.(swig-lispify "cblas_ctrsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ctrsv" 'function))

(cffi:defcfun ("cblas_ctbsv" #.(swig-lispify "cblas_ctbsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ctbsv" 'function))

(cffi:defcfun ("cblas_ctpsv" #.(swig-lispify "cblas_ctpsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ctpsv" 'function))

(cffi:defcfun ("cblas_zgemv" #.(swig-lispify "cblas_zgemv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zgemv" 'function))

(cffi:defcfun ("cblas_zgbmv" #.(swig-lispify "cblas_zgbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (KL :int)
  (KU :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zgbmv" 'function))

(cffi:defcfun ("cblas_ztrmv" #.(swig-lispify "cblas_ztrmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ztrmv" 'function))

(cffi:defcfun ("cblas_ztbmv" #.(swig-lispify "cblas_ztbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ztbmv" 'function))

(cffi:defcfun ("cblas_ztpmv" #.(swig-lispify "cblas_ztpmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ztpmv" 'function))

(cffi:defcfun ("cblas_ztrsv" #.(swig-lispify "cblas_ztrsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ztrsv" 'function))

(cffi:defcfun ("cblas_ztbsv" #.(swig-lispify "cblas_ztbsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (K :int)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ztbsv" 'function))

(cffi:defcfun ("cblas_ztpsv" #.(swig-lispify "cblas_ztpsv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (N :int)
  (Ap :pointer)
  (X :pointer)
  (incX :int))

(cl:export '#.(swig-lispify "cblas_ztpsv" 'function))

(cffi:defcfun ("cblas_ssymv" #.(swig-lispify "cblas_ssymv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_ssymv" 'function))

(cffi:defcfun ("cblas_ssbmv" #.(swig-lispify "cblas_ssbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_ssbmv" 'function))

(cffi:defcfun ("cblas_sspmv" #.(swig-lispify "cblas_sspmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (Ap :pointer)
  (X :pointer)
  (incX :int)
  (beta :float)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_sspmv" 'function))

(cffi:defcfun ("cblas_sger" #.(swig-lispify "cblas_sger" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (M :int)
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_sger" 'function))

(cffi:defcfun ("cblas_ssyr" #.(swig-lispify "cblas_ssyr" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_ssyr" 'function))

(cffi:defcfun ("cblas_sspr" #.(swig-lispify "cblas_sspr" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Ap :pointer))

(cl:export '#.(swig-lispify "cblas_sspr" 'function))

(cffi:defcfun ("cblas_ssyr2" #.(swig-lispify "cblas_ssyr2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_ssyr2" 'function))

(cffi:defcfun ("cblas_sspr2" #.(swig-lispify "cblas_sspr2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer))

(cl:export '#.(swig-lispify "cblas_sspr2" 'function))

(cffi:defcfun ("cblas_dsymv" #.(swig-lispify "cblas_dsymv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dsymv" 'function))

(cffi:defcfun ("cblas_dsbmv" #.(swig-lispify "cblas_dsbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dsbmv" 'function))

(cffi:defcfun ("cblas_dspmv" #.(swig-lispify "cblas_dspmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (Ap :pointer)
  (X :pointer)
  (incX :int)
  (beta :double)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_dspmv" 'function))

(cffi:defcfun ("cblas_dger" #.(swig-lispify "cblas_dger" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (M :int)
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_dger" 'function))

(cffi:defcfun ("cblas_dsyr" #.(swig-lispify "cblas_dsyr" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_dsyr" 'function))

(cffi:defcfun ("cblas_dspr" #.(swig-lispify "cblas_dspr" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Ap :pointer))

(cl:export '#.(swig-lispify "cblas_dspr" 'function))

(cffi:defcfun ("cblas_dsyr2" #.(swig-lispify "cblas_dsyr2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_dsyr2" 'function))

(cffi:defcfun ("cblas_dspr2" #.(swig-lispify "cblas_dspr2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer))

(cl:export '#.(swig-lispify "cblas_dspr2" 'function))

(cffi:defcfun ("cblas_chemv" #.(swig-lispify "cblas_chemv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_chemv" 'function))

(cffi:defcfun ("cblas_chbmv" #.(swig-lispify "cblas_chbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_chbmv" 'function))

(cffi:defcfun ("cblas_chpmv" #.(swig-lispify "cblas_chpmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (Ap :pointer)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_chpmv" 'function))

(cffi:defcfun ("cblas_cgeru" #.(swig-lispify "cblas_cgeru" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_cgeru" 'function))

(cffi:defcfun ("cblas_cgerc" #.(swig-lispify "cblas_cgerc" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_cgerc" 'function))

(cffi:defcfun ("cblas_cher" #.(swig-lispify "cblas_cher" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_cher" 'function))

(cffi:defcfun ("cblas_chpr" #.(swig-lispify "cblas_chpr" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :float)
  (X :pointer)
  (incX :int)
  (A :pointer))

(cl:export '#.(swig-lispify "cblas_chpr" 'function))

(cffi:defcfun ("cblas_cher2" #.(swig-lispify "cblas_cher2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_cher2" 'function))

(cffi:defcfun ("cblas_chpr2" #.(swig-lispify "cblas_chpr2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (Ap :pointer))

(cl:export '#.(swig-lispify "cblas_chpr2" 'function))

(cffi:defcfun ("cblas_zhemv" #.(swig-lispify "cblas_zhemv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zhemv" 'function))

(cffi:defcfun ("cblas_zhbmv" #.(swig-lispify "cblas_zhbmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zhbmv" 'function))

(cffi:defcfun ("cblas_zhpmv" #.(swig-lispify "cblas_zhpmv" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (Ap :pointer)
  (X :pointer)
  (incX :int)
  (beta :pointer)
  (Y :pointer)
  (incY :int))

(cl:export '#.(swig-lispify "cblas_zhpmv" 'function))

(cffi:defcfun ("cblas_zgeru" #.(swig-lispify "cblas_zgeru" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_zgeru" 'function))

(cffi:defcfun ("cblas_zgerc" #.(swig-lispify "cblas_zgerc" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_zgerc" 'function))

(cffi:defcfun ("cblas_zher" #.(swig-lispify "cblas_zher" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_zher" 'function))

(cffi:defcfun ("cblas_zhpr" #.(swig-lispify "cblas_zhpr" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :double)
  (X :pointer)
  (incX :int)
  (A :pointer))

(cl:export '#.(swig-lispify "cblas_zhpr" 'function))

(cffi:defcfun ("cblas_zher2" #.(swig-lispify "cblas_zher2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (A :pointer)
  (lda :int))

(cl:export '#.(swig-lispify "cblas_zher2" 'function))

(cffi:defcfun ("cblas_zhpr2" #.(swig-lispify "cblas_zhpr2" 'function)) :void
  (order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (N :int)
  (alpha :pointer)
  (X :pointer)
  (incX :int)
  (Y :pointer)
  (incY :int)
  (Ap :pointer))

(cl:export '#.(swig-lispify "cblas_zhpr2" 'function))

(cffi:defcfun ("cblas_sgemm" #.(swig-lispify "cblas_sgemm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (TransB #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_sgemm" 'function))

(cffi:defcfun ("cblas_ssymm" #.(swig-lispify "cblas_ssymm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_ssymm" 'function))

(cffi:defcfun ("cblas_ssyrk" #.(swig-lispify "cblas_ssyrk" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_ssyrk" 'function))

(cffi:defcfun ("cblas_ssyr2k" #.(swig-lispify "cblas_ssyr2k" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_ssyr2k" 'function))

(cffi:defcfun ("cblas_strmm" #.(swig-lispify "cblas_strmm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_strmm" 'function))

(cffi:defcfun ("cblas_strsm" #.(swig-lispify "cblas_strsm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_strsm" 'function))

(cffi:defcfun ("cblas_dgemm" #.(swig-lispify "cblas_dgemm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (TransB #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_dgemm" 'function))

(cffi:defcfun ("cblas_dsymm" #.(swig-lispify "cblas_dsymm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_dsymm" 'function))

(cffi:defcfun ("cblas_dsyrk" #.(swig-lispify "cblas_dsyrk" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_dsyrk" 'function))

(cffi:defcfun ("cblas_dsyr2k" #.(swig-lispify "cblas_dsyr2k" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_dsyr2k" 'function))

(cffi:defcfun ("cblas_dtrmm" #.(swig-lispify "cblas_dtrmm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_dtrmm" 'function))

(cffi:defcfun ("cblas_dtrsm" #.(swig-lispify "cblas_dtrsm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_dtrsm" 'function))

(cffi:defcfun ("cblas_cgemm" #.(swig-lispify "cblas_cgemm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (TransB #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_cgemm" 'function))

(cffi:defcfun ("cblas_csymm" #.(swig-lispify "cblas_csymm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_csymm" 'function))

(cffi:defcfun ("cblas_csyrk" #.(swig-lispify "cblas_csyrk" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_csyrk" 'function))

(cffi:defcfun ("cblas_csyr2k" #.(swig-lispify "cblas_csyr2k" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_csyr2k" 'function))

(cffi:defcfun ("cblas_ctrmm" #.(swig-lispify "cblas_ctrmm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_ctrmm" 'function))

(cffi:defcfun ("cblas_ctrsm" #.(swig-lispify "cblas_ctrsm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_ctrsm" 'function))

(cffi:defcfun ("cblas_zgemm" #.(swig-lispify "cblas_zgemm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (TransB #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (M :int)
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zgemm" 'function))

(cffi:defcfun ("cblas_zsymm" #.(swig-lispify "cblas_zsymm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zsymm" 'function))

(cffi:defcfun ("cblas_zsyrk" #.(swig-lispify "cblas_zsyrk" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zsyrk" 'function))

(cffi:defcfun ("cblas_zsyr2k" #.(swig-lispify "cblas_zsyr2k" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zsyr2k" 'function))

(cffi:defcfun ("cblas_ztrmm" #.(swig-lispify "cblas_ztrmm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_ztrmm" 'function))

(cffi:defcfun ("cblas_ztrsm" #.(swig-lispify "cblas_ztrsm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (TransA #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (Diag #.(swig-lispify "CBLAS_DIAG" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int))

(cl:export '#.(swig-lispify "cblas_ztrsm" 'function))

(cffi:defcfun ("cblas_chemm" #.(swig-lispify "cblas_chemm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_chemm" 'function))

(cffi:defcfun ("cblas_cherk" #.(swig-lispify "cblas_cherk" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :float)
  (A :pointer)
  (lda :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_cherk" 'function))

(cffi:defcfun ("cblas_cher2k" #.(swig-lispify "cblas_cher2k" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :float)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_cher2k" 'function))

(cffi:defcfun ("cblas_zhemm" #.(swig-lispify "cblas_zhemm" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Side #.(swig-lispify "CBLAS_SIDE" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (M :int)
  (N :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :pointer)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zhemm" 'function))

(cffi:defcfun ("cblas_zherk" #.(swig-lispify "cblas_zherk" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :double)
  (A :pointer)
  (lda :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zherk" 'function))

(cffi:defcfun ("cblas_zher2k" #.(swig-lispify "cblas_zher2k" 'function)) :void
  (Order #.(swig-lispify "CBLAS_ORDER" 'enumname))
  (Uplo #.(swig-lispify "CBLAS_UPLO" 'enumname))
  (Trans #.(swig-lispify "CBLAS_TRANSPOSE" 'enumname))
  (N :int)
  (K :int)
  (alpha :pointer)
  (A :pointer)
  (lda :int)
  (B :pointer)
  (ldb :int)
  (beta :double)
  (C :pointer)
  (ldc :int))

(cl:export '#.(swig-lispify "cblas_zher2k" 'function))

(cffi:defcfun ("cblas_xerbla" #.(swig-lispify "cblas_xerbla" 'function)) :void
  (p :int)
  (rout :string)
  (form :string)
  &rest)

(cl:export '#.(swig-lispify "cblas_xerbla" 'function))

(cffi:defcfun ("gsl_cdf_ugaussian_P" #.(swig-lispify "gsl_cdf_ugaussian_P" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_cdf_ugaussian_P" 'function))

(cffi:defcfun ("gsl_cdf_ugaussian_Q" #.(swig-lispify "gsl_cdf_ugaussian_Q" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_cdf_ugaussian_Q" 'function))

(cffi:defcfun ("gsl_cdf_ugaussian_Pinv" #.(swig-lispify "gsl_cdf_ugaussian_Pinv" 'function)) :double
  (P :double))

(cl:export '#.(swig-lispify "gsl_cdf_ugaussian_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_ugaussian_Qinv" #.(swig-lispify "gsl_cdf_ugaussian_Qinv" 'function)) :double
  (Q :double))

(cl:export '#.(swig-lispify "gsl_cdf_ugaussian_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_gaussian_P" #.(swig-lispify "gsl_cdf_gaussian_P" 'function)) :double
  (x :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_gaussian_P" 'function))

(cffi:defcfun ("gsl_cdf_gaussian_Q" #.(swig-lispify "gsl_cdf_gaussian_Q" 'function)) :double
  (x :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_gaussian_Q" 'function))

(cffi:defcfun ("gsl_cdf_gaussian_Pinv" #.(swig-lispify "gsl_cdf_gaussian_Pinv" 'function)) :double
  (P :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_gaussian_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_gaussian_Qinv" #.(swig-lispify "gsl_cdf_gaussian_Qinv" 'function)) :double
  (Q :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_gaussian_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_gamma_P" #.(swig-lispify "gsl_cdf_gamma_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gamma_P" 'function))

(cffi:defcfun ("gsl_cdf_gamma_Q" #.(swig-lispify "gsl_cdf_gamma_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gamma_Q" 'function))

(cffi:defcfun ("gsl_cdf_gamma_Pinv" #.(swig-lispify "gsl_cdf_gamma_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gamma_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_gamma_Qinv" #.(swig-lispify "gsl_cdf_gamma_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gamma_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_cauchy_P" #.(swig-lispify "gsl_cdf_cauchy_P" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_cauchy_P" 'function))

(cffi:defcfun ("gsl_cdf_cauchy_Q" #.(swig-lispify "gsl_cdf_cauchy_Q" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_cauchy_Q" 'function))

(cffi:defcfun ("gsl_cdf_cauchy_Pinv" #.(swig-lispify "gsl_cdf_cauchy_Pinv" 'function)) :double
  (P :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_cauchy_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_cauchy_Qinv" #.(swig-lispify "gsl_cdf_cauchy_Qinv" 'function)) :double
  (Q :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_cauchy_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_laplace_P" #.(swig-lispify "gsl_cdf_laplace_P" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_laplace_P" 'function))

(cffi:defcfun ("gsl_cdf_laplace_Q" #.(swig-lispify "gsl_cdf_laplace_Q" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_laplace_Q" 'function))

(cffi:defcfun ("gsl_cdf_laplace_Pinv" #.(swig-lispify "gsl_cdf_laplace_Pinv" 'function)) :double
  (P :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_laplace_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_laplace_Qinv" #.(swig-lispify "gsl_cdf_laplace_Qinv" 'function)) :double
  (Q :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_laplace_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_rayleigh_P" #.(swig-lispify "gsl_cdf_rayleigh_P" 'function)) :double
  (x :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_rayleigh_P" 'function))

(cffi:defcfun ("gsl_cdf_rayleigh_Q" #.(swig-lispify "gsl_cdf_rayleigh_Q" 'function)) :double
  (x :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_rayleigh_Q" 'function))

(cffi:defcfun ("gsl_cdf_rayleigh_Pinv" #.(swig-lispify "gsl_cdf_rayleigh_Pinv" 'function)) :double
  (P :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_rayleigh_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_rayleigh_Qinv" #.(swig-lispify "gsl_cdf_rayleigh_Qinv" 'function)) :double
  (Q :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_rayleigh_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_chisq_P" #.(swig-lispify "gsl_cdf_chisq_P" 'function)) :double
  (x :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_chisq_P" 'function))

(cffi:defcfun ("gsl_cdf_chisq_Q" #.(swig-lispify "gsl_cdf_chisq_Q" 'function)) :double
  (x :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_chisq_Q" 'function))

(cffi:defcfun ("gsl_cdf_chisq_Pinv" #.(swig-lispify "gsl_cdf_chisq_Pinv" 'function)) :double
  (P :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_chisq_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_chisq_Qinv" #.(swig-lispify "gsl_cdf_chisq_Qinv" 'function)) :double
  (Q :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_chisq_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_exponential_P" #.(swig-lispify "gsl_cdf_exponential_P" 'function)) :double
  (x :double)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_cdf_exponential_P" 'function))

(cffi:defcfun ("gsl_cdf_exponential_Q" #.(swig-lispify "gsl_cdf_exponential_Q" 'function)) :double
  (x :double)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_cdf_exponential_Q" 'function))

(cffi:defcfun ("gsl_cdf_exponential_Pinv" #.(swig-lispify "gsl_cdf_exponential_Pinv" 'function)) :double
  (P :double)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_cdf_exponential_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_exponential_Qinv" #.(swig-lispify "gsl_cdf_exponential_Qinv" 'function)) :double
  (Q :double)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_cdf_exponential_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_exppow_P" #.(swig-lispify "gsl_cdf_exppow_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_exppow_P" 'function))

(cffi:defcfun ("gsl_cdf_exppow_Q" #.(swig-lispify "gsl_cdf_exppow_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_exppow_Q" 'function))

(cffi:defcfun ("gsl_cdf_tdist_P" #.(swig-lispify "gsl_cdf_tdist_P" 'function)) :double
  (x :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_tdist_P" 'function))

(cffi:defcfun ("gsl_cdf_tdist_Q" #.(swig-lispify "gsl_cdf_tdist_Q" 'function)) :double
  (x :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_tdist_Q" 'function))

(cffi:defcfun ("gsl_cdf_tdist_Pinv" #.(swig-lispify "gsl_cdf_tdist_Pinv" 'function)) :double
  (P :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_tdist_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_tdist_Qinv" #.(swig-lispify "gsl_cdf_tdist_Qinv" 'function)) :double
  (Q :double)
  (nu :double))

(cl:export '#.(swig-lispify "gsl_cdf_tdist_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_fdist_P" #.(swig-lispify "gsl_cdf_fdist_P" 'function)) :double
  (x :double)
  (nu1 :double)
  (nu2 :double))

(cl:export '#.(swig-lispify "gsl_cdf_fdist_P" 'function))

(cffi:defcfun ("gsl_cdf_fdist_Q" #.(swig-lispify "gsl_cdf_fdist_Q" 'function)) :double
  (x :double)
  (nu1 :double)
  (nu2 :double))

(cl:export '#.(swig-lispify "gsl_cdf_fdist_Q" 'function))

(cffi:defcfun ("gsl_cdf_fdist_Pinv" #.(swig-lispify "gsl_cdf_fdist_Pinv" 'function)) :double
  (P :double)
  (nu1 :double)
  (nu2 :double))

(cl:export '#.(swig-lispify "gsl_cdf_fdist_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_fdist_Qinv" #.(swig-lispify "gsl_cdf_fdist_Qinv" 'function)) :double
  (Q :double)
  (nu1 :double)
  (nu2 :double))

(cl:export '#.(swig-lispify "gsl_cdf_fdist_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_beta_P" #.(swig-lispify "gsl_cdf_beta_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_beta_P" 'function))

(cffi:defcfun ("gsl_cdf_beta_Q" #.(swig-lispify "gsl_cdf_beta_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_beta_Q" 'function))

(cffi:defcfun ("gsl_cdf_beta_Pinv" #.(swig-lispify "gsl_cdf_beta_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_beta_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_beta_Qinv" #.(swig-lispify "gsl_cdf_beta_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_beta_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_flat_P" #.(swig-lispify "gsl_cdf_flat_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_flat_P" 'function))

(cffi:defcfun ("gsl_cdf_flat_Q" #.(swig-lispify "gsl_cdf_flat_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_flat_Q" 'function))

(cffi:defcfun ("gsl_cdf_flat_Pinv" #.(swig-lispify "gsl_cdf_flat_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_flat_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_flat_Qinv" #.(swig-lispify "gsl_cdf_flat_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_flat_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_lognormal_P" #.(swig-lispify "gsl_cdf_lognormal_P" 'function)) :double
  (x :double)
  (zeta :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_lognormal_P" 'function))

(cffi:defcfun ("gsl_cdf_lognormal_Q" #.(swig-lispify "gsl_cdf_lognormal_Q" 'function)) :double
  (x :double)
  (zeta :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_lognormal_Q" 'function))

(cffi:defcfun ("gsl_cdf_lognormal_Pinv" #.(swig-lispify "gsl_cdf_lognormal_Pinv" 'function)) :double
  (P :double)
  (zeta :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_lognormal_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_lognormal_Qinv" #.(swig-lispify "gsl_cdf_lognormal_Qinv" 'function)) :double
  (Q :double)
  (zeta :double)
  (sigma :double))

(cl:export '#.(swig-lispify "gsl_cdf_lognormal_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_gumbel1_P" #.(swig-lispify "gsl_cdf_gumbel1_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel1_P" 'function))

(cffi:defcfun ("gsl_cdf_gumbel1_Q" #.(swig-lispify "gsl_cdf_gumbel1_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel1_Q" 'function))

(cffi:defcfun ("gsl_cdf_gumbel1_Pinv" #.(swig-lispify "gsl_cdf_gumbel1_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel1_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_gumbel1_Qinv" #.(swig-lispify "gsl_cdf_gumbel1_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel1_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_gumbel2_P" #.(swig-lispify "gsl_cdf_gumbel2_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel2_P" 'function))

(cffi:defcfun ("gsl_cdf_gumbel2_Q" #.(swig-lispify "gsl_cdf_gumbel2_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel2_Q" 'function))

(cffi:defcfun ("gsl_cdf_gumbel2_Pinv" #.(swig-lispify "gsl_cdf_gumbel2_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel2_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_gumbel2_Qinv" #.(swig-lispify "gsl_cdf_gumbel2_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_gumbel2_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_weibull_P" #.(swig-lispify "gsl_cdf_weibull_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_weibull_P" 'function))

(cffi:defcfun ("gsl_cdf_weibull_Q" #.(swig-lispify "gsl_cdf_weibull_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_weibull_Q" 'function))

(cffi:defcfun ("gsl_cdf_weibull_Pinv" #.(swig-lispify "gsl_cdf_weibull_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_weibull_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_weibull_Qinv" #.(swig-lispify "gsl_cdf_weibull_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_weibull_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_pareto_P" #.(swig-lispify "gsl_cdf_pareto_P" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_pareto_P" 'function))

(cffi:defcfun ("gsl_cdf_pareto_Q" #.(swig-lispify "gsl_cdf_pareto_Q" 'function)) :double
  (x :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_pareto_Q" 'function))

(cffi:defcfun ("gsl_cdf_pareto_Pinv" #.(swig-lispify "gsl_cdf_pareto_Pinv" 'function)) :double
  (P :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_pareto_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_pareto_Qinv" #.(swig-lispify "gsl_cdf_pareto_Qinv" 'function)) :double
  (Q :double)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cdf_pareto_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_logistic_P" #.(swig-lispify "gsl_cdf_logistic_P" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_logistic_P" 'function))

(cffi:defcfun ("gsl_cdf_logistic_Q" #.(swig-lispify "gsl_cdf_logistic_Q" 'function)) :double
  (x :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_logistic_Q" 'function))

(cffi:defcfun ("gsl_cdf_logistic_Pinv" #.(swig-lispify "gsl_cdf_logistic_Pinv" 'function)) :double
  (P :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_logistic_Pinv" 'function))

(cffi:defcfun ("gsl_cdf_logistic_Qinv" #.(swig-lispify "gsl_cdf_logistic_Qinv" 'function)) :double
  (Q :double)
  (a :double))

(cl:export '#.(swig-lispify "gsl_cdf_logistic_Qinv" 'function))

(cffi:defcfun ("gsl_cdf_binomial_P" #.(swig-lispify "gsl_cdf_binomial_P" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cdf_binomial_P" 'function))

(cffi:defcfun ("gsl_cdf_binomial_Q" #.(swig-lispify "gsl_cdf_binomial_Q" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cdf_binomial_Q" 'function))

(cffi:defcfun ("gsl_cdf_poisson_P" #.(swig-lispify "gsl_cdf_poisson_P" 'function)) :double
  (k :unsigned-int)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_cdf_poisson_P" 'function))

(cffi:defcfun ("gsl_cdf_poisson_Q" #.(swig-lispify "gsl_cdf_poisson_Q" 'function)) :double
  (k :unsigned-int)
  (mu :double))

(cl:export '#.(swig-lispify "gsl_cdf_poisson_Q" 'function))

(cffi:defcfun ("gsl_cdf_geometric_P" #.(swig-lispify "gsl_cdf_geometric_P" 'function)) :double
  (k :unsigned-int)
  (p :double))

(cl:export '#.(swig-lispify "gsl_cdf_geometric_P" 'function))

(cffi:defcfun ("gsl_cdf_geometric_Q" #.(swig-lispify "gsl_cdf_geometric_Q" 'function)) :double
  (k :unsigned-int)
  (p :double))

(cl:export '#.(swig-lispify "gsl_cdf_geometric_Q" 'function))

(cffi:defcfun ("gsl_cdf_negative_binomial_P" #.(swig-lispify "gsl_cdf_negative_binomial_P" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :double))

(cl:export '#.(swig-lispify "gsl_cdf_negative_binomial_P" 'function))

(cffi:defcfun ("gsl_cdf_negative_binomial_Q" #.(swig-lispify "gsl_cdf_negative_binomial_Q" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :double))

(cl:export '#.(swig-lispify "gsl_cdf_negative_binomial_Q" 'function))

(cffi:defcfun ("gsl_cdf_pascal_P" #.(swig-lispify "gsl_cdf_pascal_P" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cdf_pascal_P" 'function))

(cffi:defcfun ("gsl_cdf_pascal_Q" #.(swig-lispify "gsl_cdf_pascal_Q" 'function)) :double
  (k :unsigned-int)
  (p :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cdf_pascal_Q" 'function))

(cffi:defcfun ("gsl_cdf_hypergeometric_P" #.(swig-lispify "gsl_cdf_hypergeometric_P" 'function)) :double
  (k :unsigned-int)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cdf_hypergeometric_P" 'function))

(cffi:defcfun ("gsl_cdf_hypergeometric_Q" #.(swig-lispify "gsl_cdf_hypergeometric_Q" 'function)) :double
  (k :unsigned-int)
  (n1 :unsigned-int)
  (n2 :unsigned-int)
  (t_arg3 :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cdf_hypergeometric_Q" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_cheb_series_struct" 'classname)
	(#.(swig-lispify "c" 'slotname) :pointer)
	(#.(swig-lispify "order" 'slotname) :pointer)
	(#.(swig-lispify "a" 'slotname) :double)
	(#.(swig-lispify "b" 'slotname) :double)
	(#.(swig-lispify "order_sp" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_series_struct" 'classname))

(cl:export '#.(swig-lispify "c" 'slotname))

(cl:export '#.(swig-lispify "order" 'slotname))

(cl:export '#.(swig-lispify "a" 'slotname))

(cl:export '#.(swig-lispify "b" 'slotname))

(cl:export '#.(swig-lispify "order_sp" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cffi:defcfun ("gsl_cheb_alloc" #.(swig-lispify "gsl_cheb_alloc" 'function)) :pointer
  (order :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_alloc" 'function))

(cffi:defcfun ("gsl_cheb_free" #.(swig-lispify "gsl_cheb_free" 'function)) :void
  (cs :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_free" 'function))

(cffi:defcfun ("gsl_cheb_init" #.(swig-lispify "gsl_cheb_init" 'function)) :int
  (cs :pointer)
  (func :pointer)
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_cheb_init" 'function))

(cffi:defcfun ("gsl_cheb_order" #.(swig-lispify "gsl_cheb_order" 'function)) :pointer
  (cs :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_order" 'function))

(cffi:defcfun ("gsl_cheb_size" #.(swig-lispify "gsl_cheb_size" 'function)) :pointer
  (cs :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_size" 'function))

(cffi:defcfun ("gsl_cheb_coeffs" #.(swig-lispify "gsl_cheb_coeffs" 'function)) :pointer
  (cs :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_coeffs" 'function))

(cffi:defcfun ("gsl_cheb_eval" #.(swig-lispify "gsl_cheb_eval" 'function)) :double
  (cs :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_cheb_eval" 'function))

(cffi:defcfun ("gsl_cheb_eval_err" #.(swig-lispify "gsl_cheb_eval_err" 'function)) :int
  (cs :pointer)
  (x :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_eval_err" 'function))

(cffi:defcfun ("gsl_cheb_eval_n" #.(swig-lispify "gsl_cheb_eval_n" 'function)) :double
  (cs :pointer)
  (order :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_cheb_eval_n" 'function))

(cffi:defcfun ("gsl_cheb_eval_n_err" #.(swig-lispify "gsl_cheb_eval_n_err" 'function)) :int
  (cs :pointer)
  (order :pointer)
  (x :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_eval_n_err" 'function))

(cffi:defcfun ("gsl_cheb_eval_mode" #.(swig-lispify "gsl_cheb_eval_mode" 'function)) :double
  (cs :pointer)
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_cheb_eval_mode" 'function))

(cffi:defcfun ("gsl_cheb_eval_mode_e" #.(swig-lispify "gsl_cheb_eval_mode_e" 'function)) :int
  (cs :pointer)
  (x :double)
  (mode :unsigned-int)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_eval_mode_e" 'function))

(cffi:defcfun ("gsl_cheb_calc_deriv" #.(swig-lispify "gsl_cheb_calc_deriv" 'function)) :int
  (deriv :pointer)
  (cs :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_calc_deriv" 'function))

(cffi:defcfun ("gsl_cheb_calc_integ" #.(swig-lispify "gsl_cheb_calc_integ" 'function)) :int
  (integ :pointer)
  (cs :pointer))

(cl:export '#.(swig-lispify "gsl_cheb_calc_integ" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_combination_struct" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "k" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_combination_struct" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "k" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_combination_alloc" #.(swig-lispify "gsl_combination_alloc" 'function)) :pointer
  (n :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_combination_alloc" 'function))

(cffi:defcfun ("gsl_combination_calloc" #.(swig-lispify "gsl_combination_calloc" 'function)) :pointer
  (n :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_combination_calloc" 'function))

(cffi:defcfun ("gsl_combination_init_first" #.(swig-lispify "gsl_combination_init_first" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_init_first" 'function))

(cffi:defcfun ("gsl_combination_init_last" #.(swig-lispify "gsl_combination_init_last" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_init_last" 'function))

(cffi:defcfun ("gsl_combination_free" #.(swig-lispify "gsl_combination_free" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_free" 'function))

(cffi:defcfun ("gsl_combination_memcpy" #.(swig-lispify "gsl_combination_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_combination_memcpy" 'function))

(cffi:defcfun ("gsl_combination_fread" #.(swig-lispify "gsl_combination_fread" 'function)) :int
  (stream :pointer)
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_fread" 'function))

(cffi:defcfun ("gsl_combination_fwrite" #.(swig-lispify "gsl_combination_fwrite" 'function)) :int
  (stream :pointer)
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_fwrite" 'function))

(cffi:defcfun ("gsl_combination_fscanf" #.(swig-lispify "gsl_combination_fscanf" 'function)) :int
  (stream :pointer)
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_fscanf" 'function))

(cffi:defcfun ("gsl_combination_fprintf" #.(swig-lispify "gsl_combination_fprintf" 'function)) :int
  (stream :pointer)
  (c :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_combination_fprintf" 'function))

(cffi:defcfun ("gsl_combination_n" #.(swig-lispify "gsl_combination_n" 'function)) :pointer
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_n" 'function))

(cffi:defcfun ("gsl_combination_k" #.(swig-lispify "gsl_combination_k" 'function)) :pointer
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_k" 'function))

(cffi:defcfun ("gsl_combination_data" #.(swig-lispify "gsl_combination_data" 'function)) :pointer
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_data" 'function))

(cffi:defcfun ("gsl_combination_valid" #.(swig-lispify "gsl_combination_valid" 'function)) :int
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_valid" 'function))

(cffi:defcfun ("gsl_combination_next" #.(swig-lispify "gsl_combination_next" 'function)) :int
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_next" 'function))

(cffi:defcfun ("gsl_combination_prev" #.(swig-lispify "gsl_combination_prev" 'function)) :int
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_combination_prev" 'function))

(cffi:defcfun ("gsl_combination_get" #.(swig-lispify "gsl_combination_get" 'function)) :pointer
  (c :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_combination_get" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_complex_long_double" 'classname)
	(#.(swig-lispify "dat" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_complex_long_double" 'classname))

(cl:export '#.(swig-lispify "dat" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_complex" 'classname)
	(#.(swig-lispify "dat" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_complex" 'classname))

(cl:export '#.(swig-lispify "dat" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_complex_float" 'classname)
	(#.(swig-lispify "dat" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_complex_float" 'classname))

(cl:export '#.(swig-lispify "dat" 'slotname))

(cffi:defcfun ("gsl_complex_polar" #.(swig-lispify "gsl_complex_polar" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (r :double)
  (theta :double))

(cl:export '#.(swig-lispify "gsl_complex_polar" 'function))

(cffi:defcfun ("gsl_complex_rect" #.(swig-lispify "gsl_complex_rect" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_complex_rect" 'function))

(cffi:defcfun ("gsl_complex_arg" #.(swig-lispify "gsl_complex_arg" 'function)) :double
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arg" 'function))

(cffi:defcfun ("gsl_complex_abs" #.(swig-lispify "gsl_complex_abs" 'function)) :double
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_abs" 'function))

(cffi:defcfun ("gsl_complex_abs2" #.(swig-lispify "gsl_complex_abs2" 'function)) :double
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_abs2" 'function))

(cffi:defcfun ("gsl_complex_logabs" #.(swig-lispify "gsl_complex_logabs" 'function)) :double
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_logabs" 'function))

(cffi:defcfun ("gsl_complex_add" #.(swig-lispify "gsl_complex_add" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_add" 'function))

(cffi:defcfun ("gsl_complex_sub" #.(swig-lispify "gsl_complex_sub" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_sub" 'function))

(cffi:defcfun ("gsl_complex_mul" #.(swig-lispify "gsl_complex_mul" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_mul" 'function))

(cffi:defcfun ("gsl_complex_div" #.(swig-lispify "gsl_complex_div" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_div" 'function))

(cffi:defcfun ("gsl_complex_add_real" #.(swig-lispify "gsl_complex_add_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (x :double))

(cl:export '#.(swig-lispify "gsl_complex_add_real" 'function))

(cffi:defcfun ("gsl_complex_sub_real" #.(swig-lispify "gsl_complex_sub_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (x :double))

(cl:export '#.(swig-lispify "gsl_complex_sub_real" 'function))

(cffi:defcfun ("gsl_complex_mul_real" #.(swig-lispify "gsl_complex_mul_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (x :double))

(cl:export '#.(swig-lispify "gsl_complex_mul_real" 'function))

(cffi:defcfun ("gsl_complex_div_real" #.(swig-lispify "gsl_complex_div_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (x :double))

(cl:export '#.(swig-lispify "gsl_complex_div_real" 'function))

(cffi:defcfun ("gsl_complex_add_imag" #.(swig-lispify "gsl_complex_add_imag" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (y :double))

(cl:export '#.(swig-lispify "gsl_complex_add_imag" 'function))

(cffi:defcfun ("gsl_complex_sub_imag" #.(swig-lispify "gsl_complex_sub_imag" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (y :double))

(cl:export '#.(swig-lispify "gsl_complex_sub_imag" 'function))

(cffi:defcfun ("gsl_complex_mul_imag" #.(swig-lispify "gsl_complex_mul_imag" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (y :double))

(cl:export '#.(swig-lispify "gsl_complex_mul_imag" 'function))

(cffi:defcfun ("gsl_complex_div_imag" #.(swig-lispify "gsl_complex_div_imag" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (y :double))

(cl:export '#.(swig-lispify "gsl_complex_div_imag" 'function))

(cffi:defcfun ("gsl_complex_conjugate" #.(swig-lispify "gsl_complex_conjugate" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_conjugate" 'function))

(cffi:defcfun ("gsl_complex_inverse" #.(swig-lispify "gsl_complex_inverse" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_inverse" 'function))

(cffi:defcfun ("gsl_complex_negative" #.(swig-lispify "gsl_complex_negative" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_negative" 'function))

(cffi:defcfun ("gsl_complex_sqrt" #.(swig-lispify "gsl_complex_sqrt" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_sqrt" 'function))

(cffi:defcfun ("gsl_complex_sqrt_real" #.(swig-lispify "gsl_complex_sqrt_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (x :double))

(cl:export '#.(swig-lispify "gsl_complex_sqrt_real" 'function))

(cffi:defcfun ("gsl_complex_pow" #.(swig-lispify "gsl_complex_pow" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_pow" 'function))

(cffi:defcfun ("gsl_complex_pow_real" #.(swig-lispify "gsl_complex_pow_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b :double))

(cl:export '#.(swig-lispify "gsl_complex_pow_real" 'function))

(cffi:defcfun ("gsl_complex_exp" #.(swig-lispify "gsl_complex_exp" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_exp" 'function))

(cffi:defcfun ("gsl_complex_log" #.(swig-lispify "gsl_complex_log" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_log" 'function))

(cffi:defcfun ("gsl_complex_log10" #.(swig-lispify "gsl_complex_log10" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_log10" 'function))

(cffi:defcfun ("gsl_complex_log_b" #.(swig-lispify "gsl_complex_log_b" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname))
  (b #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_log_b" 'function))

(cffi:defcfun ("gsl_complex_sin" #.(swig-lispify "gsl_complex_sin" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_sin" 'function))

(cffi:defcfun ("gsl_complex_cos" #.(swig-lispify "gsl_complex_cos" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_cos" 'function))

(cffi:defcfun ("gsl_complex_sec" #.(swig-lispify "gsl_complex_sec" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_sec" 'function))

(cffi:defcfun ("gsl_complex_csc" #.(swig-lispify "gsl_complex_csc" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_csc" 'function))

(cffi:defcfun ("gsl_complex_tan" #.(swig-lispify "gsl_complex_tan" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_tan" 'function))

(cffi:defcfun ("gsl_complex_cot" #.(swig-lispify "gsl_complex_cot" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_cot" 'function))

(cffi:defcfun ("gsl_complex_arcsin" #.(swig-lispify "gsl_complex_arcsin" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arcsin" 'function))

(cffi:defcfun ("gsl_complex_arcsin_real" #.(swig-lispify "gsl_complex_arcsin_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a :double))

(cl:export '#.(swig-lispify "gsl_complex_arcsin_real" 'function))

(cffi:defcfun ("gsl_complex_arccos" #.(swig-lispify "gsl_complex_arccos" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arccos" 'function))

(cffi:defcfun ("gsl_complex_arccos_real" #.(swig-lispify "gsl_complex_arccos_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a :double))

(cl:export '#.(swig-lispify "gsl_complex_arccos_real" 'function))

(cffi:defcfun ("gsl_complex_arcsec" #.(swig-lispify "gsl_complex_arcsec" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arcsec" 'function))

(cffi:defcfun ("gsl_complex_arcsec_real" #.(swig-lispify "gsl_complex_arcsec_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a :double))

(cl:export '#.(swig-lispify "gsl_complex_arcsec_real" 'function))

(cffi:defcfun ("gsl_complex_arccsc" #.(swig-lispify "gsl_complex_arccsc" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arccsc" 'function))

(cffi:defcfun ("gsl_complex_arccsc_real" #.(swig-lispify "gsl_complex_arccsc_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a :double))

(cl:export '#.(swig-lispify "gsl_complex_arccsc_real" 'function))

(cffi:defcfun ("gsl_complex_arctan" #.(swig-lispify "gsl_complex_arctan" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arctan" 'function))

(cffi:defcfun ("gsl_complex_arccot" #.(swig-lispify "gsl_complex_arccot" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arccot" 'function))

(cffi:defcfun ("gsl_complex_sinh" #.(swig-lispify "gsl_complex_sinh" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_sinh" 'function))

(cffi:defcfun ("gsl_complex_cosh" #.(swig-lispify "gsl_complex_cosh" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_cosh" 'function))

(cffi:defcfun ("gsl_complex_sech" #.(swig-lispify "gsl_complex_sech" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_sech" 'function))

(cffi:defcfun ("gsl_complex_csch" #.(swig-lispify "gsl_complex_csch" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_csch" 'function))

(cffi:defcfun ("gsl_complex_tanh" #.(swig-lispify "gsl_complex_tanh" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_tanh" 'function))

(cffi:defcfun ("gsl_complex_coth" #.(swig-lispify "gsl_complex_coth" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_coth" 'function))

(cffi:defcfun ("gsl_complex_arcsinh" #.(swig-lispify "gsl_complex_arcsinh" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arcsinh" 'function))

(cffi:defcfun ("gsl_complex_arccosh" #.(swig-lispify "gsl_complex_arccosh" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arccosh" 'function))

(cffi:defcfun ("gsl_complex_arccosh_real" #.(swig-lispify "gsl_complex_arccosh_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a :double))

(cl:export '#.(swig-lispify "gsl_complex_arccosh_real" 'function))

(cffi:defcfun ("gsl_complex_arcsech" #.(swig-lispify "gsl_complex_arcsech" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arcsech" 'function))

(cffi:defcfun ("gsl_complex_arccsch" #.(swig-lispify "gsl_complex_arccsch" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arccsch" 'function))

(cffi:defcfun ("gsl_complex_arctanh" #.(swig-lispify "gsl_complex_arctanh" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arctanh" 'function))

(cffi:defcfun ("gsl_complex_arctanh_real" #.(swig-lispify "gsl_complex_arctanh_real" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a :double))

(cl:export '#.(swig-lispify "gsl_complex_arctanh_real" 'function))

(cffi:defcfun ("gsl_complex_arccoth" #.(swig-lispify "gsl_complex_arccoth" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (a #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_arccoth" 'function))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_SPEED_OF_LIGHT" 'constant) 2.99792458d10)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_SPEED_OF_LIGHT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_GRAVITATIONAL_CONSTANT" 'constant) 6.673d-8)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_GRAVITATIONAL_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_PLANCKS_CONSTANT_H" 'constant) 6.62606896d-27)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_PLANCKS_CONSTANT_H" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_PLANCKS_CONSTANT_HBAR" 'constant) 1.05457162825d-27)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_PLANCKS_CONSTANT_HBAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_ASTRONOMICAL_UNIT" 'constant) 1.49597870691d13)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_ASTRONOMICAL_UNIT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_LIGHT_YEAR" 'constant) 9.46053620707d17)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_LIGHT_YEAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_PARSEC" 'constant) 3.08567758135d18)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_PARSEC" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_GRAV_ACCEL" 'constant) 9.80665d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_GRAV_ACCEL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_ELECTRON_VOLT" 'constant) 1.602176487d-12)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_ELECTRON_VOLT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MASS_ELECTRON" 'constant) 9.10938188d-28)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MASS_ELECTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MASS_MUON" 'constant) 1.88353109d-25)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MASS_MUON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MASS_PROTON" 'constant) 1.67262158d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MASS_PROTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MASS_NEUTRON" 'constant) 1.67492716d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MASS_NEUTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_RYDBERG" 'constant) 2.17987196968d-11)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_RYDBERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_BOLTZMANN" 'constant) 1.3806504d-16)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_BOLTZMANN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MOLAR_GAS" 'constant) 8.314472d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MOLAR_GAS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_STANDARD_GAS_VOLUME" 'constant) 2.2710981d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_STANDARD_GAS_VOLUME" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MINUTE" 'constant) 6d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MINUTE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_HOUR" 'constant) 3.6d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_DAY" 'constant) 8.64d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_DAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_WEEK" 'constant) 6.048d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_WEEK" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_INCH" 'constant) 2.54d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_INCH" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_FOOT" 'constant) 3.048d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_FOOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_YARD" 'constant) 9.144d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_YARD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MILE" 'constant) 1.609344d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_NAUTICAL_MILE" 'constant) 1.852d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_NAUTICAL_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_FATHOM" 'constant) 1.8288d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_FATHOM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MIL" 'constant) 2.54d-3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MIL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_POINT" 'constant) 3.52777777778d-2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_POINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_TEXPOINT" 'constant) 3.51459803515d-2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_TEXPOINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MICRON" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MICRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_ANGSTROM" 'constant) 1d-8)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_ANGSTROM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_HECTARE" 'constant) 1d8)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_HECTARE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_ACRE" 'constant) 4.04685642241d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_ACRE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_BARN" 'constant) 1d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_BARN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_LITER" 'constant) 1d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_LITER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_US_GALLON" 'constant) 3.78541178402d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_US_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_QUART" 'constant) 9.46352946004d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_QUART" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_PINT" 'constant) 4.73176473002d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_PINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_CUP" 'constant) 2.36588236501d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_CUP" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_FLUID_OUNCE" 'constant) 2.95735295626d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_FLUID_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_TABLESPOON" 'constant) 1.47867647813d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_TABLESPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_TEASPOON" 'constant) 4.92892159375d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_TEASPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_CANADIAN_GALLON" 'constant) 4.54609d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_CANADIAN_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_UK_GALLON" 'constant) 4.546092d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_UK_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_MILES_PER_HOUR" 'constant) 4.4704d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_MILES_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_KILOMETERS_PER_HOUR" 'constant) 2.77777777778d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_KILOMETERS_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_KNOT" 'constant) 5.14444444444d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_KNOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_POUND_MASS" 'constant) 4.5359237d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_POUND_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_OUNCE_MASS" 'constant) 2.8349523125d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_OUNCE_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_TON" 'constant) 9.0718474d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_METRIC_TON" 'constant) 1d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_METRIC_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_UK_TON" 'constant) 1.0160469088d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_UK_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_TROY_OUNCE" 'constant) 3.1103475d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_TROY_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_CARAT" 'constant) 2d-1)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_CARAT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_UNIFIED_ATOMIC_MASS" 'constant) 1.660538782d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_UNIFIED_ATOMIC_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_GRAM_FORCE" 'constant) 9.80665d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_GRAM_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_POUND_FORCE" 'constant) 4.44822161526d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_POUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_KILOPOUND_FORCE" 'constant) 4.44822161526d8)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_KILOPOUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_POUNDAL" 'constant) 1.38255d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_POUNDAL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_CALORIE" 'constant) 4.1868d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_CALORIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_BTU" 'constant) 1.05505585262d10)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_BTU" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_THERM" 'constant) 1.05506d15)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_THERM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_HORSEPOWER" 'constant) 7.457d9)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_HORSEPOWER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_BAR" 'constant) 1d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_BAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_STD_ATMOSPHERE" 'constant) 1.01325d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_STD_ATMOSPHERE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_TORR" 'constant) 1.33322368421d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_TORR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_METER_OF_MERCURY" 'constant) 1.33322368421d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_METER_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_INCH_OF_MERCURY" 'constant) 3.38638815789d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_INCH_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_INCH_OF_WATER" 'constant) 2.490889d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_INCH_OF_WATER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_PSI" 'constant) 6.89475729317d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_PSI" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_POISE" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_POISE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_STOKES" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_STOKES" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_STILB" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_STILB" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_LUMEN" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_LUMEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_LUX" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_LUX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_PHOT" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_PHOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_FOOTCANDLE" 'constant) 1.076d-3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_FOOTCANDLE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_LAMBERT" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_LAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_FOOTLAMBERT" 'constant) 1.07639104d-3)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_FOOTLAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_CURIE" 'constant) 3.7d10)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_CURIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_ROENTGEN" 'constant) 2.58d-7)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_ROENTGEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_RAD" 'constant) 1d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_RAD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_SOLAR_MASS" 'constant) 1.98892d33)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_SOLAR_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_BOHR_RADIUS" 'constant) 5.291772083d-9)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_BOHR_RADIUS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_NEWTON" 'constant) 1d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_NEWTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_DYNE" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_DYNE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_JOULE" 'constant) 1d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_JOULE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_ERG" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_ERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_STEFAN_BOLTZMANN_CONSTANT" 'constant) 5.67040047374d-5)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_STEFAN_BOLTZMANN_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGS_THOMSON_CROSS_SECTION" 'constant) 6.65245893699d-25)

(cl:export '#.(swig-lispify "GSL_CONST_CGS_THOMSON_CROSS_SECTION" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_SPEED_OF_LIGHT" 'constant) 2.99792458d10)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_SPEED_OF_LIGHT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_GRAVITATIONAL_CONSTANT" 'constant) 6.673d-8)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_GRAVITATIONAL_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PLANCKS_CONSTANT_H" 'constant) 6.62606896d-27)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PLANCKS_CONSTANT_H" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PLANCKS_CONSTANT_HBAR" 'constant) 1.05457162825d-27)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PLANCKS_CONSTANT_HBAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ASTRONOMICAL_UNIT" 'constant) 1.49597870691d13)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ASTRONOMICAL_UNIT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_LIGHT_YEAR" 'constant) 9.46053620707d17)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_LIGHT_YEAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PARSEC" 'constant) 3.08567758135d18)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PARSEC" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_GRAV_ACCEL" 'constant) 9.80665d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_GRAV_ACCEL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ELECTRON_VOLT" 'constant) 1.602176487d-12)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ELECTRON_VOLT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MASS_ELECTRON" 'constant) 9.10938188d-28)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MASS_ELECTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MASS_MUON" 'constant) 1.88353109d-25)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MASS_MUON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MASS_PROTON" 'constant) 1.67262158d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MASS_PROTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MASS_NEUTRON" 'constant) 1.67492716d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MASS_NEUTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_RYDBERG" 'constant) 2.17987196968d-11)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_RYDBERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_BOLTZMANN" 'constant) 1.3806504d-16)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_BOLTZMANN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MOLAR_GAS" 'constant) 8.314472d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MOLAR_GAS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_STANDARD_GAS_VOLUME" 'constant) 2.2710981d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_STANDARD_GAS_VOLUME" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MINUTE" 'constant) 6d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MINUTE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_HOUR" 'constant) 3.6d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_DAY" 'constant) 8.64d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_DAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_WEEK" 'constant) 6.048d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_WEEK" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_INCH" 'constant) 2.54d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_INCH" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_FOOT" 'constant) 3.048d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_FOOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_YARD" 'constant) 9.144d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_YARD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MILE" 'constant) 1.609344d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_NAUTICAL_MILE" 'constant) 1.852d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_NAUTICAL_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_FATHOM" 'constant) 1.8288d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_FATHOM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MIL" 'constant) 2.54d-3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MIL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_POINT" 'constant) 3.52777777778d-2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_POINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_TEXPOINT" 'constant) 3.51459803515d-2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_TEXPOINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MICRON" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MICRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ANGSTROM" 'constant) 1d-8)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ANGSTROM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_HECTARE" 'constant) 1d8)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_HECTARE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ACRE" 'constant) 4.04685642241d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ACRE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_BARN" 'constant) 1d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_BARN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_LITER" 'constant) 1d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_LITER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_US_GALLON" 'constant) 3.78541178402d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_US_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_QUART" 'constant) 9.46352946004d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_QUART" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PINT" 'constant) 4.73176473002d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_CUP" 'constant) 2.36588236501d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_CUP" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_FLUID_OUNCE" 'constant) 2.95735295626d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_FLUID_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_TABLESPOON" 'constant) 1.47867647813d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_TABLESPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_TEASPOON" 'constant) 4.92892159375d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_TEASPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_CANADIAN_GALLON" 'constant) 4.54609d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_CANADIAN_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_UK_GALLON" 'constant) 4.546092d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_UK_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_MILES_PER_HOUR" 'constant) 4.4704d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_MILES_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_KILOMETERS_PER_HOUR" 'constant) 2.77777777778d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_KILOMETERS_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_KNOT" 'constant) 5.14444444444d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_KNOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_POUND_MASS" 'constant) 4.5359237d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_POUND_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_OUNCE_MASS" 'constant) 2.8349523125d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_OUNCE_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_TON" 'constant) 9.0718474d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_METRIC_TON" 'constant) 1d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_METRIC_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_UK_TON" 'constant) 1.0160469088d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_UK_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_TROY_OUNCE" 'constant) 3.1103475d1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_TROY_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_CARAT" 'constant) 2d-1)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_CARAT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_UNIFIED_ATOMIC_MASS" 'constant) 1.660538782d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_UNIFIED_ATOMIC_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_GRAM_FORCE" 'constant) 9.80665d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_GRAM_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_POUND_FORCE" 'constant) 4.44822161526d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_POUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_KILOPOUND_FORCE" 'constant) 4.44822161526d8)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_KILOPOUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_POUNDAL" 'constant) 1.38255d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_POUNDAL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_CALORIE" 'constant) 4.1868d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_CALORIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_BTU" 'constant) 1.05505585262d10)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_BTU" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_THERM" 'constant) 1.05506d15)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_THERM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_HORSEPOWER" 'constant) 7.457d9)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_HORSEPOWER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_BAR" 'constant) 1d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_BAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_STD_ATMOSPHERE" 'constant) 1.01325d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_STD_ATMOSPHERE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_TORR" 'constant) 1.33322368421d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_TORR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_METER_OF_MERCURY" 'constant) 1.33322368421d6)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_METER_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_INCH_OF_MERCURY" 'constant) 3.38638815789d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_INCH_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_INCH_OF_WATER" 'constant) 2.490889d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_INCH_OF_WATER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PSI" 'constant) 6.89475729317d4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PSI" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_POISE" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_POISE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_STOKES" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_STOKES" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_STILB" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_STILB" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_LUMEN" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_LUMEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_LUX" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_LUX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PHOT" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PHOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_FOOTCANDLE" 'constant) 1.076d-3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_FOOTCANDLE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_LAMBERT" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_LAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_FOOTLAMBERT" 'constant) 1.07639104d-3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_FOOTLAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_CURIE" 'constant) 3.7d10)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_CURIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ROENTGEN" 'constant) 2.58d-8)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ROENTGEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_RAD" 'constant) 1d2)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_RAD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_SOLAR_MASS" 'constant) 1.98892d33)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_SOLAR_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_BOHR_RADIUS" 'constant) 5.291772083d-9)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_BOHR_RADIUS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_NEWTON" 'constant) 1d5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_NEWTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_DYNE" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_DYNE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_JOULE" 'constant) 1d7)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_JOULE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ERG" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_STEFAN_BOLTZMANN_CONSTANT" 'constant) 5.67040047374d-5)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_STEFAN_BOLTZMANN_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_THOMSON_CROSS_SECTION" 'constant) 6.65245893699d-25)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_THOMSON_CROSS_SECTION" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_BOHR_MAGNETON" 'constant) 9.27400899d-21)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_BOHR_MAGNETON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_NUCLEAR_MAGNETON" 'constant) 5.05078317d-24)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_NUCLEAR_MAGNETON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ELECTRON_MAGNETIC_MOMENT" 'constant) 9.28476362d-21)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ELECTRON_MAGNETIC_MOMENT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_PROTON_MAGNETIC_MOMENT" 'constant) 1.410606633d-23)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_PROTON_MAGNETIC_MOMENT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_FARADAY" 'constant) 9.64853429775d3)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_FARADAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_CGSM_ELECTRON_CHARGE" 'constant) 1.602176487d-20)

(cl:export '#.(swig-lispify "GSL_CONST_CGSM_ELECTRON_CHARGE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_SPEED_OF_LIGHT" 'constant) 2.99792458d8)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_SPEED_OF_LIGHT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_GRAVITATIONAL_CONSTANT" 'constant) 6.673d-11)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_GRAVITATIONAL_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PLANCKS_CONSTANT_H" 'constant) 6.62606896d-34)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PLANCKS_CONSTANT_H" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PLANCKS_CONSTANT_HBAR" 'constant) 1.05457162825d-34)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PLANCKS_CONSTANT_HBAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ASTRONOMICAL_UNIT" 'constant) 1.49597870691d11)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ASTRONOMICAL_UNIT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_LIGHT_YEAR" 'constant) 9.46053620707d15)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_LIGHT_YEAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PARSEC" 'constant) 3.08567758135d16)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PARSEC" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_GRAV_ACCEL" 'constant) 9.80665d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_GRAV_ACCEL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ELECTRON_VOLT" 'constant) 1.602176487d-19)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ELECTRON_VOLT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MASS_ELECTRON" 'constant) 9.10938188d-31)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MASS_ELECTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MASS_MUON" 'constant) 1.88353109d-28)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MASS_MUON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MASS_PROTON" 'constant) 1.67262158d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MASS_PROTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MASS_NEUTRON" 'constant) 1.67492716d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MASS_NEUTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_RYDBERG" 'constant) 2.17987196968d-18)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_RYDBERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_BOLTZMANN" 'constant) 1.3806504d-23)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_BOLTZMANN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MOLAR_GAS" 'constant) 8.314472d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MOLAR_GAS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_STANDARD_GAS_VOLUME" 'constant) 2.2710981d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_STANDARD_GAS_VOLUME" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MINUTE" 'constant) 6d1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MINUTE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_HOUR" 'constant) 3.6d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_DAY" 'constant) 8.64d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_DAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_WEEK" 'constant) 6.048d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_WEEK" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_INCH" 'constant) 2.54d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_INCH" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_FOOT" 'constant) 3.048d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_FOOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_YARD" 'constant) 9.144d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_YARD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MILE" 'constant) 1.609344d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_NAUTICAL_MILE" 'constant) 1.852d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_NAUTICAL_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_FATHOM" 'constant) 1.8288d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_FATHOM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MIL" 'constant) 2.54d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MIL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_POINT" 'constant) 3.52777777778d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_POINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_TEXPOINT" 'constant) 3.51459803515d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_TEXPOINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MICRON" 'constant) 1d-6)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MICRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ANGSTROM" 'constant) 1d-10)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ANGSTROM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_HECTARE" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_HECTARE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ACRE" 'constant) 4.04685642241d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ACRE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_BARN" 'constant) 1d-28)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_BARN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_LITER" 'constant) 1d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_LITER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_US_GALLON" 'constant) 3.78541178402d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_US_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_QUART" 'constant) 9.46352946004d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_QUART" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PINT" 'constant) 4.73176473002d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_CUP" 'constant) 2.36588236501d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_CUP" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_FLUID_OUNCE" 'constant) 2.95735295626d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_FLUID_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_TABLESPOON" 'constant) 1.47867647813d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_TABLESPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_TEASPOON" 'constant) 4.92892159375d-6)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_TEASPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_CANADIAN_GALLON" 'constant) 4.54609d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_CANADIAN_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_UK_GALLON" 'constant) 4.546092d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_UK_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_MILES_PER_HOUR" 'constant) 4.4704d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_MILES_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_KILOMETERS_PER_HOUR" 'constant) 2.77777777778d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_KILOMETERS_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_KNOT" 'constant) 5.14444444444d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_KNOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_POUND_MASS" 'constant) 4.5359237d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_POUND_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_OUNCE_MASS" 'constant) 2.8349523125d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_OUNCE_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_TON" 'constant) 9.0718474d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_METRIC_TON" 'constant) 1d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_METRIC_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_UK_TON" 'constant) 1.0160469088d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_UK_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_TROY_OUNCE" 'constant) 3.1103475d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_TROY_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_CARAT" 'constant) 2d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_CARAT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_UNIFIED_ATOMIC_MASS" 'constant) 1.660538782d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_UNIFIED_ATOMIC_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_GRAM_FORCE" 'constant) 9.80665d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_GRAM_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_POUND_FORCE" 'constant) 4.44822161526d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_POUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_KILOPOUND_FORCE" 'constant) 4.44822161526d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_KILOPOUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_POUNDAL" 'constant) 1.38255d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_POUNDAL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_CALORIE" 'constant) 4.1868d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_CALORIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_BTU" 'constant) 1.05505585262d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_BTU" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_THERM" 'constant) 1.05506d8)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_THERM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_HORSEPOWER" 'constant) 7.457d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_HORSEPOWER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_BAR" 'constant) 1d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_BAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_STD_ATMOSPHERE" 'constant) 1.01325d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_STD_ATMOSPHERE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_TORR" 'constant) 1.33322368421d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_TORR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_METER_OF_MERCURY" 'constant) 1.33322368421d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_METER_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_INCH_OF_MERCURY" 'constant) 3.38638815789d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_INCH_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_INCH_OF_WATER" 'constant) 2.490889d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_INCH_OF_WATER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PSI" 'constant) 6.89475729317d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PSI" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_POISE" 'constant) 1d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_POISE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_STOKES" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_STOKES" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_STILB" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_STILB" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_LUMEN" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_LUMEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_LUX" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_LUX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PHOT" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PHOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_FOOTCANDLE" 'constant) 1.076d1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_FOOTCANDLE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_LAMBERT" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_LAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_FOOTLAMBERT" 'constant) 1.07639104d1)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_FOOTLAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_CURIE" 'constant) 3.7d10)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_CURIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ROENTGEN" 'constant) 2.58d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ROENTGEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_RAD" 'constant) 1d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_RAD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_SOLAR_MASS" 'constant) 1.98892d30)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_SOLAR_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_BOHR_RADIUS" 'constant) 5.291772083d-11)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_BOHR_RADIUS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_NEWTON" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_NEWTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_DYNE" 'constant) 1d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_DYNE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_JOULE" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_JOULE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ERG" 'constant) 1d-7)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_STEFAN_BOLTZMANN_CONSTANT" 'constant) 5.67040047374d-8)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_STEFAN_BOLTZMANN_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_THOMSON_CROSS_SECTION" 'constant) 6.65245893699d-29)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_THOMSON_CROSS_SECTION" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_BOHR_MAGNETON" 'constant) 9.27400899d-24)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_BOHR_MAGNETON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_NUCLEAR_MAGNETON" 'constant) 5.05078317d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_NUCLEAR_MAGNETON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ELECTRON_MAGNETIC_MOMENT" 'constant) 9.28476362d-24)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ELECTRON_MAGNETIC_MOMENT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_PROTON_MAGNETIC_MOMENT" 'constant) 1.410606633d-26)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_PROTON_MAGNETIC_MOMENT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_FARADAY" 'constant) 9.64853429775d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_FARADAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_ELECTRON_CHARGE" 'constant) 1.602176487d-19)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_ELECTRON_CHARGE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_VACUUM_PERMITTIVITY" 'constant) 8.854187817d-12)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_VACUUM_PERMITTIVITY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_VACUUM_PERMEABILITY" 'constant) 1.25663706144d-6)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_VACUUM_PERMEABILITY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_DEBYE" 'constant) 3.33564095198d-30)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_DEBYE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKS_GAUSS" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKS_GAUSS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_SPEED_OF_LIGHT" 'constant) 2.99792458d8)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_SPEED_OF_LIGHT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_GRAVITATIONAL_CONSTANT" 'constant) 6.673d-11)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_GRAVITATIONAL_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PLANCKS_CONSTANT_H" 'constant) 6.62606896d-34)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PLANCKS_CONSTANT_H" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PLANCKS_CONSTANT_HBAR" 'constant) 1.05457162825d-34)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PLANCKS_CONSTANT_HBAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ASTRONOMICAL_UNIT" 'constant) 1.49597870691d11)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ASTRONOMICAL_UNIT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_LIGHT_YEAR" 'constant) 9.46053620707d15)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_LIGHT_YEAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PARSEC" 'constant) 3.08567758135d16)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PARSEC" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_GRAV_ACCEL" 'constant) 9.80665d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_GRAV_ACCEL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ELECTRON_VOLT" 'constant) 1.602176487d-19)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ELECTRON_VOLT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MASS_ELECTRON" 'constant) 9.10938188d-31)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MASS_ELECTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MASS_MUON" 'constant) 1.88353109d-28)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MASS_MUON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MASS_PROTON" 'constant) 1.67262158d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MASS_PROTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MASS_NEUTRON" 'constant) 1.67492716d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MASS_NEUTRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_RYDBERG" 'constant) 2.17987196968d-18)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_RYDBERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_BOLTZMANN" 'constant) 1.3806504d-23)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_BOLTZMANN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MOLAR_GAS" 'constant) 8.314472d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MOLAR_GAS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_STANDARD_GAS_VOLUME" 'constant) 2.2710981d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_STANDARD_GAS_VOLUME" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MINUTE" 'constant) 6d1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MINUTE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_HOUR" 'constant) 3.6d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_DAY" 'constant) 8.64d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_DAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_WEEK" 'constant) 6.048d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_WEEK" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_INCH" 'constant) 2.54d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_INCH" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_FOOT" 'constant) 3.048d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_FOOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_YARD" 'constant) 9.144d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_YARD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MILE" 'constant) 1.609344d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_NAUTICAL_MILE" 'constant) 1.852d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_NAUTICAL_MILE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_FATHOM" 'constant) 1.8288d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_FATHOM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MIL" 'constant) 2.54d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MIL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_POINT" 'constant) 3.52777777778d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_POINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_TEXPOINT" 'constant) 3.51459803515d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_TEXPOINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MICRON" 'constant) 1d-6)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MICRON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ANGSTROM" 'constant) 1d-10)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ANGSTROM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_HECTARE" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_HECTARE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ACRE" 'constant) 4.04685642241d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ACRE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_BARN" 'constant) 1d-28)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_BARN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_LITER" 'constant) 1d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_LITER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_US_GALLON" 'constant) 3.78541178402d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_US_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_QUART" 'constant) 9.46352946004d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_QUART" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PINT" 'constant) 4.73176473002d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PINT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_CUP" 'constant) 2.36588236501d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_CUP" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_FLUID_OUNCE" 'constant) 2.95735295626d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_FLUID_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_TABLESPOON" 'constant) 1.47867647813d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_TABLESPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_TEASPOON" 'constant) 4.92892159375d-6)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_TEASPOON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_CANADIAN_GALLON" 'constant) 4.54609d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_CANADIAN_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_UK_GALLON" 'constant) 4.546092d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_UK_GALLON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_MILES_PER_HOUR" 'constant) 4.4704d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_MILES_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_KILOMETERS_PER_HOUR" 'constant) 2.77777777778d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_KILOMETERS_PER_HOUR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_KNOT" 'constant) 5.14444444444d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_KNOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_POUND_MASS" 'constant) 4.5359237d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_POUND_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_OUNCE_MASS" 'constant) 2.8349523125d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_OUNCE_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_TON" 'constant) 9.0718474d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_METRIC_TON" 'constant) 1d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_METRIC_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_UK_TON" 'constant) 1.0160469088d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_UK_TON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_TROY_OUNCE" 'constant) 3.1103475d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_TROY_OUNCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_CARAT" 'constant) 2d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_CARAT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_UNIFIED_ATOMIC_MASS" 'constant) 1.660538782d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_UNIFIED_ATOMIC_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_GRAM_FORCE" 'constant) 9.80665d-3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_GRAM_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_POUND_FORCE" 'constant) 4.44822161526d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_POUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_KILOPOUND_FORCE" 'constant) 4.44822161526d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_KILOPOUND_FORCE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_POUNDAL" 'constant) 1.38255d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_POUNDAL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_CALORIE" 'constant) 4.1868d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_CALORIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_BTU" 'constant) 1.05505585262d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_BTU" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_THERM" 'constant) 1.05506d8)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_THERM" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_HORSEPOWER" 'constant) 7.457d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_HORSEPOWER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_BAR" 'constant) 1d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_BAR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_STD_ATMOSPHERE" 'constant) 1.01325d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_STD_ATMOSPHERE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_TORR" 'constant) 1.33322368421d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_TORR" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_METER_OF_MERCURY" 'constant) 1.33322368421d5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_METER_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_INCH_OF_MERCURY" 'constant) 3.38638815789d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_INCH_OF_MERCURY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_INCH_OF_WATER" 'constant) 2.490889d2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_INCH_OF_WATER" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PSI" 'constant) 6.89475729317d3)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PSI" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_POISE" 'constant) 1d-1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_POISE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_STOKES" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_STOKES" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_STILB" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_STILB" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_LUMEN" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_LUMEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_LUX" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_LUX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PHOT" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PHOT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_FOOTCANDLE" 'constant) 1.076d1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_FOOTCANDLE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_LAMBERT" 'constant) 1d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_LAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_FOOTLAMBERT" 'constant) 1.07639104d1)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_FOOTLAMBERT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_CURIE" 'constant) 3.7d10)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_CURIE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ROENTGEN" 'constant) 2.58d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ROENTGEN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_RAD" 'constant) 1d-2)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_RAD" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_SOLAR_MASS" 'constant) 1.98892d30)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_SOLAR_MASS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_BOHR_RADIUS" 'constant) 5.291772083d-11)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_BOHR_RADIUS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_NEWTON" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_NEWTON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_DYNE" 'constant) 1d-5)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_DYNE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_JOULE" 'constant) 1d0)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_JOULE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ERG" 'constant) 1d-7)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ERG" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_STEFAN_BOLTZMANN_CONSTANT" 'constant) 5.67040047374d-8)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_STEFAN_BOLTZMANN_CONSTANT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_THOMSON_CROSS_SECTION" 'constant) 6.65245893699d-29)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_THOMSON_CROSS_SECTION" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_BOHR_MAGNETON" 'constant) 9.27400899d-24)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_BOHR_MAGNETON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_NUCLEAR_MAGNETON" 'constant) 5.05078317d-27)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_NUCLEAR_MAGNETON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ELECTRON_MAGNETIC_MOMENT" 'constant) 9.28476362d-24)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ELECTRON_MAGNETIC_MOMENT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_PROTON_MAGNETIC_MOMENT" 'constant) 1.410606633d-26)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_PROTON_MAGNETIC_MOMENT" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_FARADAY" 'constant) 9.64853429775d4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_FARADAY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_ELECTRON_CHARGE" 'constant) 1.602176487d-19)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_ELECTRON_CHARGE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_VACUUM_PERMITTIVITY" 'constant) 8.854187817d-12)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_VACUUM_PERMITTIVITY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_VACUUM_PERMEABILITY" 'constant) 1.25663706144d-6)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_VACUUM_PERMEABILITY" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_DEBYE" 'constant) 3.33564095198d-30)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_DEBYE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_MKSA_GAUSS" 'constant) 1d-4)

(cl:export '#.(swig-lispify "GSL_CONST_MKSA_GAUSS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_FINE_STRUCTURE" 'constant) 7.297352533d-3)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_FINE_STRUCTURE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_AVOGADRO" 'constant) 6.02214199d23)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_AVOGADRO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_YOTTA" 'constant) 1d24)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_YOTTA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_ZETTA" 'constant) 1d21)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_ZETTA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_EXA" 'constant) 1d18)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_EXA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_PETA" 'constant) 1d15)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_PETA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_TERA" 'constant) 1d12)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_TERA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_GIGA" 'constant) 1d9)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_GIGA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_MEGA" 'constant) 1d6)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_MEGA" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_KILO" 'constant) 1d3)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_KILO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_MILLI" 'constant) 1d-3)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_MILLI" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_MICRO" 'constant) 1d-6)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_MICRO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_NANO" 'constant) 1d-9)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_NANO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_PICO" 'constant) 1d-12)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_PICO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_FEMTO" 'constant) 1d-15)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_FEMTO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_ATTO" 'constant) 1d-18)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_ATTO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_ZEPTO" 'constant) 1d-21)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_ZEPTO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_CONST_NUM_YOCTO" 'constant) 1d-24)

(cl:export '#.(swig-lispify "GSL_CONST_NUM_YOCTO" 'constant))

(cffi:defcfun ("gsl_deriv_central" #.(swig-lispify "gsl_deriv_central" 'function)) :int
  (f :pointer)
  (x :double)
  (h :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_deriv_central" 'function))

(cffi:defcfun ("gsl_deriv_backward" #.(swig-lispify "gsl_deriv_backward" 'function)) :int
  (f :pointer)
  (x :double)
  (h :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_deriv_backward" 'function))

(cffi:defcfun ("gsl_deriv_forward" #.(swig-lispify "gsl_deriv_forward" 'function)) :int
  (f :pointer)
  (x :double)
  (h :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_deriv_forward" 'function))

(cffi:defcfun ("gsl_dft_complex_forward" #.(swig-lispify "gsl_dft_complex_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_forward" 'function))

(cffi:defcfun ("gsl_dft_complex_backward" #.(swig-lispify "gsl_dft_complex_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_backward" 'function))

(cffi:defcfun ("gsl_dft_complex_inverse" #.(swig-lispify "gsl_dft_complex_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_inverse" 'function))

(cffi:defcfun ("gsl_dft_complex_transform" #.(swig-lispify "gsl_dft_complex_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer)
  (sign :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_transform" 'function))

(cffi:defcfun ("gsl_dft_complex_float_forward" #.(swig-lispify "gsl_dft_complex_float_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_float_forward" 'function))

(cffi:defcfun ("gsl_dft_complex_float_backward" #.(swig-lispify "gsl_dft_complex_float_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_float_backward" 'function))

(cffi:defcfun ("gsl_dft_complex_float_inverse" #.(swig-lispify "gsl_dft_complex_float_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_float_inverse" 'function))

(cffi:defcfun ("gsl_dft_complex_float_transform" #.(swig-lispify "gsl_dft_complex_float_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (result :pointer)
  (sign :pointer))

(cl:export '#.(swig-lispify "gsl_dft_complex_float_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_dht_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "nu" 'slotname) :double)
	(#.(swig-lispify "xmax" 'slotname) :double)
	(#.(swig-lispify "kmax" 'slotname) :double)
	(#.(swig-lispify "j" 'slotname) :pointer)
	(#.(swig-lispify "Jjj" 'slotname) :pointer)
	(#.(swig-lispify "J2" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_dht_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "nu" 'slotname))

(cl:export '#.(swig-lispify "xmax" 'slotname))

(cl:export '#.(swig-lispify "kmax" 'slotname))

(cl:export '#.(swig-lispify "j" 'slotname))

(cl:export '#.(swig-lispify "Jjj" 'slotname))

(cl:export '#.(swig-lispify "J2" 'slotname))

(cffi:defcfun ("gsl_dht_alloc" #.(swig-lispify "gsl_dht_alloc" 'function)) :pointer
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_dht_alloc" 'function))

(cffi:defcfun ("gsl_dht_new" #.(swig-lispify "gsl_dht_new" 'function)) :pointer
  (size :pointer)
  (nu :double)
  (xmax :double))

(cl:export '#.(swig-lispify "gsl_dht_new" 'function))

(cffi:defcfun ("gsl_dht_init" #.(swig-lispify "gsl_dht_init" 'function)) :int
  (t_arg0 :pointer)
  (nu :double)
  (xmax :double))

(cl:export '#.(swig-lispify "gsl_dht_init" 'function))

(cffi:defcfun ("gsl_dht_x_sample" #.(swig-lispify "gsl_dht_x_sample" 'function)) :double
  (t_arg0 :pointer)
  (n :int))

(cl:export '#.(swig-lispify "gsl_dht_x_sample" 'function))

(cffi:defcfun ("gsl_dht_k_sample" #.(swig-lispify "gsl_dht_k_sample" 'function)) :double
  (t_arg0 :pointer)
  (n :int))

(cl:export '#.(swig-lispify "gsl_dht_k_sample" 'function))

(cffi:defcfun ("gsl_dht_free" #.(swig-lispify "gsl_dht_free" 'function)) :void
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_dht_free" 'function))

(cffi:defcfun ("gsl_dht_apply" #.(swig-lispify "gsl_dht_apply" 'function)) :int
  (t_arg0 :pointer)
  (f_in :pointer)
  (f_out :pointer))

(cl:export '#.(swig-lispify "gsl_dht_apply" 'function))

(cffi:defcfun ("gsl_diff_central" #.(swig-lispify "gsl_diff_central" 'function)) :int
  (f :pointer)
  (x :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_diff_central" 'function))

(cffi:defcfun ("gsl_diff_backward" #.(swig-lispify "gsl_diff_backward" 'function)) :int
  (f :pointer)
  (x :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_diff_backward" 'function))

(cffi:defcfun ("gsl_diff_forward" #.(swig-lispify "gsl_diff_forward" 'function)) :int
  (f :pointer)
  (x :double)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_diff_forward" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_symm_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "d" 'slotname) :pointer)
	(#.(swig-lispify "sd" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symm_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "d" 'slotname))

(cl:export '#.(swig-lispify "sd" 'slotname))

(cffi:defcfun ("gsl_eigen_symm_alloc" #.(swig-lispify "gsl_eigen_symm_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symm_alloc" 'function))

(cffi:defcfun ("gsl_eigen_symm_free" #.(swig-lispify "gsl_eigen_symm_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symm_free" 'function))

(cffi:defcfun ("gsl_eigen_symm" #.(swig-lispify "gsl_eigen_symm" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symm" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_symmv_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "d" 'slotname) :pointer)
	(#.(swig-lispify "sd" 'slotname) :pointer)
	(#.(swig-lispify "gc" 'slotname) :pointer)
	(#.(swig-lispify "gs" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symmv_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "d" 'slotname))

(cl:export '#.(swig-lispify "sd" 'slotname))

(cl:export '#.(swig-lispify "gc" 'slotname))

(cl:export '#.(swig-lispify "gs" 'slotname))

(cffi:defcfun ("gsl_eigen_symmv_alloc" #.(swig-lispify "gsl_eigen_symmv_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symmv_alloc" 'function))

(cffi:defcfun ("gsl_eigen_symmv_free" #.(swig-lispify "gsl_eigen_symmv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symmv_free" 'function))

(cffi:defcfun ("gsl_eigen_symmv" #.(swig-lispify "gsl_eigen_symmv" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (evec :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_symmv" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_herm_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "d" 'slotname) :pointer)
	(#.(swig-lispify "sd" 'slotname) :pointer)
	(#.(swig-lispify "tau" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_herm_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "d" 'slotname))

(cl:export '#.(swig-lispify "sd" 'slotname))

(cl:export '#.(swig-lispify "tau" 'slotname))

(cffi:defcfun ("gsl_eigen_herm_alloc" #.(swig-lispify "gsl_eigen_herm_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_herm_alloc" 'function))

(cffi:defcfun ("gsl_eigen_herm_free" #.(swig-lispify "gsl_eigen_herm_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_herm_free" 'function))

(cffi:defcfun ("gsl_eigen_herm" #.(swig-lispify "gsl_eigen_herm" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_herm" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_hermv_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "d" 'slotname) :pointer)
	(#.(swig-lispify "sd" 'slotname) :pointer)
	(#.(swig-lispify "tau" 'slotname) :pointer)
	(#.(swig-lispify "gc" 'slotname) :pointer)
	(#.(swig-lispify "gs" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_hermv_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "d" 'slotname))

(cl:export '#.(swig-lispify "sd" 'slotname))

(cl:export '#.(swig-lispify "tau" 'slotname))

(cl:export '#.(swig-lispify "gc" 'slotname))

(cl:export '#.(swig-lispify "gs" 'slotname))

(cffi:defcfun ("gsl_eigen_hermv_alloc" #.(swig-lispify "gsl_eigen_hermv_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_hermv_alloc" 'function))

(cffi:defcfun ("gsl_eigen_hermv_free" #.(swig-lispify "gsl_eigen_hermv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_hermv_free" 'function))

(cffi:defcfun ("gsl_eigen_hermv" #.(swig-lispify "gsl_eigen_hermv" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (evec :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_hermv" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_francis_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "max_iterations" 'slotname) :pointer)
	(#.(swig-lispify "n_iter" 'slotname) :pointer)
	(#.(swig-lispify "n_evals" 'slotname) :pointer)
	(#.(swig-lispify "compute_t" 'slotname) :int)
	(#.(swig-lispify "H" 'slotname) :pointer)
	(#.(swig-lispify "Z" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_francis_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "max_iterations" 'slotname))

(cl:export '#.(swig-lispify "n_iter" 'slotname))

(cl:export '#.(swig-lispify "n_evals" 'slotname))

(cl:export '#.(swig-lispify "compute_t" 'slotname))

(cl:export '#.(swig-lispify "H" 'slotname))

(cl:export '#.(swig-lispify "Z" 'slotname))

(cffi:defcfun ("gsl_eigen_francis_alloc" #.(swig-lispify "gsl_eigen_francis_alloc" 'function)) :pointer)

(cl:export '#.(swig-lispify "gsl_eigen_francis_alloc" 'function))

(cffi:defcfun ("gsl_eigen_francis_free" #.(swig-lispify "gsl_eigen_francis_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_francis_free" 'function))

(cffi:defcfun ("gsl_eigen_francis_T" #.(swig-lispify "gsl_eigen_francis_T" 'function)) :void
  (compute_t :int)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_francis_T" 'function))

(cffi:defcfun ("gsl_eigen_francis" #.(swig-lispify "gsl_eigen_francis" 'function)) :int
  (H :pointer)
  (eval :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_francis" 'function))

(cffi:defcfun ("gsl_eigen_francis_Z" #.(swig-lispify "gsl_eigen_francis_Z" 'function)) :int
  (H :pointer)
  (eval :pointer)
  (Z :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_francis_Z" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_nonsymm_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "diag" 'slotname) :pointer)
	(#.(swig-lispify "tau" 'slotname) :pointer)
	(#.(swig-lispify "Z" 'slotname) :pointer)
	(#.(swig-lispify "do_balance" 'slotname) :int)
	(#.(swig-lispify "n_evals" 'slotname) :pointer)
	(#.(swig-lispify "francis_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymm_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "diag" 'slotname))

(cl:export '#.(swig-lispify "tau" 'slotname))

(cl:export '#.(swig-lispify "Z" 'slotname))

(cl:export '#.(swig-lispify "do_balance" 'slotname))

(cl:export '#.(swig-lispify "n_evals" 'slotname))

(cl:export '#.(swig-lispify "francis_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_nonsymm_alloc" #.(swig-lispify "gsl_eigen_nonsymm_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymm_alloc" 'function))

(cffi:defcfun ("gsl_eigen_nonsymm_free" #.(swig-lispify "gsl_eigen_nonsymm_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymm_free" 'function))

(cffi:defcfun ("gsl_eigen_nonsymm_params" #.(swig-lispify "gsl_eigen_nonsymm_params" 'function)) :void
  (compute_t :int)
  (balance :int)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymm_params" 'function))

(cffi:defcfun ("gsl_eigen_nonsymm" #.(swig-lispify "gsl_eigen_nonsymm" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymm" 'function))

(cffi:defcfun ("gsl_eigen_nonsymm_Z" #.(swig-lispify "gsl_eigen_nonsymm_Z" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (Z :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymm_Z" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_nonsymmv_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "work" 'slotname) :pointer)
	(#.(swig-lispify "work2" 'slotname) :pointer)
	(#.(swig-lispify "work3" 'slotname) :pointer)
	(#.(swig-lispify "Z" 'slotname) :pointer)
	(#.(swig-lispify "nonsymm_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "work" 'slotname))

(cl:export '#.(swig-lispify "work2" 'slotname))

(cl:export '#.(swig-lispify "work3" 'slotname))

(cl:export '#.(swig-lispify "Z" 'slotname))

(cl:export '#.(swig-lispify "nonsymm_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_nonsymmv_alloc" #.(swig-lispify "gsl_eigen_nonsymmv_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv_alloc" 'function))

(cffi:defcfun ("gsl_eigen_nonsymmv_free" #.(swig-lispify "gsl_eigen_nonsymmv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv_free" 'function))

(cffi:defcfun ("gsl_eigen_nonsymmv_params" #.(swig-lispify "gsl_eigen_nonsymmv_params" 'function)) :void
  (balance :int)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv_params" 'function))

(cffi:defcfun ("gsl_eigen_nonsymmv" #.(swig-lispify "gsl_eigen_nonsymmv" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (evec :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv" 'function))

(cffi:defcfun ("gsl_eigen_nonsymmv_Z" #.(swig-lispify "gsl_eigen_nonsymmv_Z" 'function)) :int
  (A :pointer)
  (eval :pointer)
  (evec :pointer)
  (Z :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv_Z" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_gensymm_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "symm_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymm_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "symm_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_gensymm_alloc" #.(swig-lispify "gsl_eigen_gensymm_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymm_alloc" 'function))

(cffi:defcfun ("gsl_eigen_gensymm_free" #.(swig-lispify "gsl_eigen_gensymm_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymm_free" 'function))

(cffi:defcfun ("gsl_eigen_gensymm" #.(swig-lispify "gsl_eigen_gensymm" 'function)) :int
  (A :pointer)
  (B :pointer)
  (eval :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymm" 'function))

(cffi:defcfun ("gsl_eigen_gensymm_standardize" #.(swig-lispify "gsl_eigen_gensymm_standardize" 'function)) :int
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymm_standardize" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_gensymmv_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "symmv_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymmv_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "symmv_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_gensymmv_alloc" #.(swig-lispify "gsl_eigen_gensymmv_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymmv_alloc" 'function))

(cffi:defcfun ("gsl_eigen_gensymmv_free" #.(swig-lispify "gsl_eigen_gensymmv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymmv_free" 'function))

(cffi:defcfun ("gsl_eigen_gensymmv" #.(swig-lispify "gsl_eigen_gensymmv" 'function)) :int
  (A :pointer)
  (B :pointer)
  (eval :pointer)
  (evec :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gensymmv" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_genherm_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "herm_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genherm_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "herm_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_genherm_alloc" #.(swig-lispify "gsl_eigen_genherm_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genherm_alloc" 'function))

(cffi:defcfun ("gsl_eigen_genherm_free" #.(swig-lispify "gsl_eigen_genherm_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genherm_free" 'function))

(cffi:defcfun ("gsl_eigen_genherm" #.(swig-lispify "gsl_eigen_genherm" 'function)) :int
  (A :pointer)
  (B :pointer)
  (eval :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genherm" 'function))

(cffi:defcfun ("gsl_eigen_genherm_standardize" #.(swig-lispify "gsl_eigen_genherm_standardize" 'function)) :int
  (A :pointer)
  (B :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genherm_standardize" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_genhermv_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "hermv_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genhermv_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "hermv_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_genhermv_alloc" #.(swig-lispify "gsl_eigen_genhermv_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genhermv_alloc" 'function))

(cffi:defcfun ("gsl_eigen_genhermv_free" #.(swig-lispify "gsl_eigen_genhermv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genhermv_free" 'function))

(cffi:defcfun ("gsl_eigen_genhermv" #.(swig-lispify "gsl_eigen_genhermv" 'function)) :int
  (A :pointer)
  (B :pointer)
  (eval :pointer)
  (evec :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genhermv" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_gen_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "work" 'slotname) :pointer)
	(#.(swig-lispify "n_evals" 'slotname) :pointer)
	(#.(swig-lispify "max_iterations" 'slotname) :pointer)
	(#.(swig-lispify "n_iter" 'slotname) :pointer)
	(#.(swig-lispify "eshift" 'slotname) :double)
	(#.(swig-lispify "needtop" 'slotname) :int)
	(#.(swig-lispify "atol" 'slotname) :double)
	(#.(swig-lispify "btol" 'slotname) :double)
	(#.(swig-lispify "ascale" 'slotname) :double)
	(#.(swig-lispify "bscale" 'slotname) :double)
	(#.(swig-lispify "H" 'slotname) :pointer)
	(#.(swig-lispify "R" 'slotname) :pointer)
	(#.(swig-lispify "compute_s" 'slotname) :int)
	(#.(swig-lispify "compute_t" 'slotname) :int)
	(#.(swig-lispify "Q" 'slotname) :pointer)
	(#.(swig-lispify "Z" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gen_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "work" 'slotname))

(cl:export '#.(swig-lispify "n_evals" 'slotname))

(cl:export '#.(swig-lispify "max_iterations" 'slotname))

(cl:export '#.(swig-lispify "n_iter" 'slotname))

(cl:export '#.(swig-lispify "eshift" 'slotname))

(cl:export '#.(swig-lispify "needtop" 'slotname))

(cl:export '#.(swig-lispify "atol" 'slotname))

(cl:export '#.(swig-lispify "btol" 'slotname))

(cl:export '#.(swig-lispify "ascale" 'slotname))

(cl:export '#.(swig-lispify "bscale" 'slotname))

(cl:export '#.(swig-lispify "H" 'slotname))

(cl:export '#.(swig-lispify "R" 'slotname))

(cl:export '#.(swig-lispify "compute_s" 'slotname))

(cl:export '#.(swig-lispify "compute_t" 'slotname))

(cl:export '#.(swig-lispify "Q" 'slotname))

(cl:export '#.(swig-lispify "Z" 'slotname))

(cffi:defcfun ("gsl_eigen_gen_alloc" #.(swig-lispify "gsl_eigen_gen_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gen_alloc" 'function))

(cffi:defcfun ("gsl_eigen_gen_free" #.(swig-lispify "gsl_eigen_gen_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gen_free" 'function))

(cffi:defcfun ("gsl_eigen_gen_params" #.(swig-lispify "gsl_eigen_gen_params" 'function)) :void
  (compute_s :int)
  (compute_t :int)
  (balance :int)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gen_params" 'function))

(cffi:defcfun ("gsl_eigen_gen" #.(swig-lispify "gsl_eigen_gen" 'function)) :int
  (A :pointer)
  (B :pointer)
  (alpha :pointer)
  (beta :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gen" 'function))

(cffi:defcfun ("gsl_eigen_gen_QZ" #.(swig-lispify "gsl_eigen_gen_QZ" 'function)) :int
  (A :pointer)
  (B :pointer)
  (alpha :pointer)
  (beta :pointer)
  (Q :pointer)
  (Z :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_gen_QZ" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_eigen_genv_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "work1" 'slotname) :pointer)
	(#.(swig-lispify "work2" 'slotname) :pointer)
	(#.(swig-lispify "work3" 'slotname) :pointer)
	(#.(swig-lispify "work4" 'slotname) :pointer)
	(#.(swig-lispify "work5" 'slotname) :pointer)
	(#.(swig-lispify "work6" 'slotname) :pointer)
	(#.(swig-lispify "Q" 'slotname) :pointer)
	(#.(swig-lispify "Z" 'slotname) :pointer)
	(#.(swig-lispify "gen_workspace_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genv_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "work1" 'slotname))

(cl:export '#.(swig-lispify "work2" 'slotname))

(cl:export '#.(swig-lispify "work3" 'slotname))

(cl:export '#.(swig-lispify "work4" 'slotname))

(cl:export '#.(swig-lispify "work5" 'slotname))

(cl:export '#.(swig-lispify "work6" 'slotname))

(cl:export '#.(swig-lispify "Q" 'slotname))

(cl:export '#.(swig-lispify "Z" 'slotname))

(cl:export '#.(swig-lispify "gen_workspace_p" 'slotname))

(cffi:defcfun ("gsl_eigen_genv_alloc" #.(swig-lispify "gsl_eigen_genv_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genv_alloc" 'function))

(cffi:defcfun ("gsl_eigen_genv_free" #.(swig-lispify "gsl_eigen_genv_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genv_free" 'function))

(cffi:defcfun ("gsl_eigen_genv" #.(swig-lispify "gsl_eigen_genv" 'function)) :int
  (A :pointer)
  (B :pointer)
  (alpha :pointer)
  (beta :pointer)
  (evec :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genv" 'function))

(cffi:defcfun ("gsl_eigen_genv_QZ" #.(swig-lispify "gsl_eigen_genv_QZ" 'function)) :int
  (A :pointer)
  (B :pointer)
  (alpha :pointer)
  (beta :pointer)
  (evec :pointer)
  (Q :pointer)
  (Z :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_genv_QZ" 'function))

(cffi:defcenum #.(swig-lispify "gsl_eigen_sort_t" 'enumname)
	#.(swig-lispify "GSL_EIGEN_SORT_VAL_ASC" 'enumvalue :keyword)
	#.(swig-lispify "GSL_EIGEN_SORT_VAL_DESC" 'enumvalue :keyword)
	#.(swig-lispify "GSL_EIGEN_SORT_ABS_ASC" 'enumvalue :keyword)
	#.(swig-lispify "GSL_EIGEN_SORT_ABS_DESC" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "gsl_eigen_sort_t" 'enumname))

(cffi:defcfun ("gsl_eigen_symmv_sort" #.(swig-lispify "gsl_eigen_symmv_sort" 'function)) :int
  (eval :pointer)
  (evec :pointer)
  (sort_type #.(swig-lispify "gsl_eigen_sort_t" 'enumname)))

(cl:export '#.(swig-lispify "gsl_eigen_symmv_sort" 'function))

(cffi:defcfun ("gsl_eigen_hermv_sort" #.(swig-lispify "gsl_eigen_hermv_sort" 'function)) :int
  (eval :pointer)
  (evec :pointer)
  (sort_type #.(swig-lispify "gsl_eigen_sort_t" 'enumname)))

(cl:export '#.(swig-lispify "gsl_eigen_hermv_sort" 'function))

(cffi:defcfun ("gsl_eigen_nonsymmv_sort" #.(swig-lispify "gsl_eigen_nonsymmv_sort" 'function)) :int
  (eval :pointer)
  (evec :pointer)
  (sort_type #.(swig-lispify "gsl_eigen_sort_t" 'enumname)))

(cl:export '#.(swig-lispify "gsl_eigen_nonsymmv_sort" 'function))

(cffi:defcfun ("gsl_eigen_gensymmv_sort" #.(swig-lispify "gsl_eigen_gensymmv_sort" 'function)) :int
  (eval :pointer)
  (evec :pointer)
  (sort_type #.(swig-lispify "gsl_eigen_sort_t" 'enumname)))

(cl:export '#.(swig-lispify "gsl_eigen_gensymmv_sort" 'function))

(cffi:defcfun ("gsl_eigen_genhermv_sort" #.(swig-lispify "gsl_eigen_genhermv_sort" 'function)) :int
  (eval :pointer)
  (evec :pointer)
  (sort_type #.(swig-lispify "gsl_eigen_sort_t" 'enumname)))

(cl:export '#.(swig-lispify "gsl_eigen_genhermv_sort" 'function))

(cffi:defcfun ("gsl_eigen_genv_sort" #.(swig-lispify "gsl_eigen_genv_sort" 'function)) :int
  (alpha :pointer)
  (beta :pointer)
  (evec :pointer)
  (sort_type #.(swig-lispify "gsl_eigen_sort_t" 'enumname)))

(cl:export '#.(swig-lispify "gsl_eigen_genv_sort" 'function))

(cffi:defcfun ("gsl_schur_gen_eigvals" #.(swig-lispify "gsl_schur_gen_eigvals" 'function)) :int
  (A :pointer)
  (B :pointer)
  (wr1 :pointer)
  (wr2 :pointer)
  (wi :pointer)
  (scale1 :pointer)
  (scale2 :pointer))

(cl:export '#.(swig-lispify "gsl_schur_gen_eigvals" 'function))

(cffi:defcfun ("gsl_schur_solve_equation" #.(swig-lispify "gsl_schur_solve_equation" 'function)) :int
  (ca :double)
  (A :pointer)
  (z :double)
  (d1 :double)
  (d2 :double)
  (b :pointer)
  (x :pointer)
  (s :pointer)
  (xnorm :pointer)
  (smin :double))

(cl:export '#.(swig-lispify "gsl_schur_solve_equation" 'function))

(cffi:defcfun ("gsl_schur_solve_equation_z" #.(swig-lispify "gsl_schur_solve_equation_z" 'function)) :int
  (ca :double)
  (A :pointer)
  (z :pointer)
  (d1 :double)
  (d2 :double)
  (b :pointer)
  (x :pointer)
  (s :pointer)
  (xnorm :pointer)
  (smin :double))

(cl:export '#.(swig-lispify "gsl_schur_solve_equation_z" 'function))

(cffi:defcfun ("gsl_eigen_jacobi" #.(swig-lispify "gsl_eigen_jacobi" 'function)) :int
  (matrix :pointer)
  (eval :pointer)
  (evec :pointer)
  (max_rot :unsigned-int)
  (nrot :pointer))

(cl:export '#.(swig-lispify "gsl_eigen_jacobi" 'function))

(cffi:defcfun ("gsl_eigen_invert_jacobi" #.(swig-lispify "gsl_eigen_invert_jacobi" 'function)) :int
  (matrix :pointer)
  (ainv :pointer)
  (max_rot :unsigned-int))

(cl:export '#.(swig-lispify "gsl_eigen_invert_jacobi" 'function))

(cffi:defcenum #.(swig-lispify "gsl_fft_direction" 'enumname)
	(#.(swig-lispify "gsl_fft_forward" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "gsl_fft_backward" 'enumvalue :keyword) #.+1))

(cl:export '#.(swig-lispify "gsl_fft_direction" 'enumname))

(cffi:defcfun ("gsl_fft_complex_radix2_forward" #.(swig-lispify "gsl_fft_complex_radix2_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_forward" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_backward" #.(swig-lispify "gsl_fft_complex_radix2_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_backward" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_inverse" #.(swig-lispify "gsl_fft_complex_radix2_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_inverse" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_transform" #.(swig-lispify "gsl_fft_complex_radix2_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (sign #.(swig-lispify "gsl_fft_direction" 'enumname)))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_transform" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_dif_forward" #.(swig-lispify "gsl_fft_complex_radix2_dif_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_dif_forward" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_dif_backward" #.(swig-lispify "gsl_fft_complex_radix2_dif_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_dif_backward" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_dif_inverse" #.(swig-lispify "gsl_fft_complex_radix2_dif_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_dif_inverse" 'function))

(cffi:defcfun ("gsl_fft_complex_radix2_dif_transform" #.(swig-lispify "gsl_fft_complex_radix2_dif_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (sign #.(swig-lispify "gsl_fft_direction" 'enumname)))

(cl:export '#.(swig-lispify "gsl_fft_complex_radix2_dif_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_fft_complex_wavetable" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "nf" 'slotname) :pointer)
	(#.(swig-lispify "factor" 'slotname) :pointer)
	(#.(swig-lispify "twiddle" 'slotname) :pointer)
	(#.(swig-lispify "trig" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_wavetable" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nf" 'slotname))

(cl:export '#.(swig-lispify "factor" 'slotname))

(cl:export '#.(swig-lispify "twiddle" 'slotname))

(cl:export '#.(swig-lispify "trig" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_fft_complex_workspace" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "scratch" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_workspace" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "scratch" 'slotname))

(cffi:defcfun ("gsl_fft_complex_wavetable_alloc" #.(swig-lispify "gsl_fft_complex_wavetable_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_wavetable_alloc" 'function))

(cffi:defcfun ("gsl_fft_complex_wavetable_free" #.(swig-lispify "gsl_fft_complex_wavetable_free" 'function)) :void
  (wavetable :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_wavetable_free" 'function))

(cffi:defcfun ("gsl_fft_complex_workspace_alloc" #.(swig-lispify "gsl_fft_complex_workspace_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_workspace_alloc" 'function))

(cffi:defcfun ("gsl_fft_complex_workspace_free" #.(swig-lispify "gsl_fft_complex_workspace_free" 'function)) :void
  (workspace :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_workspace_free" 'function))

(cffi:defcfun ("gsl_fft_complex_memcpy" #.(swig-lispify "gsl_fft_complex_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_memcpy" 'function))

(cffi:defcfun ("gsl_fft_complex_forward" #.(swig-lispify "gsl_fft_complex_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_forward" 'function))

(cffi:defcfun ("gsl_fft_complex_backward" #.(swig-lispify "gsl_fft_complex_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_backward" 'function))

(cffi:defcfun ("gsl_fft_complex_inverse" #.(swig-lispify "gsl_fft_complex_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_inverse" 'function))

(cffi:defcfun ("gsl_fft_complex_transform" #.(swig-lispify "gsl_fft_complex_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer)
  (sign #.(swig-lispify "gsl_fft_direction" 'enumname)))

(cl:export '#.(swig-lispify "gsl_fft_complex_transform" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_forward" #.(swig-lispify "gsl_fft_complex_float_radix2_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_forward" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_backward" #.(swig-lispify "gsl_fft_complex_float_radix2_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_backward" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_inverse" #.(swig-lispify "gsl_fft_complex_float_radix2_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_inverse" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_transform" #.(swig-lispify "gsl_fft_complex_float_radix2_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (sign #.(swig-lispify "gsl_fft_direction" 'enumname)))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_transform" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_dif_forward" #.(swig-lispify "gsl_fft_complex_float_radix2_dif_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_dif_forward" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_dif_backward" #.(swig-lispify "gsl_fft_complex_float_radix2_dif_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_dif_backward" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_dif_inverse" #.(swig-lispify "gsl_fft_complex_float_radix2_dif_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_dif_inverse" 'function))

(cffi:defcfun ("gsl_fft_complex_float_radix2_dif_transform" #.(swig-lispify "gsl_fft_complex_float_radix2_dif_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (sign #.(swig-lispify "gsl_fft_direction" 'enumname)))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_radix2_dif_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_fft_complex_wavetable_float" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "nf" 'slotname) :pointer)
	(#.(swig-lispify "factor" 'slotname) :pointer)
	(#.(swig-lispify "twiddle" 'slotname) :pointer)
	(#.(swig-lispify "trig" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_wavetable_float" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nf" 'slotname))

(cl:export '#.(swig-lispify "factor" 'slotname))

(cl:export '#.(swig-lispify "twiddle" 'slotname))

(cl:export '#.(swig-lispify "trig" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_fft_complex_workspace_float" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "scratch" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_workspace_float" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "scratch" 'slotname))

(cffi:defcfun ("gsl_fft_complex_wavetable_float_alloc" #.(swig-lispify "gsl_fft_complex_wavetable_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_wavetable_float_alloc" 'function))

(cffi:defcfun ("gsl_fft_complex_wavetable_float_free" #.(swig-lispify "gsl_fft_complex_wavetable_float_free" 'function)) :void
  (wavetable :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_wavetable_float_free" 'function))

(cffi:defcfun ("gsl_fft_complex_workspace_float_alloc" #.(swig-lispify "gsl_fft_complex_workspace_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_workspace_float_alloc" 'function))

(cffi:defcfun ("gsl_fft_complex_workspace_float_free" #.(swig-lispify "gsl_fft_complex_workspace_float_free" 'function)) :void
  (workspace :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_workspace_float_free" 'function))

(cffi:defcfun ("gsl_fft_complex_float_memcpy" #.(swig-lispify "gsl_fft_complex_float_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_memcpy" 'function))

(cffi:defcfun ("gsl_fft_complex_float_forward" #.(swig-lispify "gsl_fft_complex_float_forward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_forward" 'function))

(cffi:defcfun ("gsl_fft_complex_float_backward" #.(swig-lispify "gsl_fft_complex_float_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_backward" 'function))

(cffi:defcfun ("gsl_fft_complex_float_inverse" #.(swig-lispify "gsl_fft_complex_float_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_inverse" 'function))

(cffi:defcfun ("gsl_fft_complex_float_transform" #.(swig-lispify "gsl_fft_complex_float_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer)
  (sign #.(swig-lispify "gsl_fft_direction" 'enumname)))

(cl:export '#.(swig-lispify "gsl_fft_complex_float_transform" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_radix2_backward" #.(swig-lispify "gsl_fft_halfcomplex_radix2_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_radix2_backward" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_radix2_inverse" #.(swig-lispify "gsl_fft_halfcomplex_radix2_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_radix2_inverse" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_radix2_transform" #.(swig-lispify "gsl_fft_halfcomplex_radix2_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_radix2_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_fft_halfcomplex_wavetable" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "nf" 'slotname) :pointer)
	(#.(swig-lispify "factor" 'slotname) :pointer)
	(#.(swig-lispify "twiddle" 'slotname) :pointer)
	(#.(swig-lispify "trig" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_wavetable" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nf" 'slotname))

(cl:export '#.(swig-lispify "factor" 'slotname))

(cl:export '#.(swig-lispify "twiddle" 'slotname))

(cl:export '#.(swig-lispify "trig" 'slotname))

(cffi:defcfun ("gsl_fft_halfcomplex_wavetable_alloc" #.(swig-lispify "gsl_fft_halfcomplex_wavetable_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_wavetable_alloc" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_wavetable_free" #.(swig-lispify "gsl_fft_halfcomplex_wavetable_free" 'function)) :void
  (wavetable :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_wavetable_free" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_backward" #.(swig-lispify "gsl_fft_halfcomplex_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_backward" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_inverse" #.(swig-lispify "gsl_fft_halfcomplex_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_inverse" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_transform" #.(swig-lispify "gsl_fft_halfcomplex_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_transform" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_unpack" #.(swig-lispify "gsl_fft_halfcomplex_unpack" 'function)) :int
  (halfcomplex_coefficient :pointer)
  (complex_coefficient :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_unpack" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_radix2_unpack" #.(swig-lispify "gsl_fft_halfcomplex_radix2_unpack" 'function)) :int
  (halfcomplex_coefficient :pointer)
  (complex_coefficient :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_radix2_unpack" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_radix2_backward" #.(swig-lispify "gsl_fft_halfcomplex_float_radix2_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_radix2_backward" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_radix2_inverse" #.(swig-lispify "gsl_fft_halfcomplex_float_radix2_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_radix2_inverse" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_radix2_transform" #.(swig-lispify "gsl_fft_halfcomplex_float_radix2_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_radix2_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_fft_halfcomplex_wavetable_float" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "nf" 'slotname) :pointer)
	(#.(swig-lispify "factor" 'slotname) :pointer)
	(#.(swig-lispify "twiddle" 'slotname) :pointer)
	(#.(swig-lispify "trig" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_wavetable_float" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nf" 'slotname))

(cl:export '#.(swig-lispify "factor" 'slotname))

(cl:export '#.(swig-lispify "twiddle" 'slotname))

(cl:export '#.(swig-lispify "trig" 'slotname))

(cffi:defcfun ("gsl_fft_halfcomplex_wavetable_float_alloc" #.(swig-lispify "gsl_fft_halfcomplex_wavetable_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_wavetable_float_alloc" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_wavetable_float_free" #.(swig-lispify "gsl_fft_halfcomplex_wavetable_float_free" 'function)) :void
  (wavetable :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_wavetable_float_free" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_backward" #.(swig-lispify "gsl_fft_halfcomplex_float_backward" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_backward" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_inverse" #.(swig-lispify "gsl_fft_halfcomplex_float_inverse" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_inverse" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_transform" #.(swig-lispify "gsl_fft_halfcomplex_float_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_transform" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_unpack" #.(swig-lispify "gsl_fft_halfcomplex_float_unpack" 'function)) :int
  (halfcomplex_coefficient :pointer)
  (complex_coefficient :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_unpack" 'function))

(cffi:defcfun ("gsl_fft_halfcomplex_float_radix2_unpack" #.(swig-lispify "gsl_fft_halfcomplex_float_radix2_unpack" 'function)) :int
  (halfcomplex_coefficient :pointer)
  (complex_coefficient :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_halfcomplex_float_radix2_unpack" 'function))

(cffi:defcfun ("gsl_fft_real_radix2_transform" #.(swig-lispify "gsl_fft_real_radix2_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_radix2_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_fft_real_wavetable" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "nf" 'slotname) :pointer)
	(#.(swig-lispify "factor" 'slotname) :pointer)
	(#.(swig-lispify "twiddle" 'slotname) :pointer)
	(#.(swig-lispify "trig" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_wavetable" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nf" 'slotname))

(cl:export '#.(swig-lispify "factor" 'slotname))

(cl:export '#.(swig-lispify "twiddle" 'slotname))

(cl:export '#.(swig-lispify "trig" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_fft_real_workspace" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "scratch" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_workspace" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "scratch" 'slotname))

(cffi:defcfun ("gsl_fft_real_wavetable_alloc" #.(swig-lispify "gsl_fft_real_wavetable_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_wavetable_alloc" 'function))

(cffi:defcfun ("gsl_fft_real_wavetable_free" #.(swig-lispify "gsl_fft_real_wavetable_free" 'function)) :void
  (wavetable :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_wavetable_free" 'function))

(cffi:defcfun ("gsl_fft_real_workspace_alloc" #.(swig-lispify "gsl_fft_real_workspace_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_workspace_alloc" 'function))

(cffi:defcfun ("gsl_fft_real_workspace_free" #.(swig-lispify "gsl_fft_real_workspace_free" 'function)) :void
  (workspace :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_workspace_free" 'function))

(cffi:defcfun ("gsl_fft_real_transform" #.(swig-lispify "gsl_fft_real_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_transform" 'function))

(cffi:defcfun ("gsl_fft_real_unpack" #.(swig-lispify "gsl_fft_real_unpack" 'function)) :int
  (real_coefficient :pointer)
  (complex_coefficient :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_unpack" 'function))

(cffi:defcfun ("gsl_fft_real_float_radix2_transform" #.(swig-lispify "gsl_fft_real_float_radix2_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_float_radix2_transform" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_fft_real_wavetable_float" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "nf" 'slotname) :pointer)
	(#.(swig-lispify "factor" 'slotname) :pointer)
	(#.(swig-lispify "twiddle" 'slotname) :pointer)
	(#.(swig-lispify "trig" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_wavetable_float" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nf" 'slotname))

(cl:export '#.(swig-lispify "factor" 'slotname))

(cl:export '#.(swig-lispify "twiddle" 'slotname))

(cl:export '#.(swig-lispify "trig" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_fft_real_workspace_float" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "scratch" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_workspace_float" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "scratch" 'slotname))

(cffi:defcfun ("gsl_fft_real_wavetable_float_alloc" #.(swig-lispify "gsl_fft_real_wavetable_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_wavetable_float_alloc" 'function))

(cffi:defcfun ("gsl_fft_real_wavetable_float_free" #.(swig-lispify "gsl_fft_real_wavetable_float_free" 'function)) :void
  (wavetable :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_wavetable_float_free" 'function))

(cffi:defcfun ("gsl_fft_real_workspace_float_alloc" #.(swig-lispify "gsl_fft_real_workspace_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_workspace_float_alloc" 'function))

(cffi:defcfun ("gsl_fft_real_workspace_float_free" #.(swig-lispify "gsl_fft_real_workspace_float_free" 'function)) :void
  (workspace :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_workspace_float_free" 'function))

(cffi:defcfun ("gsl_fft_real_float_transform" #.(swig-lispify "gsl_fft_real_float_transform" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wavetable :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_float_transform" 'function))

(cffi:defcfun ("gsl_fft_real_float_unpack" #.(swig-lispify "gsl_fft_real_float_unpack" 'function)) :int
  (real_float_coefficient :pointer)
  (complex_coefficient :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_fft_real_float_unpack" 'function))

(cffi:defcfun ("gsl_fit_linear" #.(swig-lispify "gsl_fit_linear" 'function)) :int
  (x :pointer)
  (xstride :pointer)
  (y :pointer)
  (ystride :pointer)
  (n :pointer)
  (c0 :pointer)
  (c1 :pointer)
  (cov00 :pointer)
  (cov01 :pointer)
  (cov11 :pointer)
  (sumsq :pointer))

(cl:export '#.(swig-lispify "gsl_fit_linear" 'function))

(cffi:defcfun ("gsl_fit_wlinear" #.(swig-lispify "gsl_fit_wlinear" 'function)) :int
  (x :pointer)
  (xstride :pointer)
  (w :pointer)
  (wstride :pointer)
  (y :pointer)
  (ystride :pointer)
  (n :pointer)
  (c0 :pointer)
  (c1 :pointer)
  (cov00 :pointer)
  (cov01 :pointer)
  (cov11 :pointer)
  (chisq :pointer))

(cl:export '#.(swig-lispify "gsl_fit_wlinear" 'function))

(cffi:defcfun ("gsl_fit_linear_est" #.(swig-lispify "gsl_fit_linear_est" 'function)) :int
  (x :double)
  (c0 :double)
  (c1 :double)
  (cov00 :double)
  (cov01 :double)
  (cov11 :double)
  (y :pointer)
  (y_err :pointer))

(cl:export '#.(swig-lispify "gsl_fit_linear_est" 'function))

(cffi:defcfun ("gsl_fit_mul" #.(swig-lispify "gsl_fit_mul" 'function)) :int
  (x :pointer)
  (xstride :pointer)
  (y :pointer)
  (ystride :pointer)
  (n :pointer)
  (c1 :pointer)
  (cov11 :pointer)
  (sumsq :pointer))

(cl:export '#.(swig-lispify "gsl_fit_mul" 'function))

(cffi:defcfun ("gsl_fit_wmul" #.(swig-lispify "gsl_fit_wmul" 'function)) :int
  (x :pointer)
  (xstride :pointer)
  (w :pointer)
  (wstride :pointer)
  (y :pointer)
  (ystride :pointer)
  (n :pointer)
  (c1 :pointer)
  (cov11 :pointer)
  (sumsq :pointer))

(cl:export '#.(swig-lispify "gsl_fit_wmul" 'function))

(cffi:defcfun ("gsl_fit_mul_est" #.(swig-lispify "gsl_fit_mul_est" 'function)) :int
  (x :double)
  (c1 :double)
  (cov11 :double)
  (y :pointer)
  (y_err :pointer))

(cl:export '#.(swig-lispify "gsl_fit_mul_est" 'function))

(cffi:defcfun ("gsl_heapsort" #.(swig-lispify "gsl_heapsort" 'function)) :void
  (array :pointer)
  (count :pointer)
  (size :pointer)
  (compare :pointer))

(cl:export '#.(swig-lispify "gsl_heapsort" 'function))

(cffi:defcfun ("gsl_heapsort_index" #.(swig-lispify "gsl_heapsort_index" 'function)) :int
  (p :pointer)
  (array :pointer)
  (count :pointer)
  (size :pointer)
  (compare :pointer))

(cl:export '#.(swig-lispify "gsl_heapsort_index" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_histogram" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "range" 'slotname) :pointer)
	(#.(swig-lispify "bin" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_histogram" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "range" 'slotname))

(cl:export '#.(swig-lispify "bin" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_histogram_pdf" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "range" 'slotname) :pointer)
	(#.(swig-lispify "sum" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_pdf" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "range" 'slotname))

(cl:export '#.(swig-lispify "sum" 'slotname))

(cffi:defcfun ("gsl_histogram_alloc" #.(swig-lispify "gsl_histogram_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_alloc" 'function))

(cffi:defcfun ("gsl_histogram_calloc" #.(swig-lispify "gsl_histogram_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_calloc" 'function))

(cffi:defcfun ("gsl_histogram_calloc_uniform" #.(swig-lispify "gsl_histogram_calloc_uniform" 'function)) :pointer
  (n :pointer)
  (xmin :double)
  (xmax :double))

(cl:export '#.(swig-lispify "gsl_histogram_calloc_uniform" 'function))

(cffi:defcfun ("gsl_histogram_free" #.(swig-lispify "gsl_histogram_free" 'function)) :void
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_free" 'function))

(cffi:defcfun ("gsl_histogram_increment" #.(swig-lispify "gsl_histogram_increment" 'function)) :int
  (h :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_histogram_increment" 'function))

(cffi:defcfun ("gsl_histogram_accumulate" #.(swig-lispify "gsl_histogram_accumulate" 'function)) :int
  (h :pointer)
  (x :double)
  (weight :double))

(cl:export '#.(swig-lispify "gsl_histogram_accumulate" 'function))

(cffi:defcfun ("gsl_histogram_find" #.(swig-lispify "gsl_histogram_find" 'function)) :int
  (h :pointer)
  (x :double)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_find" 'function))

(cffi:defcfun ("gsl_histogram_get" #.(swig-lispify "gsl_histogram_get" 'function)) :double
  (h :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_get" 'function))

(cffi:defcfun ("gsl_histogram_get_range" #.(swig-lispify "gsl_histogram_get_range" 'function)) :int
  (h :pointer)
  (i :pointer)
  (lower :pointer)
  (upper :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_get_range" 'function))

(cffi:defcfun ("gsl_histogram_max" #.(swig-lispify "gsl_histogram_max" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_max" 'function))

(cffi:defcfun ("gsl_histogram_min" #.(swig-lispify "gsl_histogram_min" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_min" 'function))

(cffi:defcfun ("gsl_histogram_bins" #.(swig-lispify "gsl_histogram_bins" 'function)) :pointer
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_bins" 'function))

(cffi:defcfun ("gsl_histogram_reset" #.(swig-lispify "gsl_histogram_reset" 'function)) :void
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_reset" 'function))

(cffi:defcfun ("gsl_histogram_calloc_range" #.(swig-lispify "gsl_histogram_calloc_range" 'function)) :pointer
  (n :pointer)
  (range :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_calloc_range" 'function))

(cffi:defcfun ("gsl_histogram_set_ranges" #.(swig-lispify "gsl_histogram_set_ranges" 'function)) :int
  (h :pointer)
  (range :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_set_ranges" 'function))

(cffi:defcfun ("gsl_histogram_set_ranges_uniform" #.(swig-lispify "gsl_histogram_set_ranges_uniform" 'function)) :int
  (h :pointer)
  (xmin :double)
  (xmax :double))

(cl:export '#.(swig-lispify "gsl_histogram_set_ranges_uniform" 'function))

(cffi:defcfun ("gsl_histogram_memcpy" #.(swig-lispify "gsl_histogram_memcpy" 'function)) :int
  (dest :pointer)
  (source :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_memcpy" 'function))

(cffi:defcfun ("gsl_histogram_clone" #.(swig-lispify "gsl_histogram_clone" 'function)) :pointer
  (source :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_clone" 'function))

(cffi:defcfun ("gsl_histogram_max_val" #.(swig-lispify "gsl_histogram_max_val" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_max_val" 'function))

(cffi:defcfun ("gsl_histogram_max_bin" #.(swig-lispify "gsl_histogram_max_bin" 'function)) :pointer
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_max_bin" 'function))

(cffi:defcfun ("gsl_histogram_min_val" #.(swig-lispify "gsl_histogram_min_val" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_min_val" 'function))

(cffi:defcfun ("gsl_histogram_min_bin" #.(swig-lispify "gsl_histogram_min_bin" 'function)) :pointer
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_min_bin" 'function))

(cffi:defcfun ("gsl_histogram_equal_bins_p" #.(swig-lispify "gsl_histogram_equal_bins_p" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_equal_bins_p" 'function))

(cffi:defcfun ("gsl_histogram_add" #.(swig-lispify "gsl_histogram_add" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_add" 'function))

(cffi:defcfun ("gsl_histogram_sub" #.(swig-lispify "gsl_histogram_sub" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_sub" 'function))

(cffi:defcfun ("gsl_histogram_mul" #.(swig-lispify "gsl_histogram_mul" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_mul" 'function))

(cffi:defcfun ("gsl_histogram_div" #.(swig-lispify "gsl_histogram_div" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_div" 'function))

(cffi:defcfun ("gsl_histogram_scale" #.(swig-lispify "gsl_histogram_scale" 'function)) :int
  (h :pointer)
  (scale :double))

(cl:export '#.(swig-lispify "gsl_histogram_scale" 'function))

(cffi:defcfun ("gsl_histogram_shift" #.(swig-lispify "gsl_histogram_shift" 'function)) :int
  (h :pointer)
  (shift :double))

(cl:export '#.(swig-lispify "gsl_histogram_shift" 'function))

(cffi:defcfun ("gsl_histogram_sigma" #.(swig-lispify "gsl_histogram_sigma" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_sigma" 'function))

(cffi:defcfun ("gsl_histogram_mean" #.(swig-lispify "gsl_histogram_mean" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_mean" 'function))

(cffi:defcfun ("gsl_histogram_sum" #.(swig-lispify "gsl_histogram_sum" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_sum" 'function))

(cffi:defcfun ("gsl_histogram_fwrite" #.(swig-lispify "gsl_histogram_fwrite" 'function)) :int
  (stream :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_fwrite" 'function))

(cffi:defcfun ("gsl_histogram_fread" #.(swig-lispify "gsl_histogram_fread" 'function)) :int
  (stream :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_fread" 'function))

(cffi:defcfun ("gsl_histogram_fprintf" #.(swig-lispify "gsl_histogram_fprintf" 'function)) :int
  (stream :pointer)
  (h :pointer)
  (range_format :string)
  (bin_format :string))

(cl:export '#.(swig-lispify "gsl_histogram_fprintf" 'function))

(cffi:defcfun ("gsl_histogram_fscanf" #.(swig-lispify "gsl_histogram_fscanf" 'function)) :int
  (stream :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_fscanf" 'function))

(cffi:defcfun ("gsl_histogram_pdf_alloc" #.(swig-lispify "gsl_histogram_pdf_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_pdf_alloc" 'function))

(cffi:defcfun ("gsl_histogram_pdf_init" #.(swig-lispify "gsl_histogram_pdf_init" 'function)) :int
  (p :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_pdf_init" 'function))

(cffi:defcfun ("gsl_histogram_pdf_free" #.(swig-lispify "gsl_histogram_pdf_free" 'function)) :void
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_histogram_pdf_free" 'function))

(cffi:defcfun ("gsl_histogram_pdf_sample" #.(swig-lispify "gsl_histogram_pdf_sample" 'function)) :double
  (p :pointer)
  (r :double))

(cl:export '#.(swig-lispify "gsl_histogram_pdf_sample" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_histogram2d" 'classname)
	(#.(swig-lispify "nx" 'slotname) :pointer)
	(#.(swig-lispify "ny" 'slotname) :pointer)
	(#.(swig-lispify "xrange" 'slotname) :pointer)
	(#.(swig-lispify "yrange" 'slotname) :pointer)
	(#.(swig-lispify "bin" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d" 'classname))

(cl:export '#.(swig-lispify "nx" 'slotname))

(cl:export '#.(swig-lispify "ny" 'slotname))

(cl:export '#.(swig-lispify "xrange" 'slotname))

(cl:export '#.(swig-lispify "yrange" 'slotname))

(cl:export '#.(swig-lispify "bin" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_histogram2d_pdf" 'classname)
	(#.(swig-lispify "nx" 'slotname) :pointer)
	(#.(swig-lispify "ny" 'slotname) :pointer)
	(#.(swig-lispify "xrange" 'slotname) :pointer)
	(#.(swig-lispify "yrange" 'slotname) :pointer)
	(#.(swig-lispify "sum" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_pdf" 'classname))

(cl:export '#.(swig-lispify "nx" 'slotname))

(cl:export '#.(swig-lispify "ny" 'slotname))

(cl:export '#.(swig-lispify "xrange" 'slotname))

(cl:export '#.(swig-lispify "yrange" 'slotname))

(cl:export '#.(swig-lispify "sum" 'slotname))

(cffi:defcfun ("gsl_histogram2d_alloc" #.(swig-lispify "gsl_histogram2d_alloc" 'function)) :pointer
  (nx :pointer)
  (ny :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_alloc" 'function))

(cffi:defcfun ("gsl_histogram2d_calloc" #.(swig-lispify "gsl_histogram2d_calloc" 'function)) :pointer
  (nx :pointer)
  (ny :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_calloc" 'function))

(cffi:defcfun ("gsl_histogram2d_calloc_uniform" #.(swig-lispify "gsl_histogram2d_calloc_uniform" 'function)) :pointer
  (nx :pointer)
  (ny :pointer)
  (xmin :double)
  (xmax :double)
  (ymin :double)
  (ymax :double))

(cl:export '#.(swig-lispify "gsl_histogram2d_calloc_uniform" 'function))

(cffi:defcfun ("gsl_histogram2d_free" #.(swig-lispify "gsl_histogram2d_free" 'function)) :void
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_free" 'function))

(cffi:defcfun ("gsl_histogram2d_increment" #.(swig-lispify "gsl_histogram2d_increment" 'function)) :int
  (h :pointer)
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_histogram2d_increment" 'function))

(cffi:defcfun ("gsl_histogram2d_accumulate" #.(swig-lispify "gsl_histogram2d_accumulate" 'function)) :int
  (h :pointer)
  (x :double)
  (y :double)
  (weight :double))

(cl:export '#.(swig-lispify "gsl_histogram2d_accumulate" 'function))

(cffi:defcfun ("gsl_histogram2d_find" #.(swig-lispify "gsl_histogram2d_find" 'function)) :int
  (h :pointer)
  (x :double)
  (y :double)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_find" 'function))

(cffi:defcfun ("gsl_histogram2d_get" #.(swig-lispify "gsl_histogram2d_get" 'function)) :double
  (h :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_get" 'function))

(cffi:defcfun ("gsl_histogram2d_get_xrange" #.(swig-lispify "gsl_histogram2d_get_xrange" 'function)) :int
  (h :pointer)
  (i :pointer)
  (xlower :pointer)
  (xupper :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_get_xrange" 'function))

(cffi:defcfun ("gsl_histogram2d_get_yrange" #.(swig-lispify "gsl_histogram2d_get_yrange" 'function)) :int
  (h :pointer)
  (j :pointer)
  (ylower :pointer)
  (yupper :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_get_yrange" 'function))

(cffi:defcfun ("gsl_histogram2d_xmax" #.(swig-lispify "gsl_histogram2d_xmax" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_xmax" 'function))

(cffi:defcfun ("gsl_histogram2d_xmin" #.(swig-lispify "gsl_histogram2d_xmin" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_xmin" 'function))

(cffi:defcfun ("gsl_histogram2d_nx" #.(swig-lispify "gsl_histogram2d_nx" 'function)) :pointer
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_nx" 'function))

(cffi:defcfun ("gsl_histogram2d_ymax" #.(swig-lispify "gsl_histogram2d_ymax" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_ymax" 'function))

(cffi:defcfun ("gsl_histogram2d_ymin" #.(swig-lispify "gsl_histogram2d_ymin" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_ymin" 'function))

(cffi:defcfun ("gsl_histogram2d_ny" #.(swig-lispify "gsl_histogram2d_ny" 'function)) :pointer
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_ny" 'function))

(cffi:defcfun ("gsl_histogram2d_reset" #.(swig-lispify "gsl_histogram2d_reset" 'function)) :void
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_reset" 'function))

(cffi:defcfun ("gsl_histogram2d_calloc_range" #.(swig-lispify "gsl_histogram2d_calloc_range" 'function)) :pointer
  (nx :pointer)
  (ny :pointer)
  (xrange :pointer)
  (yrange :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_calloc_range" 'function))

(cffi:defcfun ("gsl_histogram2d_set_ranges_uniform" #.(swig-lispify "gsl_histogram2d_set_ranges_uniform" 'function)) :int
  (h :pointer)
  (xmin :double)
  (xmax :double)
  (ymin :double)
  (ymax :double))

(cl:export '#.(swig-lispify "gsl_histogram2d_set_ranges_uniform" 'function))

(cffi:defcfun ("gsl_histogram2d_set_ranges" #.(swig-lispify "gsl_histogram2d_set_ranges" 'function)) :int
  (h :pointer)
  (xrange :pointer)
  (xsize :pointer)
  (yrange :pointer)
  (ysize :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_set_ranges" 'function))

(cffi:defcfun ("gsl_histogram2d_memcpy" #.(swig-lispify "gsl_histogram2d_memcpy" 'function)) :int
  (dest :pointer)
  (source :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_memcpy" 'function))

(cffi:defcfun ("gsl_histogram2d_clone" #.(swig-lispify "gsl_histogram2d_clone" 'function)) :pointer
  (source :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_clone" 'function))

(cffi:defcfun ("gsl_histogram2d_max_val" #.(swig-lispify "gsl_histogram2d_max_val" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_max_val" 'function))

(cffi:defcfun ("gsl_histogram2d_max_bin" #.(swig-lispify "gsl_histogram2d_max_bin" 'function)) :void
  (h :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_max_bin" 'function))

(cffi:defcfun ("gsl_histogram2d_min_val" #.(swig-lispify "gsl_histogram2d_min_val" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_min_val" 'function))

(cffi:defcfun ("gsl_histogram2d_min_bin" #.(swig-lispify "gsl_histogram2d_min_bin" 'function)) :void
  (h :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_min_bin" 'function))

(cffi:defcfun ("gsl_histogram2d_xmean" #.(swig-lispify "gsl_histogram2d_xmean" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_xmean" 'function))

(cffi:defcfun ("gsl_histogram2d_ymean" #.(swig-lispify "gsl_histogram2d_ymean" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_ymean" 'function))

(cffi:defcfun ("gsl_histogram2d_xsigma" #.(swig-lispify "gsl_histogram2d_xsigma" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_xsigma" 'function))

(cffi:defcfun ("gsl_histogram2d_ysigma" #.(swig-lispify "gsl_histogram2d_ysigma" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_ysigma" 'function))

(cffi:defcfun ("gsl_histogram2d_cov" #.(swig-lispify "gsl_histogram2d_cov" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_cov" 'function))

(cffi:defcfun ("gsl_histogram2d_sum" #.(swig-lispify "gsl_histogram2d_sum" 'function)) :double
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_sum" 'function))

(cffi:defcfun ("gsl_histogram2d_equal_bins_p" #.(swig-lispify "gsl_histogram2d_equal_bins_p" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_equal_bins_p" 'function))

(cffi:defcfun ("gsl_histogram2d_add" #.(swig-lispify "gsl_histogram2d_add" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_add" 'function))

(cffi:defcfun ("gsl_histogram2d_sub" #.(swig-lispify "gsl_histogram2d_sub" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_sub" 'function))

(cffi:defcfun ("gsl_histogram2d_mul" #.(swig-lispify "gsl_histogram2d_mul" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_mul" 'function))

(cffi:defcfun ("gsl_histogram2d_div" #.(swig-lispify "gsl_histogram2d_div" 'function)) :int
  (h1 :pointer)
  (h2 :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_div" 'function))

(cffi:defcfun ("gsl_histogram2d_scale" #.(swig-lispify "gsl_histogram2d_scale" 'function)) :int
  (h :pointer)
  (scale :double))

(cl:export '#.(swig-lispify "gsl_histogram2d_scale" 'function))

(cffi:defcfun ("gsl_histogram2d_shift" #.(swig-lispify "gsl_histogram2d_shift" 'function)) :int
  (h :pointer)
  (shift :double))

(cl:export '#.(swig-lispify "gsl_histogram2d_shift" 'function))

(cffi:defcfun ("gsl_histogram2d_fwrite" #.(swig-lispify "gsl_histogram2d_fwrite" 'function)) :int
  (stream :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_fwrite" 'function))

(cffi:defcfun ("gsl_histogram2d_fread" #.(swig-lispify "gsl_histogram2d_fread" 'function)) :int
  (stream :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_fread" 'function))

(cffi:defcfun ("gsl_histogram2d_fprintf" #.(swig-lispify "gsl_histogram2d_fprintf" 'function)) :int
  (stream :pointer)
  (h :pointer)
  (range_format :string)
  (bin_format :string))

(cl:export '#.(swig-lispify "gsl_histogram2d_fprintf" 'function))

(cffi:defcfun ("gsl_histogram2d_fscanf" #.(swig-lispify "gsl_histogram2d_fscanf" 'function)) :int
  (stream :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_fscanf" 'function))

(cffi:defcfun ("gsl_histogram2d_pdf_alloc" #.(swig-lispify "gsl_histogram2d_pdf_alloc" 'function)) :pointer
  (nx :pointer)
  (ny :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_pdf_alloc" 'function))

(cffi:defcfun ("gsl_histogram2d_pdf_init" #.(swig-lispify "gsl_histogram2d_pdf_init" 'function)) :int
  (p :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_pdf_init" 'function))

(cffi:defcfun ("gsl_histogram2d_pdf_free" #.(swig-lispify "gsl_histogram2d_pdf_free" 'function)) :void
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_pdf_free" 'function))

(cffi:defcfun ("gsl_histogram2d_pdf_sample" #.(swig-lispify "gsl_histogram2d_pdf_sample" 'function)) :int
  (p :pointer)
  (r1 :double)
  (r2 :double)
  (x :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_histogram2d_pdf_sample" 'function))

(defanonenum 
	(#.(swig-lispify "GSL_IEEE_TYPE_NAN" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_IEEE_TYPE_INF" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_IEEE_TYPE_NORMAL" 'enumvalue) #.3)
	(#.(swig-lispify "GSL_IEEE_TYPE_DENORMAL" 'enumvalue) #.4)
	(#.(swig-lispify "GSL_IEEE_TYPE_ZERO" 'enumvalue) #.5))

(cl:export '#.(swig-lispify "GSL_IEEE_TYPE_NAN" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_TYPE_INF" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_TYPE_NORMAL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_TYPE_DENORMAL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_TYPE_ZERO" 'enumvalue))

(cffi:defcstruct #.(swig-lispify "gsl_ieee_float_rep" 'classname)
	(#.(swig-lispify "sign" 'slotname) :int)
	(#.(swig-lispify "mantissa" 'slotname) :pointer)
	(#.(swig-lispify "exponent" 'slotname) :int)
	(#.(swig-lispify "type" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_ieee_float_rep" 'classname))

(cl:export '#.(swig-lispify "sign" 'slotname))

(cl:export '#.(swig-lispify "mantissa" 'slotname))

(cl:export '#.(swig-lispify "exponent" 'slotname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_ieee_double_rep" 'classname)
	(#.(swig-lispify "sign" 'slotname) :int)
	(#.(swig-lispify "mantissa" 'slotname) :pointer)
	(#.(swig-lispify "exponent" 'slotname) :int)
	(#.(swig-lispify "type" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_ieee_double_rep" 'classname))

(cl:export '#.(swig-lispify "sign" 'slotname))

(cl:export '#.(swig-lispify "mantissa" 'slotname))

(cl:export '#.(swig-lispify "exponent" 'slotname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cffi:defcfun ("gsl_ieee_printf_float" #.(swig-lispify "gsl_ieee_printf_float" 'function)) :void
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_printf_float" 'function))

(cffi:defcfun ("gsl_ieee_printf_double" #.(swig-lispify "gsl_ieee_printf_double" 'function)) :void
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_printf_double" 'function))

(cffi:defcfun ("gsl_ieee_fprintf_float" #.(swig-lispify "gsl_ieee_fprintf_float" 'function)) :void
  (stream :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_fprintf_float" 'function))

(cffi:defcfun ("gsl_ieee_fprintf_double" #.(swig-lispify "gsl_ieee_fprintf_double" 'function)) :void
  (stream :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_fprintf_double" 'function))

(cffi:defcfun ("gsl_ieee_float_to_rep" #.(swig-lispify "gsl_ieee_float_to_rep" 'function)) :void
  (x :pointer)
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_float_to_rep" 'function))

(cffi:defcfun ("gsl_ieee_double_to_rep" #.(swig-lispify "gsl_ieee_double_to_rep" 'function)) :void
  (x :pointer)
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_double_to_rep" 'function))

(defanonenum 
	(#.(swig-lispify "GSL_IEEE_SINGLE_PRECISION" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_IEEE_DOUBLE_PRECISION" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_IEEE_EXTENDED_PRECISION" 'enumvalue) #.3))

(cl:export '#.(swig-lispify "GSL_IEEE_SINGLE_PRECISION" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_DOUBLE_PRECISION" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_EXTENDED_PRECISION" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "GSL_IEEE_ROUND_TO_NEAREST" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_IEEE_ROUND_DOWN" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_IEEE_ROUND_UP" 'enumvalue) #.3)
	(#.(swig-lispify "GSL_IEEE_ROUND_TO_ZERO" 'enumvalue) #.4))

(cl:export '#.(swig-lispify "GSL_IEEE_ROUND_TO_NEAREST" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_ROUND_DOWN" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_ROUND_UP" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_ROUND_TO_ZERO" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "GSL_IEEE_MASK_INVALID" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_IEEE_MASK_DENORMALIZED" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_IEEE_MASK_DIVISION_BY_ZERO" 'enumvalue) #.4)
	(#.(swig-lispify "GSL_IEEE_MASK_OVERFLOW" 'enumvalue) #.8)
	(#.(swig-lispify "GSL_IEEE_MASK_UNDERFLOW" 'enumvalue) #.16)
	(#.(swig-lispify "GSL_IEEE_MASK_ALL" 'enumvalue) #.31)
	(#.(swig-lispify "GSL_IEEE_TRAP_INEXACT" 'enumvalue) #.32))

(cl:export '#.(swig-lispify "GSL_IEEE_MASK_INVALID" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_MASK_DENORMALIZED" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_MASK_DIVISION_BY_ZERO" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_MASK_OVERFLOW" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_MASK_UNDERFLOW" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_MASK_ALL" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_IEEE_TRAP_INEXACT" 'enumvalue))

(cffi:defcfun ("gsl_ieee_env_setup" #.(swig-lispify "gsl_ieee_env_setup" 'function)) :void)

(cl:export '#.(swig-lispify "gsl_ieee_env_setup" 'function))

(cffi:defcfun ("gsl_ieee_read_mode_string" #.(swig-lispify "gsl_ieee_read_mode_string" 'function)) :int
  (description :string)
  (precision :pointer)
  (rounding :pointer)
  (exception_mask :pointer))

(cl:export '#.(swig-lispify "gsl_ieee_read_mode_string" 'function))

(cffi:defcfun ("gsl_ieee_set_mode" #.(swig-lispify "gsl_ieee_set_mode" 'function)) :int
  (precision :int)
  (rounding :int)
  (exception_mask :int))

(cl:export '#.(swig-lispify "gsl_ieee_set_mode" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_integration_workspace" 'classname)
	(#.(swig-lispify "limit" 'slotname) :pointer)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "nrmax" 'slotname) :pointer)
	(#.(swig-lispify "i" 'slotname) :pointer)
	(#.(swig-lispify "maximum_level" 'slotname) :pointer)
	(#.(swig-lispify "alist" 'slotname) :pointer)
	(#.(swig-lispify "blist" 'slotname) :pointer)
	(#.(swig-lispify "rlist" 'slotname) :pointer)
	(#.(swig-lispify "elist" 'slotname) :pointer)
	(#.(swig-lispify "order" 'slotname) :pointer)
	(#.(swig-lispify "level" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_integration_workspace" 'classname))

(cl:export '#.(swig-lispify "limit" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "nrmax" 'slotname))

(cl:export '#.(swig-lispify "i" 'slotname))

(cl:export '#.(swig-lispify "maximum_level" 'slotname))

(cl:export '#.(swig-lispify "alist" 'slotname))

(cl:export '#.(swig-lispify "blist" 'slotname))

(cl:export '#.(swig-lispify "rlist" 'slotname))

(cl:export '#.(swig-lispify "elist" 'slotname))

(cl:export '#.(swig-lispify "order" 'slotname))

(cl:export '#.(swig-lispify "level" 'slotname))

(cffi:defcfun ("gsl_integration_workspace_alloc" #.(swig-lispify "gsl_integration_workspace_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_integration_workspace_alloc" 'function))

(cffi:defcfun ("gsl_integration_workspace_free" #.(swig-lispify "gsl_integration_workspace_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_integration_workspace_free" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_integration_qaws_table" 'classname)
	(#.(swig-lispify "alpha" 'slotname) :double)
	(#.(swig-lispify "beta" 'slotname) :double)
	(#.(swig-lispify "mu" 'slotname) :int)
	(#.(swig-lispify "nu" 'slotname) :int)
	(#.(swig-lispify "ri" 'slotname) :pointer)
	(#.(swig-lispify "rj" 'slotname) :pointer)
	(#.(swig-lispify "rg" 'slotname) :pointer)
	(#.(swig-lispify "rh" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qaws_table" 'classname))

(cl:export '#.(swig-lispify "alpha" 'slotname))

(cl:export '#.(swig-lispify "beta" 'slotname))

(cl:export '#.(swig-lispify "mu" 'slotname))

(cl:export '#.(swig-lispify "nu" 'slotname))

(cl:export '#.(swig-lispify "ri" 'slotname))

(cl:export '#.(swig-lispify "rj" 'slotname))

(cl:export '#.(swig-lispify "rg" 'slotname))

(cl:export '#.(swig-lispify "rh" 'slotname))

(cffi:defcfun ("gsl_integration_qaws_table_alloc" #.(swig-lispify "gsl_integration_qaws_table_alloc" 'function)) :pointer
  (alpha :double)
  (beta :double)
  (mu :int)
  (nu :int))

(cl:export '#.(swig-lispify "gsl_integration_qaws_table_alloc" 'function))

(cffi:defcfun ("gsl_integration_qaws_table_set" #.(swig-lispify "gsl_integration_qaws_table_set" 'function)) :int
  (t_arg0 :pointer)
  (alpha :double)
  (beta :double)
  (mu :int)
  (nu :int))

(cl:export '#.(swig-lispify "gsl_integration_qaws_table_set" 'function))

(cffi:defcfun ("gsl_integration_qaws_table_free" #.(swig-lispify "gsl_integration_qaws_table_free" 'function)) :void
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qaws_table_free" 'function))

(cffi:defcenum #.(swig-lispify "gsl_integration_qawo_enum" 'enumname)
	#.(swig-lispify "GSL_INTEG_COSINE" 'enumvalue :keyword)
	#.(swig-lispify "GSL_INTEG_SINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "gsl_integration_qawo_enum" 'enumname))

(cffi:defcstruct #.(swig-lispify "gsl_integration_qawo_table" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "omega" 'slotname) :double)
	(#.(swig-lispify "L" 'slotname) :double)
	(#.(swig-lispify "par" 'slotname) :double)
	(#.(swig-lispify "sine" 'slotname) #.(swig-lispify "gsl_integration_qawo_enum" 'enumname))
	(#.(swig-lispify "chebmo" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qawo_table" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "omega" 'slotname))

(cl:export '#.(swig-lispify "L" 'slotname))

(cl:export '#.(swig-lispify "par" 'slotname))

(cl:export '#.(swig-lispify "sine" 'slotname))

(cl:export '#.(swig-lispify "chebmo" 'slotname))

(cffi:defcfun ("gsl_integration_qawo_table_alloc" #.(swig-lispify "gsl_integration_qawo_table_alloc" 'function)) :pointer
  (omega :double)
  (L :double)
  (sine #.(swig-lispify "gsl_integration_qawo_enum" 'enumname))
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qawo_table_alloc" 'function))

(cffi:defcfun ("gsl_integration_qawo_table_set" #.(swig-lispify "gsl_integration_qawo_table_set" 'function)) :int
  (t_arg0 :pointer)
  (omega :double)
  (L :double)
  (sine #.(swig-lispify "gsl_integration_qawo_enum" 'enumname)))

(cl:export '#.(swig-lispify "gsl_integration_qawo_table_set" 'function))

(cffi:defcfun ("gsl_integration_qawo_table_set_length" #.(swig-lispify "gsl_integration_qawo_table_set_length" 'function)) :int
  (t_arg0 :pointer)
  (L :double))

(cl:export '#.(swig-lispify "gsl_integration_qawo_table_set_length" 'function))

(cffi:defcfun ("gsl_integration_qawo_table_free" #.(swig-lispify "gsl_integration_qawo_table_free" 'function)) :void
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qawo_table_free" 'function))

(cffi:defcfun ("gsl_integration_qk15" #.(swig-lispify "gsl_integration_qk15" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk15" 'function))

(cffi:defcfun ("gsl_integration_qk21" #.(swig-lispify "gsl_integration_qk21" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk21" 'function))

(cffi:defcfun ("gsl_integration_qk31" #.(swig-lispify "gsl_integration_qk31" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk31" 'function))

(cffi:defcfun ("gsl_integration_qk41" #.(swig-lispify "gsl_integration_qk41" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk41" 'function))

(cffi:defcfun ("gsl_integration_qk51" #.(swig-lispify "gsl_integration_qk51" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk51" 'function))

(cffi:defcfun ("gsl_integration_qk61" #.(swig-lispify "gsl_integration_qk61" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk61" 'function))

(cffi:defcfun ("gsl_integration_qcheb" #.(swig-lispify "gsl_integration_qcheb" 'function)) :void
  (f :pointer)
  (a :double)
  (b :double)
  (cheb12 :pointer)
  (cheb24 :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qcheb" 'function))

(defanonenum 
	(#.(swig-lispify "GSL_INTEG_GAUSS15" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_INTEG_GAUSS21" 'enumvalue) #.2)
	(#.(swig-lispify "GSL_INTEG_GAUSS31" 'enumvalue) #.3)
	(#.(swig-lispify "GSL_INTEG_GAUSS41" 'enumvalue) #.4)
	(#.(swig-lispify "GSL_INTEG_GAUSS51" 'enumvalue) #.5)
	(#.(swig-lispify "GSL_INTEG_GAUSS61" 'enumvalue) #.6))

(cl:export '#.(swig-lispify "GSL_INTEG_GAUSS15" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_INTEG_GAUSS21" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_INTEG_GAUSS31" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_INTEG_GAUSS41" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_INTEG_GAUSS51" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_INTEG_GAUSS61" 'enumvalue))

(cffi:defcfun ("gsl_integration_qk" #.(swig-lispify "gsl_integration_qk" 'function)) :void
  (n :int)
  (xgk :pointer)
  (wg :pointer)
  (wgk :pointer)
  (fv1 :pointer)
  (fv2 :pointer)
  (f :pointer)
  (a :double)
  (b :double)
  (result :pointer)
  (abserr :pointer)
  (resabs :pointer)
  (resasc :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qk" 'function))

(cffi:defcfun ("gsl_integration_qng" #.(swig-lispify "gsl_integration_qng" 'function)) :int
  (f :pointer)
  (a :double)
  (b :double)
  (epsabs :double)
  (epsrel :double)
  (result :pointer)
  (abserr :pointer)
  (neval :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qng" 'function))

(cffi:defcfun ("gsl_integration_qag" #.(swig-lispify "gsl_integration_qag" 'function)) :int
  (f :pointer)
  (a :double)
  (b :double)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (key :int)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qag" 'function))

(cffi:defcfun ("gsl_integration_qagi" #.(swig-lispify "gsl_integration_qagi" 'function)) :int
  (f :pointer)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qagi" 'function))

(cffi:defcfun ("gsl_integration_qagiu" #.(swig-lispify "gsl_integration_qagiu" 'function)) :int
  (f :pointer)
  (a :double)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qagiu" 'function))

(cffi:defcfun ("gsl_integration_qagil" #.(swig-lispify "gsl_integration_qagil" 'function)) :int
  (f :pointer)
  (b :double)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qagil" 'function))

(cffi:defcfun ("gsl_integration_qags" #.(swig-lispify "gsl_integration_qags" 'function)) :int
  (f :pointer)
  (a :double)
  (b :double)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qags" 'function))

(cffi:defcfun ("gsl_integration_qagp" #.(swig-lispify "gsl_integration_qagp" 'function)) :int
  (f :pointer)
  (pts :pointer)
  (npts :pointer)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qagp" 'function))

(cffi:defcfun ("gsl_integration_qawc" #.(swig-lispify "gsl_integration_qawc" 'function)) :int
  (f :pointer)
  (a :double)
  (b :double)
  (c :double)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qawc" 'function))

(cffi:defcfun ("gsl_integration_qaws" #.(swig-lispify "gsl_integration_qaws" 'function)) :int
  (f :pointer)
  (a :double)
  (b :double)
  (t_arg3 :pointer)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qaws" 'function))

(cffi:defcfun ("gsl_integration_qawo" #.(swig-lispify "gsl_integration_qawo" 'function)) :int
  (f :pointer)
  (a :double)
  (epsabs :double)
  (epsrel :double)
  (limit :pointer)
  (workspace :pointer)
  (wf :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qawo" 'function))

(cffi:defcfun ("gsl_integration_qawf" #.(swig-lispify "gsl_integration_qawf" 'function)) :int
  (f :pointer)
  (a :double)
  (epsabs :double)
  (limit :pointer)
  (workspace :pointer)
  (cycle_workspace :pointer)
  (wf :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_integration_qawf" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_integration_glfixed_table" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "w" 'slotname) :pointer)
	(#.(swig-lispify "precomputed" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_integration_glfixed_table" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "w" 'slotname))

(cl:export '#.(swig-lispify "precomputed" 'slotname))

(cffi:defcfun ("gsl_integration_glfixed_table_alloc" #.(swig-lispify "gsl_integration_glfixed_table_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_integration_glfixed_table_alloc" 'function))

(cffi:defcfun ("gsl_integration_glfixed_table_free" #.(swig-lispify "gsl_integration_glfixed_table_free" 'function)) :void
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_integration_glfixed_table_free" 'function))

(cffi:defcfun ("gsl_integration_glfixed" #.(swig-lispify "gsl_integration_glfixed" 'function)) :double
  (f :pointer)
  (a :double)
  (b :double)
  (t_arg3 :pointer))

(cl:export '#.(swig-lispify "gsl_integration_glfixed" 'function))

(cffi:defcfun ("gsl_integration_glfixed_point" #.(swig-lispify "gsl_integration_glfixed_point" 'function)) :int
  (a :double)
  (b :double)
  (i :pointer)
  (xi :pointer)
  (wi :pointer)
  (t_arg5 :pointer))

(cl:export '#.(swig-lispify "gsl_integration_glfixed_point" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_integration_cquad_ival" 'classname)
	(#.(swig-lispify "a" 'slotname) :double)
	(#.(swig-lispify "b" 'slotname) :double)
	(#.(swig-lispify "c" 'slotname) :pointer)
	(#.(swig-lispify "fx" 'slotname) :pointer)
	(#.(swig-lispify "igral" 'slotname) :double)
	(#.(swig-lispify "err" 'slotname) :double)
	(#.(swig-lispify "depth" 'slotname) :int)
	(#.(swig-lispify "rdepth" 'slotname) :int)
	(#.(swig-lispify "ndiv" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_integration_cquad_ival" 'classname))

(cl:export '#.(swig-lispify "a" 'slotname))

(cl:export '#.(swig-lispify "b" 'slotname))

(cl:export '#.(swig-lispify "c" 'slotname))

(cl:export '#.(swig-lispify "fx" 'slotname))

(cl:export '#.(swig-lispify "igral" 'slotname))

(cl:export '#.(swig-lispify "err" 'slotname))

(cl:export '#.(swig-lispify "depth" 'slotname))

(cl:export '#.(swig-lispify "rdepth" 'slotname))

(cl:export '#.(swig-lispify "ndiv" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_integration_cquad_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "ivals" 'slotname) :pointer)
	(#.(swig-lispify "heap" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_integration_cquad_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "ivals" 'slotname))

(cl:export '#.(swig-lispify "heap" 'slotname))

(cffi:defcfun ("gsl_integration_cquad_workspace_alloc" #.(swig-lispify "gsl_integration_cquad_workspace_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_integration_cquad_workspace_alloc" 'function))

(cffi:defcfun ("gsl_integration_cquad_workspace_free" #.(swig-lispify "gsl_integration_cquad_workspace_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_integration_cquad_workspace_free" 'function))

(cffi:defcfun ("gsl_integration_cquad" #.(swig-lispify "gsl_integration_cquad" 'function)) :int
  (f :pointer)
  (a :double)
  (b :double)
  (epsabs :double)
  (epsrel :double)
  (ws :pointer)
  (result :pointer)
  (abserr :pointer)
  (nevals :pointer))

(cl:export '#.(swig-lispify "gsl_integration_cquad" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_interp_accel" 'classname)
	(#.(swig-lispify "cache" 'slotname) :pointer)
	(#.(swig-lispify "miss_count" 'slotname) :pointer)
	(#.(swig-lispify "hit_count" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_interp_accel" 'classname))

(cl:export '#.(swig-lispify "cache" 'slotname))

(cl:export '#.(swig-lispify "miss_count" 'slotname))

(cl:export '#.(swig-lispify "hit_count" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_interp_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "min_size" 'slotname) :unsigned-int)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "init" 'slotname) :pointer)
	(#.(swig-lispify "eval" 'slotname) :pointer)
	(#.(swig-lispify "eval_deriv" 'slotname) :pointer)
	(#.(swig-lispify "eval_deriv2" 'slotname) :pointer)
	(#.(swig-lispify "eval_integ" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_interp_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "min_size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "init" 'slotname))

(cl:export '#.(swig-lispify "eval" 'slotname))

(cl:export '#.(swig-lispify "eval_deriv" 'slotname))

(cl:export '#.(swig-lispify "eval_deriv2" 'slotname))

(cl:export '#.(swig-lispify "eval_integ" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_interp" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "xmin" 'slotname) :double)
	(#.(swig-lispify "xmax" 'slotname) :double)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_interp" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "xmin" 'slotname))

(cl:export '#.(swig-lispify "xmax" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcvar ("gsl_interp_linear" #.(swig-lispify "gsl_interp_linear" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_interp_linear" 'variable))

(cffi:defcvar ("gsl_interp_polynomial" #.(swig-lispify "gsl_interp_polynomial" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_interp_polynomial" 'variable))

(cffi:defcvar ("gsl_interp_cspline" #.(swig-lispify "gsl_interp_cspline" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_interp_cspline" 'variable))

(cffi:defcvar ("gsl_interp_cspline_periodic" #.(swig-lispify "gsl_interp_cspline_periodic" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_interp_cspline_periodic" 'variable))

(cffi:defcvar ("gsl_interp_akima" #.(swig-lispify "gsl_interp_akima" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_interp_akima" 'variable))

(cffi:defcvar ("gsl_interp_akima_periodic" #.(swig-lispify "gsl_interp_akima_periodic" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_interp_akima_periodic" 'variable))

(cffi:defcfun ("gsl_interp_accel_alloc" #.(swig-lispify "gsl_interp_accel_alloc" 'function)) :pointer)

(cl:export '#.(swig-lispify "gsl_interp_accel_alloc" 'function))

(cffi:defcfun ("gsl_interp_accel_reset" #.(swig-lispify "gsl_interp_accel_reset" 'function)) :int
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_interp_accel_reset" 'function))

(cffi:defcfun ("gsl_interp_accel_free" #.(swig-lispify "gsl_interp_accel_free" 'function)) :void
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_interp_accel_free" 'function))

(cffi:defcfun ("gsl_interp_alloc" #.(swig-lispify "gsl_interp_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_interp_alloc" 'function))

(cffi:defcfun ("gsl_interp_init" #.(swig-lispify "gsl_interp_init" 'function)) :int
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_interp_init" 'function))

(cffi:defcfun ("gsl_interp_name" #.(swig-lispify "gsl_interp_name" 'function)) :string
  (interp :pointer))

(cl:export '#.(swig-lispify "gsl_interp_name" 'function))

(cffi:defcfun ("gsl_interp_min_size" #.(swig-lispify "gsl_interp_min_size" 'function)) :unsigned-int
  (interp :pointer))

(cl:export '#.(swig-lispify "gsl_interp_min_size" 'function))

(cffi:defcfun ("gsl_interp_type_min_size" #.(swig-lispify "gsl_interp_type_min_size" 'function)) :unsigned-int
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_interp_type_min_size" 'function))

(cffi:defcfun ("gsl_interp_eval_e" #.(swig-lispify "gsl_interp_eval_e" 'function)) :int
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (x :double)
  (a :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_e" 'function))

(cffi:defcfun ("gsl_interp_eval" #.(swig-lispify "gsl_interp_eval" 'function)) :double
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (x :double)
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval" 'function))

(cffi:defcfun ("gsl_interp_eval_deriv_e" #.(swig-lispify "gsl_interp_eval_deriv_e" 'function)) :int
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (x :double)
  (a :pointer)
  (d :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_deriv_e" 'function))

(cffi:defcfun ("gsl_interp_eval_deriv" #.(swig-lispify "gsl_interp_eval_deriv" 'function)) :double
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (x :double)
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_deriv" 'function))

(cffi:defcfun ("gsl_interp_eval_deriv2_e" #.(swig-lispify "gsl_interp_eval_deriv2_e" 'function)) :int
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (x :double)
  (a :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_deriv2_e" 'function))

(cffi:defcfun ("gsl_interp_eval_deriv2" #.(swig-lispify "gsl_interp_eval_deriv2" 'function)) :double
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (x :double)
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_deriv2" 'function))

(cffi:defcfun ("gsl_interp_eval_integ_e" #.(swig-lispify "gsl_interp_eval_integ_e" 'function)) :int
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (a :double)
  (b :double)
  (acc :pointer)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_integ_e" 'function))

(cffi:defcfun ("gsl_interp_eval_integ" #.(swig-lispify "gsl_interp_eval_integ" 'function)) :double
  (obj :pointer)
  (xa :pointer)
  (ya :pointer)
  (a :double)
  (b :double)
  (acc :pointer))

(cl:export '#.(swig-lispify "gsl_interp_eval_integ" 'function))

(cffi:defcfun ("gsl_interp_free" #.(swig-lispify "gsl_interp_free" 'function)) :void
  (interp :pointer))

(cl:export '#.(swig-lispify "gsl_interp_free" 'function))

(cffi:defcfun ("gsl_interp_bsearch" #.(swig-lispify "gsl_interp_bsearch" 'function)) :pointer
  (x_array :pointer)
  (x :double)
  (index_lo :pointer)
  (index_hi :pointer))

(cl:export '#.(swig-lispify "gsl_interp_bsearch" 'function))

(cffi:defcfun ("gsl_interp_accel_find" #.(swig-lispify "gsl_interp_accel_find" 'function)) :pointer
  (a :pointer)
  (x_array :pointer)
  (size :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_interp_accel_find" 'function))

(cffi:defcenum #.(swig-lispify "gsl_linalg_matrix_mod_t" 'enumname)
	(#.(swig-lispify "GSL_LINALG_MOD_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GSL_LINALG_MOD_TRANSPOSE" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "GSL_LINALG_MOD_CONJUGATE" 'enumvalue :keyword) #.2))

(cl:export '#.(swig-lispify "gsl_linalg_matrix_mod_t" 'enumname))

(cffi:defcfun ("gsl_linalg_matmult" #.(swig-lispify "gsl_linalg_matmult" 'function)) :int
  (A :pointer)
  (B :pointer)
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_matmult" 'function))

(cffi:defcfun ("gsl_linalg_matmult_mod" #.(swig-lispify "gsl_linalg_matmult_mod" 'function)) :int
  (A :pointer)
  (modA #.(swig-lispify "gsl_linalg_matrix_mod_t" 'enumname))
  (B :pointer)
  (modB #.(swig-lispify "gsl_linalg_matrix_mod_t" 'enumname))
  (C :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_matmult_mod" 'function))

(cffi:defcfun ("gsl_linalg_exponential_ss" #.(swig-lispify "gsl_linalg_exponential_ss" 'function)) :int
  (A :pointer)
  (eA :pointer)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_linalg_exponential_ss" 'function))

(cffi:defcfun ("gsl_linalg_householder_transform" #.(swig-lispify "gsl_linalg_householder_transform" 'function)) :double
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_householder_transform" 'function))

(cffi:defcfun ("gsl_linalg_complex_householder_transform" #.(swig-lispify "gsl_linalg_complex_householder_transform" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_householder_transform" 'function))

(cffi:defcfun ("gsl_linalg_householder_hm" #.(swig-lispify "gsl_linalg_householder_hm" 'function)) :int
  (tau :double)
  (v :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_householder_hm" 'function))

(cffi:defcfun ("gsl_linalg_householder_mh" #.(swig-lispify "gsl_linalg_householder_mh" 'function)) :int
  (tau :double)
  (v :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_householder_mh" 'function))

(cffi:defcfun ("gsl_linalg_householder_hv" #.(swig-lispify "gsl_linalg_householder_hv" 'function)) :int
  (tau :double)
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_householder_hv" 'function))

(cffi:defcfun ("gsl_linalg_householder_hm1" #.(swig-lispify "gsl_linalg_householder_hm1" 'function)) :int
  (tau :double)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_householder_hm1" 'function))

(cffi:defcfun ("gsl_linalg_complex_householder_hm" #.(swig-lispify "gsl_linalg_complex_householder_hm" 'function)) :int
  (tau #.(swig-lispify "gsl_complex" 'classname))
  (v :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_householder_hm" 'function))

(cffi:defcfun ("gsl_linalg_complex_householder_mh" #.(swig-lispify "gsl_linalg_complex_householder_mh" 'function)) :int
  (tau #.(swig-lispify "gsl_complex" 'classname))
  (v :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_householder_mh" 'function))

(cffi:defcfun ("gsl_linalg_complex_householder_hv" #.(swig-lispify "gsl_linalg_complex_householder_hv" 'function)) :int
  (tau #.(swig-lispify "gsl_complex" 'classname))
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_householder_hv" 'function))

(cffi:defcfun ("gsl_linalg_hessenberg_decomp" #.(swig-lispify "gsl_linalg_hessenberg_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hessenberg_decomp" 'function))

(cffi:defcfun ("gsl_linalg_hessenberg_unpack" #.(swig-lispify "gsl_linalg_hessenberg_unpack" 'function)) :int
  (H :pointer)
  (tau :pointer)
  (U :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hessenberg_unpack" 'function))

(cffi:defcfun ("gsl_linalg_hessenberg_unpack_accum" #.(swig-lispify "gsl_linalg_hessenberg_unpack_accum" 'function)) :int
  (H :pointer)
  (tau :pointer)
  (U :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hessenberg_unpack_accum" 'function))

(cffi:defcfun ("gsl_linalg_hessenberg_set_zero" #.(swig-lispify "gsl_linalg_hessenberg_set_zero" 'function)) :int
  (H :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hessenberg_set_zero" 'function))

(cffi:defcfun ("gsl_linalg_hessenberg_submatrix" #.(swig-lispify "gsl_linalg_hessenberg_submatrix" 'function)) :int
  (M :pointer)
  (A :pointer)
  (top :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hessenberg_submatrix" 'function))

(cffi:defcfun ("gsl_linalg_hessenberg" #.(swig-lispify "gsl_linalg_hessenberg" 'function)) :int
  (A :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hessenberg" 'function))

(cffi:defcfun ("gsl_linalg_hesstri_decomp" #.(swig-lispify "gsl_linalg_hesstri_decomp" 'function)) :int
  (A :pointer)
  (B :pointer)
  (U :pointer)
  (V :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hesstri_decomp" 'function))

(cffi:defcfun ("gsl_linalg_SV_decomp" #.(swig-lispify "gsl_linalg_SV_decomp" 'function)) :int
  (A :pointer)
  (V :pointer)
  (S :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_SV_decomp" 'function))

(cffi:defcfun ("gsl_linalg_SV_decomp_mod" #.(swig-lispify "gsl_linalg_SV_decomp_mod" 'function)) :int
  (A :pointer)
  (X :pointer)
  (V :pointer)
  (S :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_SV_decomp_mod" 'function))

(cffi:defcfun ("gsl_linalg_SV_decomp_jacobi" #.(swig-lispify "gsl_linalg_SV_decomp_jacobi" 'function)) :int
  (A :pointer)
  (Q :pointer)
  (S :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_SV_decomp_jacobi" 'function))

(cffi:defcfun ("gsl_linalg_SV_solve" #.(swig-lispify "gsl_linalg_SV_solve" 'function)) :int
  (U :pointer)
  (Q :pointer)
  (S :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_SV_solve" 'function))

(cffi:defcfun ("gsl_linalg_SV_leverage" #.(swig-lispify "gsl_linalg_SV_leverage" 'function)) :int
  (U :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_SV_leverage" 'function))

(cffi:defcfun ("gsl_linalg_LU_decomp" #.(swig-lispify "gsl_linalg_LU_decomp" 'function)) :int
  (A :pointer)
  (p :pointer)
  (signum :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LU_decomp" 'function))

(cffi:defcfun ("gsl_linalg_LU_solve" #.(swig-lispify "gsl_linalg_LU_solve" 'function)) :int
  (LU :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LU_solve" 'function))

(cffi:defcfun ("gsl_linalg_LU_svx" #.(swig-lispify "gsl_linalg_LU_svx" 'function)) :int
  (LU :pointer)
  (p :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LU_svx" 'function))

(cffi:defcfun ("gsl_linalg_LU_refine" #.(swig-lispify "gsl_linalg_LU_refine" 'function)) :int
  (A :pointer)
  (LU :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer)
  (residual :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LU_refine" 'function))

(cffi:defcfun ("gsl_linalg_LU_invert" #.(swig-lispify "gsl_linalg_LU_invert" 'function)) :int
  (LU :pointer)
  (p :pointer)
  (inverse :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LU_invert" 'function))

(cffi:defcfun ("gsl_linalg_LU_det" #.(swig-lispify "gsl_linalg_LU_det" 'function)) :double
  (LU :pointer)
  (signum :int))

(cl:export '#.(swig-lispify "gsl_linalg_LU_det" 'function))

(cffi:defcfun ("gsl_linalg_LU_lndet" #.(swig-lispify "gsl_linalg_LU_lndet" 'function)) :double
  (LU :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LU_lndet" 'function))

(cffi:defcfun ("gsl_linalg_LU_sgndet" #.(swig-lispify "gsl_linalg_LU_sgndet" 'function)) :int
  (lu :pointer)
  (signum :int))

(cl:export '#.(swig-lispify "gsl_linalg_LU_sgndet" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_decomp" #.(swig-lispify "gsl_linalg_complex_LU_decomp" 'function)) :int
  (A :pointer)
  (p :pointer)
  (signum :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_decomp" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_solve" #.(swig-lispify "gsl_linalg_complex_LU_solve" 'function)) :int
  (LU :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_solve" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_svx" #.(swig-lispify "gsl_linalg_complex_LU_svx" 'function)) :int
  (LU :pointer)
  (p :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_svx" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_refine" #.(swig-lispify "gsl_linalg_complex_LU_refine" 'function)) :int
  (A :pointer)
  (LU :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer)
  (residual :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_refine" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_invert" #.(swig-lispify "gsl_linalg_complex_LU_invert" 'function)) :int
  (LU :pointer)
  (p :pointer)
  (inverse :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_invert" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_det" #.(swig-lispify "gsl_linalg_complex_LU_det" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (LU :pointer)
  (signum :int))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_det" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_lndet" #.(swig-lispify "gsl_linalg_complex_LU_lndet" 'function)) :double
  (LU :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_lndet" 'function))

(cffi:defcfun ("gsl_linalg_complex_LU_sgndet" #.(swig-lispify "gsl_linalg_complex_LU_sgndet" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (LU :pointer)
  (signum :int))

(cl:export '#.(swig-lispify "gsl_linalg_complex_LU_sgndet" 'function))

(cffi:defcfun ("gsl_linalg_QR_decomp" #.(swig-lispify "gsl_linalg_QR_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_decomp" 'function))

(cffi:defcfun ("gsl_linalg_QR_solve" #.(swig-lispify "gsl_linalg_QR_solve" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_solve" 'function))

(cffi:defcfun ("gsl_linalg_QR_svx" #.(swig-lispify "gsl_linalg_QR_svx" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_svx" 'function))

(cffi:defcfun ("gsl_linalg_QR_lssolve" #.(swig-lispify "gsl_linalg_QR_lssolve" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (b :pointer)
  (x :pointer)
  (residual :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_lssolve" 'function))

(cffi:defcfun ("gsl_linalg_QR_QRsolve" #.(swig-lispify "gsl_linalg_QR_QRsolve" 'function)) :int
  (Q :pointer)
  (R :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_QRsolve" 'function))

(cffi:defcfun ("gsl_linalg_QR_Rsolve" #.(swig-lispify "gsl_linalg_QR_Rsolve" 'function)) :int
  (QR :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_Rsolve" 'function))

(cffi:defcfun ("gsl_linalg_QR_Rsvx" #.(swig-lispify "gsl_linalg_QR_Rsvx" 'function)) :int
  (QR :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_Rsvx" 'function))

(cffi:defcfun ("gsl_linalg_QR_update" #.(swig-lispify "gsl_linalg_QR_update" 'function)) :int
  (Q :pointer)
  (R :pointer)
  (w :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_update" 'function))

(cffi:defcfun ("gsl_linalg_QR_QTvec" #.(swig-lispify "gsl_linalg_QR_QTvec" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_QTvec" 'function))

(cffi:defcfun ("gsl_linalg_QR_Qvec" #.(swig-lispify "gsl_linalg_QR_Qvec" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_Qvec" 'function))

(cffi:defcfun ("gsl_linalg_QR_QTmat" #.(swig-lispify "gsl_linalg_QR_QTmat" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_QTmat" 'function))

(cffi:defcfun ("gsl_linalg_QR_unpack" #.(swig-lispify "gsl_linalg_QR_unpack" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (Q :pointer)
  (R :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QR_unpack" 'function))

(cffi:defcfun ("gsl_linalg_R_solve" #.(swig-lispify "gsl_linalg_R_solve" 'function)) :int
  (R :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_R_solve" 'function))

(cffi:defcfun ("gsl_linalg_R_svx" #.(swig-lispify "gsl_linalg_R_svx" 'function)) :int
  (R :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_R_svx" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_decomp" #.(swig-lispify "gsl_linalg_QRPT_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer)
  (p :pointer)
  (signum :pointer)
  (norm :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_decomp" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_decomp2" #.(swig-lispify "gsl_linalg_QRPT_decomp2" 'function)) :int
  (A :pointer)
  (q :pointer)
  (r :pointer)
  (tau :pointer)
  (p :pointer)
  (signum :pointer)
  (norm :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_decomp2" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_solve" #.(swig-lispify "gsl_linalg_QRPT_solve" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_solve" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_svx" #.(swig-lispify "gsl_linalg_QRPT_svx" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (p :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_svx" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_QRsolve" #.(swig-lispify "gsl_linalg_QRPT_QRsolve" 'function)) :int
  (Q :pointer)
  (R :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_QRsolve" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_Rsolve" #.(swig-lispify "gsl_linalg_QRPT_Rsolve" 'function)) :int
  (QR :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_Rsolve" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_Rsvx" #.(swig-lispify "gsl_linalg_QRPT_Rsvx" 'function)) :int
  (QR :pointer)
  (p :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_Rsvx" 'function))

(cffi:defcfun ("gsl_linalg_QRPT_update" #.(swig-lispify "gsl_linalg_QRPT_update" 'function)) :int
  (Q :pointer)
  (R :pointer)
  (p :pointer)
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_QRPT_update" 'function))

(cffi:defcfun ("gsl_linalg_LQ_decomp" #.(swig-lispify "gsl_linalg_LQ_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_decomp" 'function))

(cffi:defcfun ("gsl_linalg_LQ_solve_T" #.(swig-lispify "gsl_linalg_LQ_solve_T" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_solve_T" 'function))

(cffi:defcfun ("gsl_linalg_LQ_svx_T" #.(swig-lispify "gsl_linalg_LQ_svx_T" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_svx_T" 'function))

(cffi:defcfun ("gsl_linalg_LQ_lssolve_T" #.(swig-lispify "gsl_linalg_LQ_lssolve_T" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (b :pointer)
  (x :pointer)
  (residual :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_lssolve_T" 'function))

(cffi:defcfun ("gsl_linalg_LQ_Lsolve_T" #.(swig-lispify "gsl_linalg_LQ_Lsolve_T" 'function)) :int
  (LQ :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_Lsolve_T" 'function))

(cffi:defcfun ("gsl_linalg_LQ_Lsvx_T" #.(swig-lispify "gsl_linalg_LQ_Lsvx_T" 'function)) :int
  (LQ :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_Lsvx_T" 'function))

(cffi:defcfun ("gsl_linalg_L_solve_T" #.(swig-lispify "gsl_linalg_L_solve_T" 'function)) :int
  (L :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_L_solve_T" 'function))

(cffi:defcfun ("gsl_linalg_LQ_vecQ" #.(swig-lispify "gsl_linalg_LQ_vecQ" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_vecQ" 'function))

(cffi:defcfun ("gsl_linalg_LQ_vecQT" #.(swig-lispify "gsl_linalg_LQ_vecQT" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_vecQT" 'function))

(cffi:defcfun ("gsl_linalg_LQ_unpack" #.(swig-lispify "gsl_linalg_LQ_unpack" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (Q :pointer)
  (L :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_unpack" 'function))

(cffi:defcfun ("gsl_linalg_LQ_update" #.(swig-lispify "gsl_linalg_LQ_update" 'function)) :int
  (Q :pointer)
  (R :pointer)
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_update" 'function))

(cffi:defcfun ("gsl_linalg_LQ_LQsolve" #.(swig-lispify "gsl_linalg_LQ_LQsolve" 'function)) :int
  (Q :pointer)
  (L :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_LQ_LQsolve" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_decomp" #.(swig-lispify "gsl_linalg_PTLQ_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer)
  (p :pointer)
  (signum :pointer)
  (norm :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_decomp" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_decomp2" #.(swig-lispify "gsl_linalg_PTLQ_decomp2" 'function)) :int
  (A :pointer)
  (q :pointer)
  (r :pointer)
  (tau :pointer)
  (p :pointer)
  (signum :pointer)
  (norm :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_decomp2" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_solve_T" #.(swig-lispify "gsl_linalg_PTLQ_solve_T" 'function)) :int
  (QR :pointer)
  (tau :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_solve_T" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_svx_T" #.(swig-lispify "gsl_linalg_PTLQ_svx_T" 'function)) :int
  (LQ :pointer)
  (tau :pointer)
  (p :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_svx_T" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_LQsolve_T" #.(swig-lispify "gsl_linalg_PTLQ_LQsolve_T" 'function)) :int
  (Q :pointer)
  (L :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_LQsolve_T" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_Lsolve_T" #.(swig-lispify "gsl_linalg_PTLQ_Lsolve_T" 'function)) :int
  (LQ :pointer)
  (p :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_Lsolve_T" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_Lsvx_T" #.(swig-lispify "gsl_linalg_PTLQ_Lsvx_T" 'function)) :int
  (LQ :pointer)
  (p :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_Lsvx_T" 'function))

(cffi:defcfun ("gsl_linalg_PTLQ_update" #.(swig-lispify "gsl_linalg_PTLQ_update" 'function)) :int
  (Q :pointer)
  (L :pointer)
  (p :pointer)
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_PTLQ_update" 'function))

(cffi:defcfun ("gsl_linalg_cholesky_decomp" #.(swig-lispify "gsl_linalg_cholesky_decomp" 'function)) :int
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_cholesky_decomp" 'function))

(cffi:defcfun ("gsl_linalg_cholesky_solve" #.(swig-lispify "gsl_linalg_cholesky_solve" 'function)) :int
  (cholesky :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_cholesky_solve" 'function))

(cffi:defcfun ("gsl_linalg_cholesky_svx" #.(swig-lispify "gsl_linalg_cholesky_svx" 'function)) :int
  (cholesky :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_cholesky_svx" 'function))

(cffi:defcfun ("gsl_linalg_cholesky_invert" #.(swig-lispify "gsl_linalg_cholesky_invert" 'function)) :int
  (cholesky :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_cholesky_invert" 'function))

(cffi:defcfun ("gsl_linalg_cholesky_decomp_unit" #.(swig-lispify "gsl_linalg_cholesky_decomp_unit" 'function)) :int
  (A :pointer)
  (D :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_cholesky_decomp_unit" 'function))

(cffi:defcfun ("gsl_linalg_complex_cholesky_decomp" #.(swig-lispify "gsl_linalg_complex_cholesky_decomp" 'function)) :int
  (A :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_cholesky_decomp" 'function))

(cffi:defcfun ("gsl_linalg_complex_cholesky_solve" #.(swig-lispify "gsl_linalg_complex_cholesky_solve" 'function)) :int
  (cholesky :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_cholesky_solve" 'function))

(cffi:defcfun ("gsl_linalg_complex_cholesky_svx" #.(swig-lispify "gsl_linalg_complex_cholesky_svx" 'function)) :int
  (cholesky :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_cholesky_svx" 'function))

(cffi:defcfun ("gsl_linalg_complex_cholesky_invert" #.(swig-lispify "gsl_linalg_complex_cholesky_invert" 'function)) :int
  (cholesky :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_complex_cholesky_invert" 'function))

(cffi:defcfun ("gsl_linalg_symmtd_decomp" #.(swig-lispify "gsl_linalg_symmtd_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_symmtd_decomp" 'function))

(cffi:defcfun ("gsl_linalg_symmtd_unpack" #.(swig-lispify "gsl_linalg_symmtd_unpack" 'function)) :int
  (A :pointer)
  (tau :pointer)
  (Q :pointer)
  (diag :pointer)
  (subdiag :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_symmtd_unpack" 'function))

(cffi:defcfun ("gsl_linalg_symmtd_unpack_T" #.(swig-lispify "gsl_linalg_symmtd_unpack_T" 'function)) :int
  (A :pointer)
  (diag :pointer)
  (subdiag :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_symmtd_unpack_T" 'function))

(cffi:defcfun ("gsl_linalg_hermtd_decomp" #.(swig-lispify "gsl_linalg_hermtd_decomp" 'function)) :int
  (A :pointer)
  (tau :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hermtd_decomp" 'function))

(cffi:defcfun ("gsl_linalg_hermtd_unpack" #.(swig-lispify "gsl_linalg_hermtd_unpack" 'function)) :int
  (A :pointer)
  (tau :pointer)
  (U :pointer)
  (diag :pointer)
  (sudiag :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hermtd_unpack" 'function))

(cffi:defcfun ("gsl_linalg_hermtd_unpack_T" #.(swig-lispify "gsl_linalg_hermtd_unpack_T" 'function)) :int
  (A :pointer)
  (diag :pointer)
  (subdiag :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_hermtd_unpack_T" 'function))

(cffi:defcfun ("gsl_linalg_HH_solve" #.(swig-lispify "gsl_linalg_HH_solve" 'function)) :int
  (A :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_HH_solve" 'function))

(cffi:defcfun ("gsl_linalg_HH_svx" #.(swig-lispify "gsl_linalg_HH_svx" 'function)) :int
  (A :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_HH_svx" 'function))

(cffi:defcfun ("gsl_linalg_solve_symm_tridiag" #.(swig-lispify "gsl_linalg_solve_symm_tridiag" 'function)) :int
  (diag :pointer)
  (offdiag :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_solve_symm_tridiag" 'function))

(cffi:defcfun ("gsl_linalg_solve_tridiag" #.(swig-lispify "gsl_linalg_solve_tridiag" 'function)) :int
  (diag :pointer)
  (abovediag :pointer)
  (belowdiag :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_solve_tridiag" 'function))

(cffi:defcfun ("gsl_linalg_solve_symm_cyc_tridiag" #.(swig-lispify "gsl_linalg_solve_symm_cyc_tridiag" 'function)) :int
  (diag :pointer)
  (offdiag :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_solve_symm_cyc_tridiag" 'function))

(cffi:defcfun ("gsl_linalg_solve_cyc_tridiag" #.(swig-lispify "gsl_linalg_solve_cyc_tridiag" 'function)) :int
  (diag :pointer)
  (abovediag :pointer)
  (belowdiag :pointer)
  (b :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_solve_cyc_tridiag" 'function))

(cffi:defcfun ("gsl_linalg_bidiag_decomp" #.(swig-lispify "gsl_linalg_bidiag_decomp" 'function)) :int
  (A :pointer)
  (tau_U :pointer)
  (tau_V :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_bidiag_decomp" 'function))

(cffi:defcfun ("gsl_linalg_bidiag_unpack" #.(swig-lispify "gsl_linalg_bidiag_unpack" 'function)) :int
  (A :pointer)
  (tau_U :pointer)
  (U :pointer)
  (tau_V :pointer)
  (V :pointer)
  (diag :pointer)
  (superdiag :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_bidiag_unpack" 'function))

(cffi:defcfun ("gsl_linalg_bidiag_unpack2" #.(swig-lispify "gsl_linalg_bidiag_unpack2" 'function)) :int
  (A :pointer)
  (tau_U :pointer)
  (tau_V :pointer)
  (V :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_bidiag_unpack2" 'function))

(cffi:defcfun ("gsl_linalg_bidiag_unpack_B" #.(swig-lispify "gsl_linalg_bidiag_unpack_B" 'function)) :int
  (A :pointer)
  (diag :pointer)
  (superdiag :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_bidiag_unpack_B" 'function))

(cffi:defcfun ("gsl_linalg_balance_matrix" #.(swig-lispify "gsl_linalg_balance_matrix" 'function)) :int
  (A :pointer)
  (D :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_balance_matrix" 'function))

(cffi:defcfun ("gsl_linalg_balance_accum" #.(swig-lispify "gsl_linalg_balance_accum" 'function)) :int
  (A :pointer)
  (D :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_balance_accum" 'function))

(cffi:defcfun ("gsl_linalg_balance_columns" #.(swig-lispify "gsl_linalg_balance_columns" 'function)) :int
  (A :pointer)
  (D :pointer))

(cl:export '#.(swig-lispify "gsl_linalg_balance_columns" 'function))

(cl:defconstant #.(swig-lispify "GSL_DBL_EPSILON" 'constant) 2.2204460492503131d-16)

(cl:export '#.(swig-lispify "GSL_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_DBL_EPSILON" 'constant) 1.4901161193847656d-08)

(cl:export '#.(swig-lispify "GSL_SQRT_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_DBL_EPSILON" 'constant) 6.0554544523933429d-06)

(cl:export '#.(swig-lispify "GSL_ROOT3_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_DBL_EPSILON" 'constant) 1.2207031250000000d-04)

(cl:export '#.(swig-lispify "GSL_ROOT4_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_DBL_EPSILON" 'constant) 7.4009597974140505d-04)

(cl:export '#.(swig-lispify "GSL_ROOT5_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_DBL_EPSILON" 'constant) 2.4607833005759251d-03)

(cl:export '#.(swig-lispify "GSL_ROOT6_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_DBL_EPSILON" 'constant) -3.6043653389117154d+01)

(cl:export '#.(swig-lispify "GSL_LOG_DBL_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_DBL_MIN" 'constant) 2.2250738585072014d-308)

(cl:export '#.(swig-lispify "GSL_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_DBL_MIN" 'constant) 1.4916681462400413d-154)

(cl:export '#.(swig-lispify "GSL_SQRT_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_DBL_MIN" 'constant) 2.8126442852362996d-103)

(cl:export '#.(swig-lispify "GSL_ROOT3_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_DBL_MIN" 'constant) 1.2213386697554620d-77)

(cl:export '#.(swig-lispify "GSL_ROOT4_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_DBL_MIN" 'constant) 2.9476022969691763d-62)

(cl:export '#.(swig-lispify "GSL_ROOT5_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_DBL_MIN" 'constant) 5.3034368905798218d-52)

(cl:export '#.(swig-lispify "GSL_ROOT6_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_DBL_MIN" 'constant) -7.0839641853226408d+02)

(cl:export '#.(swig-lispify "GSL_LOG_DBL_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_DBL_MAX" 'constant) 1.7976931348623157d+308)

(cl:export '#.(swig-lispify "GSL_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_DBL_MAX" 'constant) 1.3407807929942596d+154)

(cl:export '#.(swig-lispify "GSL_SQRT_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_DBL_MAX" 'constant) 5.6438030941222897d+102)

(cl:export '#.(swig-lispify "GSL_ROOT3_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_DBL_MAX" 'constant) 1.1579208923731620d+77)

(cl:export '#.(swig-lispify "GSL_ROOT4_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_DBL_MAX" 'constant) 4.4765466227572707d+61)

(cl:export '#.(swig-lispify "GSL_ROOT5_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_DBL_MAX" 'constant) 2.3756689782295612d+51)

(cl:export '#.(swig-lispify "GSL_ROOT6_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_DBL_MAX" 'constant) 7.0978271289338397d+02)

(cl:export '#.(swig-lispify "GSL_LOG_DBL_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_FLT_EPSILON" 'constant) 1.1920928955078125d-07)

(cl:export '#.(swig-lispify "GSL_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_FLT_EPSILON" 'constant) 3.4526698300124393d-04)

(cl:export '#.(swig-lispify "GSL_SQRT_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_FLT_EPSILON" 'constant) 4.9215666011518501d-03)

(cl:export '#.(swig-lispify "GSL_ROOT3_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_FLT_EPSILON" 'constant) 1.8581361171917516d-02)

(cl:export '#.(swig-lispify "GSL_ROOT4_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_FLT_EPSILON" 'constant) 4.1234622211652937d-02)

(cl:export '#.(swig-lispify "GSL_ROOT5_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_FLT_EPSILON" 'constant) 7.0153878019335827d-02)

(cl:export '#.(swig-lispify "GSL_ROOT6_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_FLT_EPSILON" 'constant) -1.5942385152878742d+01)

(cl:export '#.(swig-lispify "GSL_LOG_FLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_FLT_MIN" 'constant) 1.1754943508222875d-38)

(cl:export '#.(swig-lispify "GSL_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_FLT_MIN" 'constant) 1.0842021724855044d-19)

(cl:export '#.(swig-lispify "GSL_SQRT_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_FLT_MIN" 'constant) 2.2737367544323241d-13)

(cl:export '#.(swig-lispify "GSL_ROOT3_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_FLT_MIN" 'constant) 3.2927225399135965d-10)

(cl:export '#.(swig-lispify "GSL_ROOT4_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_FLT_MIN" 'constant) 2.5944428542140822d-08)

(cl:export '#.(swig-lispify "GSL_ROOT5_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_FLT_MIN" 'constant) 4.7683715820312542d-07)

(cl:export '#.(swig-lispify "GSL_ROOT6_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_FLT_MIN" 'constant) -8.7336544750553102d+01)

(cl:export '#.(swig-lispify "GSL_LOG_FLT_MIN" 'constant))

(cl:defconstant #.(swig-lispify "GSL_FLT_MAX" 'constant) 3.4028234663852886d+38)

(cl:export '#.(swig-lispify "GSL_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_FLT_MAX" 'constant) 1.8446743523953730d+19)

(cl:export '#.(swig-lispify "GSL_SQRT_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_FLT_MAX" 'constant) 6.9814635196223242d+12)

(cl:export '#.(swig-lispify "GSL_ROOT3_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_FLT_MAX" 'constant) 4.2949672319999986d+09)

(cl:export '#.(swig-lispify "GSL_ROOT4_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_FLT_MAX" 'constant) 5.0859007855960041d+07)

(cl:export '#.(swig-lispify "GSL_ROOT5_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_FLT_MAX" 'constant) 2.6422459233807749d+06)

(cl:export '#.(swig-lispify "GSL_ROOT6_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_FLT_MAX" 'constant) 8.8722839052068352d+01)

(cl:export '#.(swig-lispify "GSL_LOG_FLT_MAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SFLT_EPSILON" 'constant) 4.8828125000000000d-04)

(cl:export '#.(swig-lispify "GSL_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_SFLT_EPSILON" 'constant) 2.2097086912079612d-02)

(cl:export '#.(swig-lispify "GSL_SQRT_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_SFLT_EPSILON" 'constant) 7.8745065618429588d-02)

(cl:export '#.(swig-lispify "GSL_ROOT3_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_SFLT_EPSILON" 'constant) 1.4865088937534013d-01)

(cl:export '#.(swig-lispify "GSL_ROOT4_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_SFLT_EPSILON" 'constant) 2.1763764082403100d-01)

(cl:export '#.(swig-lispify "GSL_ROOT5_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_SFLT_EPSILON" 'constant) 2.8061551207734325d-01)

(cl:export '#.(swig-lispify "GSL_ROOT6_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_SFLT_EPSILON" 'constant) -7.6246189861593985d+00)

(cl:export '#.(swig-lispify "GSL_LOG_SFLT_EPSILON" 'constant))

(cl:defconstant #.(swig-lispify "GSL_MACH_EPS" 'constant) 2.2204460492503131d-16)

(cl:export '#.(swig-lispify "GSL_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SQRT_MACH_EPS" 'constant) 3.2d-08)

(cl:export '#.(swig-lispify "GSL_SQRT_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT3_MACH_EPS" 'constant) 1.0d-05)

(cl:export '#.(swig-lispify "GSL_ROOT3_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT4_MACH_EPS" 'constant) 0.000178d0)

(cl:export '#.(swig-lispify "GSL_ROOT4_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT5_MACH_EPS" 'constant) 0.00100d0)

(cl:export '#.(swig-lispify "GSL_ROOT5_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ROOT6_MACH_EPS" 'constant) 0.00316d0)

(cl:export '#.(swig-lispify "GSL_ROOT6_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "GSL_LOG_MACH_EPS" 'constant) -34.54d0)

(cl:export '#.(swig-lispify "GSL_LOG_MACH_EPS" 'constant))

(cl:defconstant #.(swig-lispify "M_E" 'constant) 2.71828182845904523536028747135d0)

(cl:export '#.(swig-lispify "M_E" 'constant))

(cl:defconstant #.(swig-lispify "M_LOG2E" 'constant) 1.44269504088896340735992468100d0)

(cl:export '#.(swig-lispify "M_LOG2E" 'constant))

(cl:defconstant #.(swig-lispify "M_LOG10E" 'constant) 0.43429448190325182765112891892d0)

(cl:export '#.(swig-lispify "M_LOG10E" 'constant))

(cl:defconstant #.(swig-lispify "M_SQRT2" 'constant) 1.41421356237309504880168872421d0)

(cl:export '#.(swig-lispify "M_SQRT2" 'constant))

(cl:defconstant #.(swig-lispify "M_SQRT1_2" 'constant) 0.70710678118654752440084436210d0)

(cl:export '#.(swig-lispify "M_SQRT1_2" 'constant))

(cl:defconstant #.(swig-lispify "M_SQRT3" 'constant) 1.73205080756887729352744634151d0)

(cl:export '#.(swig-lispify "M_SQRT3" 'constant))

(cl:defconstant #.(swig-lispify "M_PI" 'constant) 3.14159265358979323846264338328d0)

(cl:export '#.(swig-lispify "M_PI" 'constant))

(cl:defconstant #.(swig-lispify "M_PI_2" 'constant) 1.57079632679489661923132169164d0)

(cl:export '#.(swig-lispify "M_PI_2" 'constant))

(cl:defconstant #.(swig-lispify "M_PI_4" 'constant) 0.78539816339744830961566084582d0)

(cl:export '#.(swig-lispify "M_PI_4" 'constant))

(cl:defconstant #.(swig-lispify "M_SQRTPI" 'constant) 1.77245385090551602729816748334d0)

(cl:export '#.(swig-lispify "M_SQRTPI" 'constant))

(cl:defconstant #.(swig-lispify "M_2_SQRTPI" 'constant) 1.12837916709551257389615890312d0)

(cl:export '#.(swig-lispify "M_2_SQRTPI" 'constant))

(cl:defconstant #.(swig-lispify "M_1_PI" 'constant) 0.31830988618379067153776752675d0)

(cl:export '#.(swig-lispify "M_1_PI" 'constant))

(cl:defconstant #.(swig-lispify "M_2_PI" 'constant) 0.63661977236758134307553505349d0)

(cl:export '#.(swig-lispify "M_2_PI" 'constant))

(cl:defconstant #.(swig-lispify "M_LN10" 'constant) 2.30258509299404568401799145468d0)

(cl:export '#.(swig-lispify "M_LN10" 'constant))

(cl:defconstant #.(swig-lispify "M_LN2" 'constant) 0.69314718055994530941723212146d0)

(cl:export '#.(swig-lispify "M_LN2" 'constant))

(cl:defconstant #.(swig-lispify "M_LNPI" 'constant) 1.14472988584940017414342735135d0)

(cl:export '#.(swig-lispify "M_LNPI" 'constant))

(cl:defconstant #.(swig-lispify "M_EULER" 'constant) 0.57721566490153286060651209008d0)

(cl:export '#.(swig-lispify "M_EULER" 'constant))

(cffi:defcstruct #.(swig-lispify "gsl_function_struct" 'classname)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_function_struct" 'classname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_function_fdf_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "df" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_function_fdf_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "df" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_function_vec_struct" 'classname)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_function_vec_struct" 'classname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_char" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :string)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_char" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_char_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_char" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_char_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_char_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_char" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_char_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_char_alloc" #.(swig-lispify "gsl_matrix_char_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_alloc" 'function))

(cffi:defcfun ("gsl_matrix_char_calloc" #.(swig-lispify "gsl_matrix_char_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_calloc" 'function))

(cffi:defcfun ("gsl_matrix_char_alloc_from_block" #.(swig-lispify "gsl_matrix_char_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_char_alloc_from_matrix" #.(swig-lispify "gsl_matrix_char_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_char_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_char_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_char_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_char_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_char_free" #.(swig-lispify "gsl_matrix_char_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_free" 'function))

(cffi:defcfun ("gsl_matrix_char_submatrix" #.(swig-lispify "gsl_matrix_char_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_char_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_char_row" #.(swig-lispify "gsl_matrix_char_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_row" 'function))

(cffi:defcfun ("gsl_matrix_char_column" #.(swig-lispify "gsl_matrix_char_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_column" 'function))

(cffi:defcfun ("gsl_matrix_char_diagonal" #.(swig-lispify "gsl_matrix_char_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_subdiagonal" #.(swig-lispify "gsl_matrix_char_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_superdiagonal" #.(swig-lispify "gsl_matrix_char_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_subrow" #.(swig-lispify "gsl_matrix_char_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_subrow" 'function))

(cffi:defcfun ("gsl_matrix_char_subcolumn" #.(swig-lispify "gsl_matrix_char_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_char_view_array" #.(swig-lispify "gsl_matrix_char_view_array" 'function)) #.(swig-lispify "_gsl_matrix_char_view" 'classname)
  (base :string)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_view_array" 'function))

(cffi:defcfun ("gsl_matrix_char_view_array_with_tda" #.(swig-lispify "gsl_matrix_char_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_char_view" 'classname)
  (base :string)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_char_view_vector" #.(swig-lispify "gsl_matrix_char_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_char_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_char_view_vector_with_tda" #.(swig-lispify "gsl_matrix_char_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_char_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_char_const_submatrix" #.(swig-lispify "gsl_matrix_char_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_char_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_char_const_row" #.(swig-lispify "gsl_matrix_char_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_row" 'function))

(cffi:defcfun ("gsl_matrix_char_const_column" #.(swig-lispify "gsl_matrix_char_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_column" 'function))

(cffi:defcfun ("gsl_matrix_char_const_diagonal" #.(swig-lispify "gsl_matrix_char_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_const_subdiagonal" #.(swig-lispify "gsl_matrix_char_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_const_superdiagonal" #.(swig-lispify "gsl_matrix_char_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_const_subrow" #.(swig-lispify "gsl_matrix_char_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_char_const_subcolumn" #.(swig-lispify "gsl_matrix_char_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_char_const_view_array" #.(swig-lispify "gsl_matrix_char_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_char_const_view" 'classname)
  (base :string)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_char_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_char_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_char_const_view" 'classname)
  (base :string)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_char_const_view_vector" #.(swig-lispify "gsl_matrix_char_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_char_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_char_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_char_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_char_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_char_set_zero" #.(swig-lispify "gsl_matrix_char_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_char_set_identity" #.(swig-lispify "gsl_matrix_char_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_char_set_all" #.(swig-lispify "gsl_matrix_char_set_all" 'function)) :void
  (m :pointer)
  (x :char))

(cl:export '#.(swig-lispify "gsl_matrix_char_set_all" 'function))

(cffi:defcfun ("gsl_matrix_char_fread" #.(swig-lispify "gsl_matrix_char_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_fread" 'function))

(cffi:defcfun ("gsl_matrix_char_fwrite" #.(swig-lispify "gsl_matrix_char_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_char_fscanf" #.(swig-lispify "gsl_matrix_char_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_char_fprintf" #.(swig-lispify "gsl_matrix_char_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_char_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_char_memcpy" #.(swig-lispify "gsl_matrix_char_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_char_swap" #.(swig-lispify "gsl_matrix_char_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_swap" 'function))

(cffi:defcfun ("gsl_matrix_char_swap_rows" #.(swig-lispify "gsl_matrix_char_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_char_swap_columns" #.(swig-lispify "gsl_matrix_char_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_char_swap_rowcol" #.(swig-lispify "gsl_matrix_char_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_char_transpose" #.(swig-lispify "gsl_matrix_char_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_transpose" 'function))

(cffi:defcfun ("gsl_matrix_char_transpose_memcpy" #.(swig-lispify "gsl_matrix_char_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_char_max" #.(swig-lispify "gsl_matrix_char_max" 'function)) :char
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_max" 'function))

(cffi:defcfun ("gsl_matrix_char_min" #.(swig-lispify "gsl_matrix_char_min" 'function)) :char
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_min" 'function))

(cffi:defcfun ("gsl_matrix_char_minmax" #.(swig-lispify "gsl_matrix_char_minmax" 'function)) :void
  (m :pointer)
  (min_out :string)
  (max_out :string))

(cl:export '#.(swig-lispify "gsl_matrix_char_minmax" 'function))

(cffi:defcfun ("gsl_matrix_char_max_index" #.(swig-lispify "gsl_matrix_char_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_max_index" 'function))

(cffi:defcfun ("gsl_matrix_char_min_index" #.(swig-lispify "gsl_matrix_char_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_min_index" 'function))

(cffi:defcfun ("gsl_matrix_char_minmax_index" #.(swig-lispify "gsl_matrix_char_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_char_equal" #.(swig-lispify "gsl_matrix_char_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_equal" 'function))

(cffi:defcfun ("gsl_matrix_char_isnull" #.(swig-lispify "gsl_matrix_char_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_isnull" 'function))

(cffi:defcfun ("gsl_matrix_char_ispos" #.(swig-lispify "gsl_matrix_char_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_ispos" 'function))

(cffi:defcfun ("gsl_matrix_char_isneg" #.(swig-lispify "gsl_matrix_char_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_isneg" 'function))

(cffi:defcfun ("gsl_matrix_char_isnonneg" #.(swig-lispify "gsl_matrix_char_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_char_add" #.(swig-lispify "gsl_matrix_char_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_add" 'function))

(cffi:defcfun ("gsl_matrix_char_sub" #.(swig-lispify "gsl_matrix_char_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_sub" 'function))

(cffi:defcfun ("gsl_matrix_char_mul_elements" #.(swig-lispify "gsl_matrix_char_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_char_div_elements" #.(swig-lispify "gsl_matrix_char_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_char_scale" #.(swig-lispify "gsl_matrix_char_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_char_scale" 'function))

(cffi:defcfun ("gsl_matrix_char_add_constant" #.(swig-lispify "gsl_matrix_char_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_char_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_char_add_diagonal" #.(swig-lispify "gsl_matrix_char_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_char_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_char_get_row" #.(swig-lispify "gsl_matrix_char_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_get_row" 'function))

(cffi:defcfun ("gsl_matrix_char_get_col" #.(swig-lispify "gsl_matrix_char_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_get_col" 'function))

(cffi:defcfun ("gsl_matrix_char_set_row" #.(swig-lispify "gsl_matrix_char_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_set_row" 'function))

(cffi:defcfun ("gsl_matrix_char_set_col" #.(swig-lispify "gsl_matrix_char_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_set_col" 'function))

(cffi:defcfun ("gsl_matrix_char_get" #.(swig-lispify "gsl_matrix_char_get" 'function)) :char
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_get" 'function))

(cffi:defcfun ("gsl_matrix_char_set" #.(swig-lispify "gsl_matrix_char_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :char))

(cl:export '#.(swig-lispify "gsl_matrix_char_set" 'function))

(cffi:defcfun ("gsl_matrix_char_ptr" #.(swig-lispify "gsl_matrix_char_ptr" 'function)) :string
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_ptr" 'function))

(cffi:defcfun ("gsl_matrix_char_const_ptr" #.(swig-lispify "gsl_matrix_char_const_ptr" 'function)) :string
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_char_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_complex" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_complex" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_complex_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_complex" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_complex_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_complex_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_complex" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_complex_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_complex_alloc" #.(swig-lispify "gsl_matrix_complex_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_alloc" 'function))

(cffi:defcfun ("gsl_matrix_complex_calloc" #.(swig-lispify "gsl_matrix_complex_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_calloc" 'function))

(cffi:defcfun ("gsl_matrix_complex_alloc_from_block" #.(swig-lispify "gsl_matrix_complex_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_complex_alloc_from_matrix" #.(swig-lispify "gsl_matrix_complex_alloc_from_matrix" 'function)) :pointer
  (b :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_complex_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_complex_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_complex_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_complex_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_free" #.(swig-lispify "gsl_matrix_complex_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_free" 'function))

(cffi:defcfun ("gsl_matrix_complex_submatrix" #.(swig-lispify "gsl_matrix_complex_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_complex_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_row" #.(swig-lispify "gsl_matrix_complex_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_column" #.(swig-lispify "gsl_matrix_complex_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_column" 'function))

(cffi:defcfun ("gsl_matrix_complex_diagonal" #.(swig-lispify "gsl_matrix_complex_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_subdiagonal" #.(swig-lispify "gsl_matrix_complex_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_superdiagonal" #.(swig-lispify "gsl_matrix_complex_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_subrow" #.(swig-lispify "gsl_matrix_complex_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_subrow" 'function))

(cffi:defcfun ("gsl_matrix_complex_subcolumn" #.(swig-lispify "gsl_matrix_complex_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_complex_view_array" #.(swig-lispify "gsl_matrix_complex_view_array" 'function)) #.(swig-lispify "_gsl_matrix_complex_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_view_array" 'function))

(cffi:defcfun ("gsl_matrix_complex_view_array_with_tda" #.(swig-lispify "gsl_matrix_complex_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_view_vector" #.(swig-lispify "gsl_matrix_complex_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_complex_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_complex_view_vector_with_tda" #.(swig-lispify "gsl_matrix_complex_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_submatrix" #.(swig-lispify "gsl_matrix_complex_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_complex_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_row" #.(swig-lispify "gsl_matrix_complex_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_column" #.(swig-lispify "gsl_matrix_complex_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_column" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_diagonal" #.(swig-lispify "gsl_matrix_complex_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_subdiagonal" #.(swig-lispify "gsl_matrix_complex_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_superdiagonal" #.(swig-lispify "gsl_matrix_complex_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_subrow" #.(swig-lispify "gsl_matrix_complex_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_subcolumn" #.(swig-lispify "gsl_matrix_complex_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_view_array" #.(swig-lispify "gsl_matrix_complex_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_complex_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_complex_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_view_vector" #.(swig-lispify "gsl_matrix_complex_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_complex_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_complex_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_set_zero" #.(swig-lispify "gsl_matrix_complex_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_complex_set_identity" #.(swig-lispify "gsl_matrix_complex_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_complex_set_all" #.(swig-lispify "gsl_matrix_complex_set_all" 'function)) :void
  (m :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_set_all" 'function))

(cffi:defcfun ("gsl_matrix_complex_fread" #.(swig-lispify "gsl_matrix_complex_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_fread" 'function))

(cffi:defcfun ("gsl_matrix_complex_fwrite" #.(swig-lispify "gsl_matrix_complex_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_complex_fscanf" #.(swig-lispify "gsl_matrix_complex_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_complex_fprintf" #.(swig-lispify "gsl_matrix_complex_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_complex_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_complex_memcpy" #.(swig-lispify "gsl_matrix_complex_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_complex_swap" #.(swig-lispify "gsl_matrix_complex_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_swap" 'function))

(cffi:defcfun ("gsl_matrix_complex_swap_rows" #.(swig-lispify "gsl_matrix_complex_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_complex_swap_columns" #.(swig-lispify "gsl_matrix_complex_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_complex_swap_rowcol" #.(swig-lispify "gsl_matrix_complex_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_complex_transpose" #.(swig-lispify "gsl_matrix_complex_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_transpose" 'function))

(cffi:defcfun ("gsl_matrix_complex_transpose_memcpy" #.(swig-lispify "gsl_matrix_complex_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_complex_equal" #.(swig-lispify "gsl_matrix_complex_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_equal" 'function))

(cffi:defcfun ("gsl_matrix_complex_isnull" #.(swig-lispify "gsl_matrix_complex_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_isnull" 'function))

(cffi:defcfun ("gsl_matrix_complex_ispos" #.(swig-lispify "gsl_matrix_complex_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_ispos" 'function))

(cffi:defcfun ("gsl_matrix_complex_isneg" #.(swig-lispify "gsl_matrix_complex_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_isneg" 'function))

(cffi:defcfun ("gsl_matrix_complex_isnonneg" #.(swig-lispify "gsl_matrix_complex_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_complex_add" #.(swig-lispify "gsl_matrix_complex_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_add" 'function))

(cffi:defcfun ("gsl_matrix_complex_sub" #.(swig-lispify "gsl_matrix_complex_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_sub" 'function))

(cffi:defcfun ("gsl_matrix_complex_mul_elements" #.(swig-lispify "gsl_matrix_complex_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_complex_div_elements" #.(swig-lispify "gsl_matrix_complex_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_complex_scale" #.(swig-lispify "gsl_matrix_complex_scale" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_scale" 'function))

(cffi:defcfun ("gsl_matrix_complex_add_constant" #.(swig-lispify "gsl_matrix_complex_add_constant" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_complex_add_diagonal" #.(swig-lispify "gsl_matrix_complex_add_diagonal" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_get_row" #.(swig-lispify "gsl_matrix_complex_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_get_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_get_col" #.(swig-lispify "gsl_matrix_complex_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_get_col" 'function))

(cffi:defcfun ("gsl_matrix_complex_set_row" #.(swig-lispify "gsl_matrix_complex_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_set_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_set_col" #.(swig-lispify "gsl_matrix_complex_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_set_col" 'function))

(cffi:defcfun ("gsl_matrix_complex_get" #.(swig-lispify "gsl_matrix_complex_get" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_get" 'function))

(cffi:defcfun ("gsl_matrix_complex_set" #.(swig-lispify "gsl_matrix_complex_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_set" 'function))

(cffi:defcfun ("gsl_matrix_complex_ptr" #.(swig-lispify "gsl_matrix_complex_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_ptr" 'function))

(cffi:defcfun ("gsl_matrix_complex_const_ptr" #.(swig-lispify "gsl_matrix_complex_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_complex_float" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_complex_float_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_complex_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_complex_float_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_complex_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_complex_float_alloc" #.(swig-lispify "gsl_matrix_complex_float_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_alloc" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_calloc" #.(swig-lispify "gsl_matrix_complex_float_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_calloc" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_alloc_from_block" #.(swig-lispify "gsl_matrix_complex_float_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_alloc_from_matrix" #.(swig-lispify "gsl_matrix_complex_float_alloc_from_matrix" 'function)) :pointer
  (b :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_complex_float_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_complex_float_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_complex_float_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_complex_float_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_free" #.(swig-lispify "gsl_matrix_complex_float_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_free" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_submatrix" #.(swig-lispify "gsl_matrix_complex_float_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_row" #.(swig-lispify "gsl_matrix_complex_float_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_column" #.(swig-lispify "gsl_matrix_complex_float_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_column" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_diagonal" #.(swig-lispify "gsl_matrix_complex_float_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_subdiagonal" #.(swig-lispify "gsl_matrix_complex_float_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_superdiagonal" #.(swig-lispify "gsl_matrix_complex_float_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_subrow" #.(swig-lispify "gsl_matrix_complex_float_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_subrow" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_subcolumn" #.(swig-lispify "gsl_matrix_complex_float_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_view_array" #.(swig-lispify "gsl_matrix_complex_float_view_array" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_view_array" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_view_array_with_tda" #.(swig-lispify "gsl_matrix_complex_float_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_view_vector" #.(swig-lispify "gsl_matrix_complex_float_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_view_vector_with_tda" #.(swig-lispify "gsl_matrix_complex_float_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_submatrix" #.(swig-lispify "gsl_matrix_complex_float_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_row" #.(swig-lispify "gsl_matrix_complex_float_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_column" #.(swig-lispify "gsl_matrix_complex_float_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_column" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_diagonal" #.(swig-lispify "gsl_matrix_complex_float_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_subdiagonal" #.(swig-lispify "gsl_matrix_complex_float_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_superdiagonal" #.(swig-lispify "gsl_matrix_complex_float_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_subrow" #.(swig-lispify "gsl_matrix_complex_float_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_subcolumn" #.(swig-lispify "gsl_matrix_complex_float_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_view_array" #.(swig-lispify "gsl_matrix_complex_float_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_complex_float_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_view_vector" #.(swig-lispify "gsl_matrix_complex_float_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_complex_float_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_float_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_set_zero" #.(swig-lispify "gsl_matrix_complex_float_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_set_identity" #.(swig-lispify "gsl_matrix_complex_float_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_set_all" #.(swig-lispify "gsl_matrix_complex_float_set_all" 'function)) :void
  (m :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_set_all" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_fread" #.(swig-lispify "gsl_matrix_complex_float_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_fread" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_fwrite" #.(swig-lispify "gsl_matrix_complex_float_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_fscanf" #.(swig-lispify "gsl_matrix_complex_float_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_fprintf" #.(swig-lispify "gsl_matrix_complex_float_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_memcpy" #.(swig-lispify "gsl_matrix_complex_float_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_swap" #.(swig-lispify "gsl_matrix_complex_float_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_swap" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_swap_rows" #.(swig-lispify "gsl_matrix_complex_float_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_swap_columns" #.(swig-lispify "gsl_matrix_complex_float_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_swap_rowcol" #.(swig-lispify "gsl_matrix_complex_float_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_transpose" #.(swig-lispify "gsl_matrix_complex_float_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_transpose" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_transpose_memcpy" #.(swig-lispify "gsl_matrix_complex_float_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_equal" #.(swig-lispify "gsl_matrix_complex_float_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_equal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_isnull" #.(swig-lispify "gsl_matrix_complex_float_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_isnull" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_ispos" #.(swig-lispify "gsl_matrix_complex_float_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_ispos" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_isneg" #.(swig-lispify "gsl_matrix_complex_float_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_isneg" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_isnonneg" #.(swig-lispify "gsl_matrix_complex_float_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_add" #.(swig-lispify "gsl_matrix_complex_float_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_add" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_sub" #.(swig-lispify "gsl_matrix_complex_float_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_sub" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_mul_elements" #.(swig-lispify "gsl_matrix_complex_float_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_div_elements" #.(swig-lispify "gsl_matrix_complex_float_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_scale" #.(swig-lispify "gsl_matrix_complex_float_scale" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_scale" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_add_constant" #.(swig-lispify "gsl_matrix_complex_float_add_constant" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_add_diagonal" #.(swig-lispify "gsl_matrix_complex_float_add_diagonal" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_get_row" #.(swig-lispify "gsl_matrix_complex_float_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_get_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_get_col" #.(swig-lispify "gsl_matrix_complex_float_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_get_col" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_set_row" #.(swig-lispify "gsl_matrix_complex_float_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_set_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_set_col" #.(swig-lispify "gsl_matrix_complex_float_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_set_col" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_get" #.(swig-lispify "gsl_matrix_complex_float_get" 'function)) #.(swig-lispify "gsl_complex_float" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_get" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_set" #.(swig-lispify "gsl_matrix_complex_float_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_set" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_ptr" #.(swig-lispify "gsl_matrix_complex_float_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_ptr" 'function))

(cffi:defcfun ("gsl_matrix_complex_float_const_ptr" #.(swig-lispify "gsl_matrix_complex_float_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_float_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_complex_long_double" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_complex_long_double_alloc" #.(swig-lispify "gsl_matrix_complex_long_double_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_alloc" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_calloc" #.(swig-lispify "gsl_matrix_complex_long_double_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_calloc" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_alloc_from_block" #.(swig-lispify "gsl_matrix_complex_long_double_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_alloc_from_matrix" #.(swig-lispify "gsl_matrix_complex_long_double_alloc_from_matrix" 'function)) :pointer
  (b :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_complex_long_double_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_complex_long_double_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_free" #.(swig-lispify "gsl_matrix_complex_long_double_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_free" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_submatrix" #.(swig-lispify "gsl_matrix_complex_long_double_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_row" #.(swig-lispify "gsl_matrix_complex_long_double_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_column" #.(swig-lispify "gsl_matrix_complex_long_double_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_column" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_diagonal" #.(swig-lispify "gsl_matrix_complex_long_double_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_subdiagonal" #.(swig-lispify "gsl_matrix_complex_long_double_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_superdiagonal" #.(swig-lispify "gsl_matrix_complex_long_double_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_subrow" #.(swig-lispify "gsl_matrix_complex_long_double_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_subrow" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_subcolumn" #.(swig-lispify "gsl_matrix_complex_long_double_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_view_array" #.(swig-lispify "gsl_matrix_complex_long_double_view_array" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_view_array" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_view_array_with_tda" #.(swig-lispify "gsl_matrix_complex_long_double_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_view_vector" #.(swig-lispify "gsl_matrix_complex_long_double_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_view_vector_with_tda" #.(swig-lispify "gsl_matrix_complex_long_double_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_submatrix" #.(swig-lispify "gsl_matrix_complex_long_double_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_row" #.(swig-lispify "gsl_matrix_complex_long_double_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_column" #.(swig-lispify "gsl_matrix_complex_long_double_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_column" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_diagonal" #.(swig-lispify "gsl_matrix_complex_long_double_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_subdiagonal" #.(swig-lispify "gsl_matrix_complex_long_double_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_superdiagonal" #.(swig-lispify "gsl_matrix_complex_long_double_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_subrow" #.(swig-lispify "gsl_matrix_complex_long_double_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_subcolumn" #.(swig-lispify "gsl_matrix_complex_long_double_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_view_array" #.(swig-lispify "gsl_matrix_complex_long_double_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_complex_long_double_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_view_vector" #.(swig-lispify "gsl_matrix_complex_long_double_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_complex_long_double_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_complex_long_double_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_set_zero" #.(swig-lispify "gsl_matrix_complex_long_double_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_set_identity" #.(swig-lispify "gsl_matrix_complex_long_double_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_set_all" #.(swig-lispify "gsl_matrix_complex_long_double_set_all" 'function)) :void
  (m :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_set_all" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_fread" #.(swig-lispify "gsl_matrix_complex_long_double_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_fread" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_fwrite" #.(swig-lispify "gsl_matrix_complex_long_double_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_fscanf" #.(swig-lispify "gsl_matrix_complex_long_double_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_fprintf" #.(swig-lispify "gsl_matrix_complex_long_double_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_memcpy" #.(swig-lispify "gsl_matrix_complex_long_double_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_swap" #.(swig-lispify "gsl_matrix_complex_long_double_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_swap" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_swap_rows" #.(swig-lispify "gsl_matrix_complex_long_double_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_swap_columns" #.(swig-lispify "gsl_matrix_complex_long_double_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_swap_rowcol" #.(swig-lispify "gsl_matrix_complex_long_double_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_transpose" #.(swig-lispify "gsl_matrix_complex_long_double_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_transpose" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_transpose_memcpy" #.(swig-lispify "gsl_matrix_complex_long_double_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_equal" #.(swig-lispify "gsl_matrix_complex_long_double_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_equal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_isnull" #.(swig-lispify "gsl_matrix_complex_long_double_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_isnull" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_ispos" #.(swig-lispify "gsl_matrix_complex_long_double_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_ispos" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_isneg" #.(swig-lispify "gsl_matrix_complex_long_double_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_isneg" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_isnonneg" #.(swig-lispify "gsl_matrix_complex_long_double_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_add" #.(swig-lispify "gsl_matrix_complex_long_double_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_add" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_sub" #.(swig-lispify "gsl_matrix_complex_long_double_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_sub" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_mul_elements" #.(swig-lispify "gsl_matrix_complex_long_double_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_div_elements" #.(swig-lispify "gsl_matrix_complex_long_double_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_scale" #.(swig-lispify "gsl_matrix_complex_long_double_scale" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_scale" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_add_constant" #.(swig-lispify "gsl_matrix_complex_long_double_add_constant" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_add_diagonal" #.(swig-lispify "gsl_matrix_complex_long_double_add_diagonal" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_get_row" #.(swig-lispify "gsl_matrix_complex_long_double_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_get_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_get_col" #.(swig-lispify "gsl_matrix_complex_long_double_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_get_col" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_set_row" #.(swig-lispify "gsl_matrix_complex_long_double_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_set_row" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_set_col" #.(swig-lispify "gsl_matrix_complex_long_double_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_set_col" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_get" #.(swig-lispify "gsl_matrix_complex_long_double_get" 'function)) #.(swig-lispify "gsl_complex_long_double" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_get" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_set" #.(swig-lispify "gsl_matrix_complex_long_double_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_set" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_ptr" #.(swig-lispify "gsl_matrix_complex_long_double_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_ptr" 'function))

(cffi:defcfun ("gsl_matrix_complex_long_double_const_ptr" #.(swig-lispify "gsl_matrix_complex_long_double_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_complex_long_double_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_alloc" #.(swig-lispify "gsl_matrix_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_alloc" 'function))

(cffi:defcfun ("gsl_matrix_calloc" #.(swig-lispify "gsl_matrix_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_calloc" 'function))

(cffi:defcfun ("gsl_matrix_alloc_from_block" #.(swig-lispify "gsl_matrix_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_alloc_from_matrix" #.(swig-lispify "gsl_matrix_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_free" #.(swig-lispify "gsl_matrix_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_free" 'function))

(cffi:defcfun ("gsl_matrix_submatrix" #.(swig-lispify "gsl_matrix_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_row" #.(swig-lispify "gsl_matrix_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_row" 'function))

(cffi:defcfun ("gsl_matrix_column" #.(swig-lispify "gsl_matrix_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_column" 'function))

(cffi:defcfun ("gsl_matrix_diagonal" #.(swig-lispify "gsl_matrix_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_subdiagonal" #.(swig-lispify "gsl_matrix_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_superdiagonal" #.(swig-lispify "gsl_matrix_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_subrow" #.(swig-lispify "gsl_matrix_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_subrow" 'function))

(cffi:defcfun ("gsl_matrix_subcolumn" #.(swig-lispify "gsl_matrix_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_view_array" #.(swig-lispify "gsl_matrix_view_array" 'function)) #.(swig-lispify "_gsl_matrix_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_view_array" 'function))

(cffi:defcfun ("gsl_matrix_view_array_with_tda" #.(swig-lispify "gsl_matrix_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_view_vector" #.(swig-lispify "gsl_matrix_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_view_vector_with_tda" #.(swig-lispify "gsl_matrix_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_const_submatrix" #.(swig-lispify "gsl_matrix_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_const_row" #.(swig-lispify "gsl_matrix_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_row" 'function))

(cffi:defcfun ("gsl_matrix_const_column" #.(swig-lispify "gsl_matrix_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_column" 'function))

(cffi:defcfun ("gsl_matrix_const_diagonal" #.(swig-lispify "gsl_matrix_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_const_subdiagonal" #.(swig-lispify "gsl_matrix_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_const_superdiagonal" #.(swig-lispify "gsl_matrix_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_const_subrow" #.(swig-lispify "gsl_matrix_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_const_subcolumn" #.(swig-lispify "gsl_matrix_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_const_view_array" #.(swig-lispify "gsl_matrix_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_const_view_vector" #.(swig-lispify "gsl_matrix_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_set_zero" #.(swig-lispify "gsl_matrix_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_set_identity" #.(swig-lispify "gsl_matrix_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_set_all" #.(swig-lispify "gsl_matrix_set_all" 'function)) :void
  (m :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_set_all" 'function))

(cffi:defcfun ("gsl_matrix_fread" #.(swig-lispify "gsl_matrix_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_fread" 'function))

(cffi:defcfun ("gsl_matrix_fwrite" #.(swig-lispify "gsl_matrix_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_fscanf" #.(swig-lispify "gsl_matrix_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_fprintf" #.(swig-lispify "gsl_matrix_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_memcpy" #.(swig-lispify "gsl_matrix_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_swap" #.(swig-lispify "gsl_matrix_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_swap" 'function))

(cffi:defcfun ("gsl_matrix_swap_rows" #.(swig-lispify "gsl_matrix_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_swap_columns" #.(swig-lispify "gsl_matrix_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_swap_rowcol" #.(swig-lispify "gsl_matrix_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_transpose" #.(swig-lispify "gsl_matrix_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_transpose" 'function))

(cffi:defcfun ("gsl_matrix_transpose_memcpy" #.(swig-lispify "gsl_matrix_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_max" #.(swig-lispify "gsl_matrix_max" 'function)) :double
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_max" 'function))

(cffi:defcfun ("gsl_matrix_min" #.(swig-lispify "gsl_matrix_min" 'function)) :double
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_min" 'function))

(cffi:defcfun ("gsl_matrix_minmax" #.(swig-lispify "gsl_matrix_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_minmax" 'function))

(cffi:defcfun ("gsl_matrix_max_index" #.(swig-lispify "gsl_matrix_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_max_index" 'function))

(cffi:defcfun ("gsl_matrix_min_index" #.(swig-lispify "gsl_matrix_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_min_index" 'function))

(cffi:defcfun ("gsl_matrix_minmax_index" #.(swig-lispify "gsl_matrix_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_equal" #.(swig-lispify "gsl_matrix_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_equal" 'function))

(cffi:defcfun ("gsl_matrix_isnull" #.(swig-lispify "gsl_matrix_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_isnull" 'function))

(cffi:defcfun ("gsl_matrix_ispos" #.(swig-lispify "gsl_matrix_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ispos" 'function))

(cffi:defcfun ("gsl_matrix_isneg" #.(swig-lispify "gsl_matrix_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_isneg" 'function))

(cffi:defcfun ("gsl_matrix_isnonneg" #.(swig-lispify "gsl_matrix_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_add" #.(swig-lispify "gsl_matrix_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_add" 'function))

(cffi:defcfun ("gsl_matrix_sub" #.(swig-lispify "gsl_matrix_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_sub" 'function))

(cffi:defcfun ("gsl_matrix_mul_elements" #.(swig-lispify "gsl_matrix_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_div_elements" #.(swig-lispify "gsl_matrix_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_scale" #.(swig-lispify "gsl_matrix_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_scale" 'function))

(cffi:defcfun ("gsl_matrix_add_constant" #.(swig-lispify "gsl_matrix_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_add_diagonal" #.(swig-lispify "gsl_matrix_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_get_row" #.(swig-lispify "gsl_matrix_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_get_row" 'function))

(cffi:defcfun ("gsl_matrix_get_col" #.(swig-lispify "gsl_matrix_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_get_col" 'function))

(cffi:defcfun ("gsl_matrix_set_row" #.(swig-lispify "gsl_matrix_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_set_row" 'function))

(cffi:defcfun ("gsl_matrix_set_col" #.(swig-lispify "gsl_matrix_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_set_col" 'function))

(cffi:defcfun ("gsl_matrix_get" #.(swig-lispify "gsl_matrix_get" 'function)) :double
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_get" 'function))

(cffi:defcfun ("gsl_matrix_set" #.(swig-lispify "gsl_matrix_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_set" 'function))

(cffi:defcfun ("gsl_matrix_ptr" #.(swig-lispify "gsl_matrix_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ptr" 'function))

(cffi:defcfun ("gsl_matrix_const_ptr" #.(swig-lispify "gsl_matrix_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_float" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_float" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_float_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_float_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_float_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_float_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_float_alloc" #.(swig-lispify "gsl_matrix_float_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_alloc" 'function))

(cffi:defcfun ("gsl_matrix_float_calloc" #.(swig-lispify "gsl_matrix_float_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_calloc" 'function))

(cffi:defcfun ("gsl_matrix_float_alloc_from_block" #.(swig-lispify "gsl_matrix_float_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_float_alloc_from_matrix" #.(swig-lispify "gsl_matrix_float_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_float_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_float_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_float_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_float_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_float_free" #.(swig-lispify "gsl_matrix_float_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_free" 'function))

(cffi:defcfun ("gsl_matrix_float_submatrix" #.(swig-lispify "gsl_matrix_float_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_float_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_float_row" #.(swig-lispify "gsl_matrix_float_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_row" 'function))

(cffi:defcfun ("gsl_matrix_float_column" #.(swig-lispify "gsl_matrix_float_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_column" 'function))

(cffi:defcfun ("gsl_matrix_float_diagonal" #.(swig-lispify "gsl_matrix_float_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_subdiagonal" #.(swig-lispify "gsl_matrix_float_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_superdiagonal" #.(swig-lispify "gsl_matrix_float_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_subrow" #.(swig-lispify "gsl_matrix_float_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_subrow" 'function))

(cffi:defcfun ("gsl_matrix_float_subcolumn" #.(swig-lispify "gsl_matrix_float_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_float_view_array" #.(swig-lispify "gsl_matrix_float_view_array" 'function)) #.(swig-lispify "_gsl_matrix_float_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_view_array" 'function))

(cffi:defcfun ("gsl_matrix_float_view_array_with_tda" #.(swig-lispify "gsl_matrix_float_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_float_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_float_view_vector" #.(swig-lispify "gsl_matrix_float_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_float_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_float_view_vector_with_tda" #.(swig-lispify "gsl_matrix_float_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_float_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_float_const_submatrix" #.(swig-lispify "gsl_matrix_float_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_float_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_float_const_row" #.(swig-lispify "gsl_matrix_float_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_row" 'function))

(cffi:defcfun ("gsl_matrix_float_const_column" #.(swig-lispify "gsl_matrix_float_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_column" 'function))

(cffi:defcfun ("gsl_matrix_float_const_diagonal" #.(swig-lispify "gsl_matrix_float_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_const_subdiagonal" #.(swig-lispify "gsl_matrix_float_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_const_superdiagonal" #.(swig-lispify "gsl_matrix_float_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_const_subrow" #.(swig-lispify "gsl_matrix_float_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_float_const_subcolumn" #.(swig-lispify "gsl_matrix_float_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_float_const_view_array" #.(swig-lispify "gsl_matrix_float_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_float_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_float_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_float_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_float_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_float_const_view_vector" #.(swig-lispify "gsl_matrix_float_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_float_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_float_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_float_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_float_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_float_set_zero" #.(swig-lispify "gsl_matrix_float_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_float_set_identity" #.(swig-lispify "gsl_matrix_float_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_float_set_all" #.(swig-lispify "gsl_matrix_float_set_all" 'function)) :void
  (m :pointer)
  (x :float))

(cl:export '#.(swig-lispify "gsl_matrix_float_set_all" 'function))

(cffi:defcfun ("gsl_matrix_float_fread" #.(swig-lispify "gsl_matrix_float_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_fread" 'function))

(cffi:defcfun ("gsl_matrix_float_fwrite" #.(swig-lispify "gsl_matrix_float_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_float_fscanf" #.(swig-lispify "gsl_matrix_float_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_float_fprintf" #.(swig-lispify "gsl_matrix_float_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_float_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_float_memcpy" #.(swig-lispify "gsl_matrix_float_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_float_swap" #.(swig-lispify "gsl_matrix_float_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_swap" 'function))

(cffi:defcfun ("gsl_matrix_float_swap_rows" #.(swig-lispify "gsl_matrix_float_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_float_swap_columns" #.(swig-lispify "gsl_matrix_float_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_float_swap_rowcol" #.(swig-lispify "gsl_matrix_float_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_float_transpose" #.(swig-lispify "gsl_matrix_float_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_transpose" 'function))

(cffi:defcfun ("gsl_matrix_float_transpose_memcpy" #.(swig-lispify "gsl_matrix_float_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_float_max" #.(swig-lispify "gsl_matrix_float_max" 'function)) :float
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_max" 'function))

(cffi:defcfun ("gsl_matrix_float_min" #.(swig-lispify "gsl_matrix_float_min" 'function)) :float
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_min" 'function))

(cffi:defcfun ("gsl_matrix_float_minmax" #.(swig-lispify "gsl_matrix_float_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_minmax" 'function))

(cffi:defcfun ("gsl_matrix_float_max_index" #.(swig-lispify "gsl_matrix_float_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_max_index" 'function))

(cffi:defcfun ("gsl_matrix_float_min_index" #.(swig-lispify "gsl_matrix_float_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_min_index" 'function))

(cffi:defcfun ("gsl_matrix_float_minmax_index" #.(swig-lispify "gsl_matrix_float_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_float_equal" #.(swig-lispify "gsl_matrix_float_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_equal" 'function))

(cffi:defcfun ("gsl_matrix_float_isnull" #.(swig-lispify "gsl_matrix_float_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_isnull" 'function))

(cffi:defcfun ("gsl_matrix_float_ispos" #.(swig-lispify "gsl_matrix_float_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_ispos" 'function))

(cffi:defcfun ("gsl_matrix_float_isneg" #.(swig-lispify "gsl_matrix_float_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_isneg" 'function))

(cffi:defcfun ("gsl_matrix_float_isnonneg" #.(swig-lispify "gsl_matrix_float_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_float_add" #.(swig-lispify "gsl_matrix_float_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_add" 'function))

(cffi:defcfun ("gsl_matrix_float_sub" #.(swig-lispify "gsl_matrix_float_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_sub" 'function))

(cffi:defcfun ("gsl_matrix_float_mul_elements" #.(swig-lispify "gsl_matrix_float_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_float_div_elements" #.(swig-lispify "gsl_matrix_float_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_float_scale" #.(swig-lispify "gsl_matrix_float_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_float_scale" 'function))

(cffi:defcfun ("gsl_matrix_float_add_constant" #.(swig-lispify "gsl_matrix_float_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_float_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_float_add_diagonal" #.(swig-lispify "gsl_matrix_float_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_float_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_float_get_row" #.(swig-lispify "gsl_matrix_float_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_get_row" 'function))

(cffi:defcfun ("gsl_matrix_float_get_col" #.(swig-lispify "gsl_matrix_float_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_get_col" 'function))

(cffi:defcfun ("gsl_matrix_float_set_row" #.(swig-lispify "gsl_matrix_float_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_set_row" 'function))

(cffi:defcfun ("gsl_matrix_float_set_col" #.(swig-lispify "gsl_matrix_float_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_set_col" 'function))

(cffi:defcfun ("gsl_matrix_float_get" #.(swig-lispify "gsl_matrix_float_get" 'function)) :float
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_get" 'function))

(cffi:defcfun ("gsl_matrix_float_set" #.(swig-lispify "gsl_matrix_float_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :float))

(cl:export '#.(swig-lispify "gsl_matrix_float_set" 'function))

(cffi:defcfun ("gsl_matrix_float_ptr" #.(swig-lispify "gsl_matrix_float_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_ptr" 'function))

(cffi:defcfun ("gsl_matrix_float_const_ptr" #.(swig-lispify "gsl_matrix_float_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_float_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_int" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_int" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_int_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_int" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_int_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_int_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_int" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_int_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_int_alloc" #.(swig-lispify "gsl_matrix_int_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_alloc" 'function))

(cffi:defcfun ("gsl_matrix_int_calloc" #.(swig-lispify "gsl_matrix_int_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_calloc" 'function))

(cffi:defcfun ("gsl_matrix_int_alloc_from_block" #.(swig-lispify "gsl_matrix_int_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_int_alloc_from_matrix" #.(swig-lispify "gsl_matrix_int_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_int_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_int_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_int_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_int_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_int_free" #.(swig-lispify "gsl_matrix_int_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_free" 'function))

(cffi:defcfun ("gsl_matrix_int_submatrix" #.(swig-lispify "gsl_matrix_int_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_int_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_int_row" #.(swig-lispify "gsl_matrix_int_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_row" 'function))

(cffi:defcfun ("gsl_matrix_int_column" #.(swig-lispify "gsl_matrix_int_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_column" 'function))

(cffi:defcfun ("gsl_matrix_int_diagonal" #.(swig-lispify "gsl_matrix_int_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_subdiagonal" #.(swig-lispify "gsl_matrix_int_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_superdiagonal" #.(swig-lispify "gsl_matrix_int_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_subrow" #.(swig-lispify "gsl_matrix_int_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_subrow" 'function))

(cffi:defcfun ("gsl_matrix_int_subcolumn" #.(swig-lispify "gsl_matrix_int_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_int_view_array" #.(swig-lispify "gsl_matrix_int_view_array" 'function)) #.(swig-lispify "_gsl_matrix_int_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_view_array" 'function))

(cffi:defcfun ("gsl_matrix_int_view_array_with_tda" #.(swig-lispify "gsl_matrix_int_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_int_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_int_view_vector" #.(swig-lispify "gsl_matrix_int_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_int_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_int_view_vector_with_tda" #.(swig-lispify "gsl_matrix_int_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_int_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_int_const_submatrix" #.(swig-lispify "gsl_matrix_int_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_int_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_int_const_row" #.(swig-lispify "gsl_matrix_int_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_row" 'function))

(cffi:defcfun ("gsl_matrix_int_const_column" #.(swig-lispify "gsl_matrix_int_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_column" 'function))

(cffi:defcfun ("gsl_matrix_int_const_diagonal" #.(swig-lispify "gsl_matrix_int_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_const_subdiagonal" #.(swig-lispify "gsl_matrix_int_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_const_superdiagonal" #.(swig-lispify "gsl_matrix_int_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_const_subrow" #.(swig-lispify "gsl_matrix_int_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_int_const_subcolumn" #.(swig-lispify "gsl_matrix_int_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_int_const_view_array" #.(swig-lispify "gsl_matrix_int_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_int_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_int_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_int_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_int_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_int_const_view_vector" #.(swig-lispify "gsl_matrix_int_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_int_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_int_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_int_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_int_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_int_set_zero" #.(swig-lispify "gsl_matrix_int_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_int_set_identity" #.(swig-lispify "gsl_matrix_int_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_int_set_all" #.(swig-lispify "gsl_matrix_int_set_all" 'function)) :void
  (m :pointer)
  (x :int))

(cl:export '#.(swig-lispify "gsl_matrix_int_set_all" 'function))

(cffi:defcfun ("gsl_matrix_int_fread" #.(swig-lispify "gsl_matrix_int_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_fread" 'function))

(cffi:defcfun ("gsl_matrix_int_fwrite" #.(swig-lispify "gsl_matrix_int_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_int_fscanf" #.(swig-lispify "gsl_matrix_int_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_int_fprintf" #.(swig-lispify "gsl_matrix_int_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_int_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_int_memcpy" #.(swig-lispify "gsl_matrix_int_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_int_swap" #.(swig-lispify "gsl_matrix_int_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_swap" 'function))

(cffi:defcfun ("gsl_matrix_int_swap_rows" #.(swig-lispify "gsl_matrix_int_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_int_swap_columns" #.(swig-lispify "gsl_matrix_int_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_int_swap_rowcol" #.(swig-lispify "gsl_matrix_int_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_int_transpose" #.(swig-lispify "gsl_matrix_int_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_transpose" 'function))

(cffi:defcfun ("gsl_matrix_int_transpose_memcpy" #.(swig-lispify "gsl_matrix_int_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_int_max" #.(swig-lispify "gsl_matrix_int_max" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_max" 'function))

(cffi:defcfun ("gsl_matrix_int_min" #.(swig-lispify "gsl_matrix_int_min" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_min" 'function))

(cffi:defcfun ("gsl_matrix_int_minmax" #.(swig-lispify "gsl_matrix_int_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_minmax" 'function))

(cffi:defcfun ("gsl_matrix_int_max_index" #.(swig-lispify "gsl_matrix_int_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_max_index" 'function))

(cffi:defcfun ("gsl_matrix_int_min_index" #.(swig-lispify "gsl_matrix_int_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_min_index" 'function))

(cffi:defcfun ("gsl_matrix_int_minmax_index" #.(swig-lispify "gsl_matrix_int_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_int_equal" #.(swig-lispify "gsl_matrix_int_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_equal" 'function))

(cffi:defcfun ("gsl_matrix_int_isnull" #.(swig-lispify "gsl_matrix_int_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_isnull" 'function))

(cffi:defcfun ("gsl_matrix_int_ispos" #.(swig-lispify "gsl_matrix_int_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_ispos" 'function))

(cffi:defcfun ("gsl_matrix_int_isneg" #.(swig-lispify "gsl_matrix_int_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_isneg" 'function))

(cffi:defcfun ("gsl_matrix_int_isnonneg" #.(swig-lispify "gsl_matrix_int_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_int_add" #.(swig-lispify "gsl_matrix_int_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_add" 'function))

(cffi:defcfun ("gsl_matrix_int_sub" #.(swig-lispify "gsl_matrix_int_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_sub" 'function))

(cffi:defcfun ("gsl_matrix_int_mul_elements" #.(swig-lispify "gsl_matrix_int_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_int_div_elements" #.(swig-lispify "gsl_matrix_int_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_int_scale" #.(swig-lispify "gsl_matrix_int_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_int_scale" 'function))

(cffi:defcfun ("gsl_matrix_int_add_constant" #.(swig-lispify "gsl_matrix_int_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_int_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_int_add_diagonal" #.(swig-lispify "gsl_matrix_int_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_int_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_int_get_row" #.(swig-lispify "gsl_matrix_int_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_get_row" 'function))

(cffi:defcfun ("gsl_matrix_int_get_col" #.(swig-lispify "gsl_matrix_int_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_get_col" 'function))

(cffi:defcfun ("gsl_matrix_int_set_row" #.(swig-lispify "gsl_matrix_int_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_set_row" 'function))

(cffi:defcfun ("gsl_matrix_int_set_col" #.(swig-lispify "gsl_matrix_int_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_set_col" 'function))

(cffi:defcfun ("gsl_matrix_int_get" #.(swig-lispify "gsl_matrix_int_get" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_get" 'function))

(cffi:defcfun ("gsl_matrix_int_set" #.(swig-lispify "gsl_matrix_int_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :int))

(cl:export '#.(swig-lispify "gsl_matrix_int_set" 'function))

(cffi:defcfun ("gsl_matrix_int_ptr" #.(swig-lispify "gsl_matrix_int_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_ptr" 'function))

(cffi:defcfun ("gsl_matrix_int_const_ptr" #.(swig-lispify "gsl_matrix_int_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_int_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_long" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_long" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_long_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_long" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_long_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_long_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_long" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_long_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_long_alloc" #.(swig-lispify "gsl_matrix_long_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_alloc" 'function))

(cffi:defcfun ("gsl_matrix_long_calloc" #.(swig-lispify "gsl_matrix_long_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_calloc" 'function))

(cffi:defcfun ("gsl_matrix_long_alloc_from_block" #.(swig-lispify "gsl_matrix_long_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_long_alloc_from_matrix" #.(swig-lispify "gsl_matrix_long_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_long_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_long_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_long_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_long_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_long_free" #.(swig-lispify "gsl_matrix_long_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_free" 'function))

(cffi:defcfun ("gsl_matrix_long_submatrix" #.(swig-lispify "gsl_matrix_long_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_long_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_long_row" #.(swig-lispify "gsl_matrix_long_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_row" 'function))

(cffi:defcfun ("gsl_matrix_long_column" #.(swig-lispify "gsl_matrix_long_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_column" 'function))

(cffi:defcfun ("gsl_matrix_long_diagonal" #.(swig-lispify "gsl_matrix_long_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_subdiagonal" #.(swig-lispify "gsl_matrix_long_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_superdiagonal" #.(swig-lispify "gsl_matrix_long_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_subrow" #.(swig-lispify "gsl_matrix_long_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_subrow" 'function))

(cffi:defcfun ("gsl_matrix_long_subcolumn" #.(swig-lispify "gsl_matrix_long_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_long_view_array" #.(swig-lispify "gsl_matrix_long_view_array" 'function)) #.(swig-lispify "_gsl_matrix_long_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_view_array" 'function))

(cffi:defcfun ("gsl_matrix_long_view_array_with_tda" #.(swig-lispify "gsl_matrix_long_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_view_vector" #.(swig-lispify "gsl_matrix_long_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_long_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_long_view_vector_with_tda" #.(swig-lispify "gsl_matrix_long_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_const_submatrix" #.(swig-lispify "gsl_matrix_long_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_long_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_long_const_row" #.(swig-lispify "gsl_matrix_long_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_row" 'function))

(cffi:defcfun ("gsl_matrix_long_const_column" #.(swig-lispify "gsl_matrix_long_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_column" 'function))

(cffi:defcfun ("gsl_matrix_long_const_diagonal" #.(swig-lispify "gsl_matrix_long_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_const_subdiagonal" #.(swig-lispify "gsl_matrix_long_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_const_superdiagonal" #.(swig-lispify "gsl_matrix_long_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_const_subrow" #.(swig-lispify "gsl_matrix_long_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_long_const_subcolumn" #.(swig-lispify "gsl_matrix_long_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_long_const_view_array" #.(swig-lispify "gsl_matrix_long_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_long_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_long_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_long_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_const_view_vector" #.(swig-lispify "gsl_matrix_long_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_long_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_long_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_long_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_set_zero" #.(swig-lispify "gsl_matrix_long_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_long_set_identity" #.(swig-lispify "gsl_matrix_long_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_long_set_all" #.(swig-lispify "gsl_matrix_long_set_all" 'function)) :void
  (m :pointer)
  (x :long))

(cl:export '#.(swig-lispify "gsl_matrix_long_set_all" 'function))

(cffi:defcfun ("gsl_matrix_long_fread" #.(swig-lispify "gsl_matrix_long_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_fread" 'function))

(cffi:defcfun ("gsl_matrix_long_fwrite" #.(swig-lispify "gsl_matrix_long_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_long_fscanf" #.(swig-lispify "gsl_matrix_long_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_long_fprintf" #.(swig-lispify "gsl_matrix_long_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_long_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_long_memcpy" #.(swig-lispify "gsl_matrix_long_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_long_swap" #.(swig-lispify "gsl_matrix_long_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_swap" 'function))

(cffi:defcfun ("gsl_matrix_long_swap_rows" #.(swig-lispify "gsl_matrix_long_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_long_swap_columns" #.(swig-lispify "gsl_matrix_long_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_long_swap_rowcol" #.(swig-lispify "gsl_matrix_long_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_long_transpose" #.(swig-lispify "gsl_matrix_long_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_transpose" 'function))

(cffi:defcfun ("gsl_matrix_long_transpose_memcpy" #.(swig-lispify "gsl_matrix_long_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_long_max" #.(swig-lispify "gsl_matrix_long_max" 'function)) :long
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_max" 'function))

(cffi:defcfun ("gsl_matrix_long_min" #.(swig-lispify "gsl_matrix_long_min" 'function)) :long
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_min" 'function))

(cffi:defcfun ("gsl_matrix_long_minmax" #.(swig-lispify "gsl_matrix_long_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_minmax" 'function))

(cffi:defcfun ("gsl_matrix_long_max_index" #.(swig-lispify "gsl_matrix_long_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_max_index" 'function))

(cffi:defcfun ("gsl_matrix_long_min_index" #.(swig-lispify "gsl_matrix_long_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_min_index" 'function))

(cffi:defcfun ("gsl_matrix_long_minmax_index" #.(swig-lispify "gsl_matrix_long_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_long_equal" #.(swig-lispify "gsl_matrix_long_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_equal" 'function))

(cffi:defcfun ("gsl_matrix_long_isnull" #.(swig-lispify "gsl_matrix_long_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_isnull" 'function))

(cffi:defcfun ("gsl_matrix_long_ispos" #.(swig-lispify "gsl_matrix_long_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_ispos" 'function))

(cffi:defcfun ("gsl_matrix_long_isneg" #.(swig-lispify "gsl_matrix_long_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_isneg" 'function))

(cffi:defcfun ("gsl_matrix_long_isnonneg" #.(swig-lispify "gsl_matrix_long_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_long_add" #.(swig-lispify "gsl_matrix_long_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_add" 'function))

(cffi:defcfun ("gsl_matrix_long_sub" #.(swig-lispify "gsl_matrix_long_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_sub" 'function))

(cffi:defcfun ("gsl_matrix_long_mul_elements" #.(swig-lispify "gsl_matrix_long_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_long_div_elements" #.(swig-lispify "gsl_matrix_long_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_long_scale" #.(swig-lispify "gsl_matrix_long_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_long_scale" 'function))

(cffi:defcfun ("gsl_matrix_long_add_constant" #.(swig-lispify "gsl_matrix_long_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_long_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_long_add_diagonal" #.(swig-lispify "gsl_matrix_long_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_long_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_get_row" #.(swig-lispify "gsl_matrix_long_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_get_row" 'function))

(cffi:defcfun ("gsl_matrix_long_get_col" #.(swig-lispify "gsl_matrix_long_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_get_col" 'function))

(cffi:defcfun ("gsl_matrix_long_set_row" #.(swig-lispify "gsl_matrix_long_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_set_row" 'function))

(cffi:defcfun ("gsl_matrix_long_set_col" #.(swig-lispify "gsl_matrix_long_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_set_col" 'function))

(cffi:defcfun ("gsl_matrix_long_get" #.(swig-lispify "gsl_matrix_long_get" 'function)) :long
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_get" 'function))

(cffi:defcfun ("gsl_matrix_long_set" #.(swig-lispify "gsl_matrix_long_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :long))

(cl:export '#.(swig-lispify "gsl_matrix_long_set" 'function))

(cffi:defcfun ("gsl_matrix_long_ptr" #.(swig-lispify "gsl_matrix_long_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_ptr" 'function))

(cffi:defcfun ("gsl_matrix_long_const_ptr" #.(swig-lispify "gsl_matrix_long_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_long_double" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_long_double" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_long_double_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_long_double_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_long_double_alloc" #.(swig-lispify "gsl_matrix_long_double_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_alloc" 'function))

(cffi:defcfun ("gsl_matrix_long_double_calloc" #.(swig-lispify "gsl_matrix_long_double_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_calloc" 'function))

(cffi:defcfun ("gsl_matrix_long_double_alloc_from_block" #.(swig-lispify "gsl_matrix_long_double_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_long_double_alloc_from_matrix" #.(swig-lispify "gsl_matrix_long_double_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_long_double_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_long_double_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_long_double_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_long_double_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_long_double_free" #.(swig-lispify "gsl_matrix_long_double_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_free" 'function))

(cffi:defcfun ("gsl_matrix_long_double_submatrix" #.(swig-lispify "gsl_matrix_long_double_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_long_double_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_long_double_row" #.(swig-lispify "gsl_matrix_long_double_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_row" 'function))

(cffi:defcfun ("gsl_matrix_long_double_column" #.(swig-lispify "gsl_matrix_long_double_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_column" 'function))

(cffi:defcfun ("gsl_matrix_long_double_diagonal" #.(swig-lispify "gsl_matrix_long_double_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_subdiagonal" #.(swig-lispify "gsl_matrix_long_double_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_superdiagonal" #.(swig-lispify "gsl_matrix_long_double_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_subrow" #.(swig-lispify "gsl_matrix_long_double_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_subrow" 'function))

(cffi:defcfun ("gsl_matrix_long_double_subcolumn" #.(swig-lispify "gsl_matrix_long_double_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_long_double_view_array" #.(swig-lispify "gsl_matrix_long_double_view_array" 'function)) #.(swig-lispify "_gsl_matrix_long_double_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_view_array" 'function))

(cffi:defcfun ("gsl_matrix_long_double_view_array_with_tda" #.(swig-lispify "gsl_matrix_long_double_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_double_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_double_view_vector" #.(swig-lispify "gsl_matrix_long_double_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_long_double_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_long_double_view_vector_with_tda" #.(swig-lispify "gsl_matrix_long_double_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_double_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_submatrix" #.(swig-lispify "gsl_matrix_long_double_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_row" #.(swig-lispify "gsl_matrix_long_double_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_row" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_column" #.(swig-lispify "gsl_matrix_long_double_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_column" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_diagonal" #.(swig-lispify "gsl_matrix_long_double_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_subdiagonal" #.(swig-lispify "gsl_matrix_long_double_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_superdiagonal" #.(swig-lispify "gsl_matrix_long_double_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_subrow" #.(swig-lispify "gsl_matrix_long_double_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_subcolumn" #.(swig-lispify "gsl_matrix_long_double_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_view_array" #.(swig-lispify "gsl_matrix_long_double_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_long_double_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_view_vector" #.(swig-lispify "gsl_matrix_long_double_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_long_double_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_long_double_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_long_double_set_zero" #.(swig-lispify "gsl_matrix_long_double_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_long_double_set_identity" #.(swig-lispify "gsl_matrix_long_double_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_long_double_set_all" #.(swig-lispify "gsl_matrix_long_double_set_all" 'function)) :void
  (m :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_set_all" 'function))

(cffi:defcfun ("gsl_matrix_long_double_fread" #.(swig-lispify "gsl_matrix_long_double_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_fread" 'function))

(cffi:defcfun ("gsl_matrix_long_double_fwrite" #.(swig-lispify "gsl_matrix_long_double_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_long_double_fscanf" #.(swig-lispify "gsl_matrix_long_double_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_long_double_fprintf" #.(swig-lispify "gsl_matrix_long_double_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_long_double_memcpy" #.(swig-lispify "gsl_matrix_long_double_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_long_double_swap" #.(swig-lispify "gsl_matrix_long_double_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_swap" 'function))

(cffi:defcfun ("gsl_matrix_long_double_swap_rows" #.(swig-lispify "gsl_matrix_long_double_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_long_double_swap_columns" #.(swig-lispify "gsl_matrix_long_double_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_long_double_swap_rowcol" #.(swig-lispify "gsl_matrix_long_double_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_long_double_transpose" #.(swig-lispify "gsl_matrix_long_double_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_transpose" 'function))

(cffi:defcfun ("gsl_matrix_long_double_transpose_memcpy" #.(swig-lispify "gsl_matrix_long_double_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_long_double_max" #.(swig-lispify "gsl_matrix_long_double_max" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_max" 'function))

(cffi:defcfun ("gsl_matrix_long_double_min" #.(swig-lispify "gsl_matrix_long_double_min" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_min" 'function))

(cffi:defcfun ("gsl_matrix_long_double_minmax" #.(swig-lispify "gsl_matrix_long_double_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_minmax" 'function))

(cffi:defcfun ("gsl_matrix_long_double_max_index" #.(swig-lispify "gsl_matrix_long_double_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_max_index" 'function))

(cffi:defcfun ("gsl_matrix_long_double_min_index" #.(swig-lispify "gsl_matrix_long_double_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_min_index" 'function))

(cffi:defcfun ("gsl_matrix_long_double_minmax_index" #.(swig-lispify "gsl_matrix_long_double_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_long_double_equal" #.(swig-lispify "gsl_matrix_long_double_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_equal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_isnull" #.(swig-lispify "gsl_matrix_long_double_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_isnull" 'function))

(cffi:defcfun ("gsl_matrix_long_double_ispos" #.(swig-lispify "gsl_matrix_long_double_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_ispos" 'function))

(cffi:defcfun ("gsl_matrix_long_double_isneg" #.(swig-lispify "gsl_matrix_long_double_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_isneg" 'function))

(cffi:defcfun ("gsl_matrix_long_double_isnonneg" #.(swig-lispify "gsl_matrix_long_double_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_long_double_add" #.(swig-lispify "gsl_matrix_long_double_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_add" 'function))

(cffi:defcfun ("gsl_matrix_long_double_sub" #.(swig-lispify "gsl_matrix_long_double_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_sub" 'function))

(cffi:defcfun ("gsl_matrix_long_double_mul_elements" #.(swig-lispify "gsl_matrix_long_double_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_long_double_div_elements" #.(swig-lispify "gsl_matrix_long_double_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_long_double_scale" #.(swig-lispify "gsl_matrix_long_double_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_scale" 'function))

(cffi:defcfun ("gsl_matrix_long_double_add_constant" #.(swig-lispify "gsl_matrix_long_double_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_long_double_add_diagonal" #.(swig-lispify "gsl_matrix_long_double_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_long_double_get_row" #.(swig-lispify "gsl_matrix_long_double_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_get_row" 'function))

(cffi:defcfun ("gsl_matrix_long_double_get_col" #.(swig-lispify "gsl_matrix_long_double_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_get_col" 'function))

(cffi:defcfun ("gsl_matrix_long_double_set_row" #.(swig-lispify "gsl_matrix_long_double_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_set_row" 'function))

(cffi:defcfun ("gsl_matrix_long_double_set_col" #.(swig-lispify "gsl_matrix_long_double_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_set_col" 'function))

(cffi:defcfun ("gsl_matrix_long_double_get" #.(swig-lispify "gsl_matrix_long_double_get" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_get" 'function))

(cffi:defcfun ("gsl_matrix_long_double_set" #.(swig-lispify "gsl_matrix_long_double_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_set" 'function))

(cffi:defcfun ("gsl_matrix_long_double_ptr" #.(swig-lispify "gsl_matrix_long_double_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_ptr" 'function))

(cffi:defcfun ("gsl_matrix_long_double_const_ptr" #.(swig-lispify "gsl_matrix_long_double_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_long_double_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_short" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_short" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_short_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_short" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_short_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_short_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_short" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_short_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_short_alloc" #.(swig-lispify "gsl_matrix_short_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_alloc" 'function))

(cffi:defcfun ("gsl_matrix_short_calloc" #.(swig-lispify "gsl_matrix_short_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_calloc" 'function))

(cffi:defcfun ("gsl_matrix_short_alloc_from_block" #.(swig-lispify "gsl_matrix_short_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_short_alloc_from_matrix" #.(swig-lispify "gsl_matrix_short_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_short_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_short_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_short_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_short_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_short_free" #.(swig-lispify "gsl_matrix_short_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_free" 'function))

(cffi:defcfun ("gsl_matrix_short_submatrix" #.(swig-lispify "gsl_matrix_short_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_short_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_short_row" #.(swig-lispify "gsl_matrix_short_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_row" 'function))

(cffi:defcfun ("gsl_matrix_short_column" #.(swig-lispify "gsl_matrix_short_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_column" 'function))

(cffi:defcfun ("gsl_matrix_short_diagonal" #.(swig-lispify "gsl_matrix_short_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_subdiagonal" #.(swig-lispify "gsl_matrix_short_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_superdiagonal" #.(swig-lispify "gsl_matrix_short_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_subrow" #.(swig-lispify "gsl_matrix_short_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_subrow" 'function))

(cffi:defcfun ("gsl_matrix_short_subcolumn" #.(swig-lispify "gsl_matrix_short_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_short_view_array" #.(swig-lispify "gsl_matrix_short_view_array" 'function)) #.(swig-lispify "_gsl_matrix_short_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_view_array" 'function))

(cffi:defcfun ("gsl_matrix_short_view_array_with_tda" #.(swig-lispify "gsl_matrix_short_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_short_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_short_view_vector" #.(swig-lispify "gsl_matrix_short_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_short_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_short_view_vector_with_tda" #.(swig-lispify "gsl_matrix_short_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_short_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_short_const_submatrix" #.(swig-lispify "gsl_matrix_short_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_short_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_short_const_row" #.(swig-lispify "gsl_matrix_short_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_row" 'function))

(cffi:defcfun ("gsl_matrix_short_const_column" #.(swig-lispify "gsl_matrix_short_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_column" 'function))

(cffi:defcfun ("gsl_matrix_short_const_diagonal" #.(swig-lispify "gsl_matrix_short_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_const_subdiagonal" #.(swig-lispify "gsl_matrix_short_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_const_superdiagonal" #.(swig-lispify "gsl_matrix_short_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_const_subrow" #.(swig-lispify "gsl_matrix_short_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_short_const_subcolumn" #.(swig-lispify "gsl_matrix_short_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_short_const_view_array" #.(swig-lispify "gsl_matrix_short_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_short_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_short_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_short_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_short_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_short_const_view_vector" #.(swig-lispify "gsl_matrix_short_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_short_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_short_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_short_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_short_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_short_set_zero" #.(swig-lispify "gsl_matrix_short_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_short_set_identity" #.(swig-lispify "gsl_matrix_short_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_short_set_all" #.(swig-lispify "gsl_matrix_short_set_all" 'function)) :void
  (m :pointer)
  (x :short))

(cl:export '#.(swig-lispify "gsl_matrix_short_set_all" 'function))

(cffi:defcfun ("gsl_matrix_short_fread" #.(swig-lispify "gsl_matrix_short_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_fread" 'function))

(cffi:defcfun ("gsl_matrix_short_fwrite" #.(swig-lispify "gsl_matrix_short_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_short_fscanf" #.(swig-lispify "gsl_matrix_short_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_short_fprintf" #.(swig-lispify "gsl_matrix_short_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_short_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_short_memcpy" #.(swig-lispify "gsl_matrix_short_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_short_swap" #.(swig-lispify "gsl_matrix_short_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_swap" 'function))

(cffi:defcfun ("gsl_matrix_short_swap_rows" #.(swig-lispify "gsl_matrix_short_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_short_swap_columns" #.(swig-lispify "gsl_matrix_short_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_short_swap_rowcol" #.(swig-lispify "gsl_matrix_short_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_short_transpose" #.(swig-lispify "gsl_matrix_short_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_transpose" 'function))

(cffi:defcfun ("gsl_matrix_short_transpose_memcpy" #.(swig-lispify "gsl_matrix_short_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_short_max" #.(swig-lispify "gsl_matrix_short_max" 'function)) :short
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_max" 'function))

(cffi:defcfun ("gsl_matrix_short_min" #.(swig-lispify "gsl_matrix_short_min" 'function)) :short
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_min" 'function))

(cffi:defcfun ("gsl_matrix_short_minmax" #.(swig-lispify "gsl_matrix_short_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_minmax" 'function))

(cffi:defcfun ("gsl_matrix_short_max_index" #.(swig-lispify "gsl_matrix_short_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_max_index" 'function))

(cffi:defcfun ("gsl_matrix_short_min_index" #.(swig-lispify "gsl_matrix_short_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_min_index" 'function))

(cffi:defcfun ("gsl_matrix_short_minmax_index" #.(swig-lispify "gsl_matrix_short_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_short_equal" #.(swig-lispify "gsl_matrix_short_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_equal" 'function))

(cffi:defcfun ("gsl_matrix_short_isnull" #.(swig-lispify "gsl_matrix_short_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_isnull" 'function))

(cffi:defcfun ("gsl_matrix_short_ispos" #.(swig-lispify "gsl_matrix_short_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_ispos" 'function))

(cffi:defcfun ("gsl_matrix_short_isneg" #.(swig-lispify "gsl_matrix_short_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_isneg" 'function))

(cffi:defcfun ("gsl_matrix_short_isnonneg" #.(swig-lispify "gsl_matrix_short_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_short_add" #.(swig-lispify "gsl_matrix_short_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_add" 'function))

(cffi:defcfun ("gsl_matrix_short_sub" #.(swig-lispify "gsl_matrix_short_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_sub" 'function))

(cffi:defcfun ("gsl_matrix_short_mul_elements" #.(swig-lispify "gsl_matrix_short_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_short_div_elements" #.(swig-lispify "gsl_matrix_short_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_short_scale" #.(swig-lispify "gsl_matrix_short_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_short_scale" 'function))

(cffi:defcfun ("gsl_matrix_short_add_constant" #.(swig-lispify "gsl_matrix_short_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_short_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_short_add_diagonal" #.(swig-lispify "gsl_matrix_short_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_short_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_short_get_row" #.(swig-lispify "gsl_matrix_short_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_get_row" 'function))

(cffi:defcfun ("gsl_matrix_short_get_col" #.(swig-lispify "gsl_matrix_short_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_get_col" 'function))

(cffi:defcfun ("gsl_matrix_short_set_row" #.(swig-lispify "gsl_matrix_short_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_set_row" 'function))

(cffi:defcfun ("gsl_matrix_short_set_col" #.(swig-lispify "gsl_matrix_short_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_set_col" 'function))

(cffi:defcfun ("gsl_matrix_short_get" #.(swig-lispify "gsl_matrix_short_get" 'function)) :short
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_get" 'function))

(cffi:defcfun ("gsl_matrix_short_set" #.(swig-lispify "gsl_matrix_short_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :short))

(cl:export '#.(swig-lispify "gsl_matrix_short_set" 'function))

(cffi:defcfun ("gsl_matrix_short_ptr" #.(swig-lispify "gsl_matrix_short_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_ptr" 'function))

(cffi:defcfun ("gsl_matrix_short_const_ptr" #.(swig-lispify "gsl_matrix_short_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_short_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_uchar" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_uchar" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_uchar_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_uchar" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_uchar_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_uchar" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_uchar_alloc" #.(swig-lispify "gsl_matrix_uchar_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_alloc" 'function))

(cffi:defcfun ("gsl_matrix_uchar_calloc" #.(swig-lispify "gsl_matrix_uchar_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_calloc" 'function))

(cffi:defcfun ("gsl_matrix_uchar_alloc_from_block" #.(swig-lispify "gsl_matrix_uchar_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_uchar_alloc_from_matrix" #.(swig-lispify "gsl_matrix_uchar_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_uchar_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_uchar_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_uchar_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_uchar_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_uchar_free" #.(swig-lispify "gsl_matrix_uchar_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_free" 'function))

(cffi:defcfun ("gsl_matrix_uchar_submatrix" #.(swig-lispify "gsl_matrix_uchar_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_uchar_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_uchar_row" #.(swig-lispify "gsl_matrix_uchar_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_row" 'function))

(cffi:defcfun ("gsl_matrix_uchar_column" #.(swig-lispify "gsl_matrix_uchar_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_column" 'function))

(cffi:defcfun ("gsl_matrix_uchar_diagonal" #.(swig-lispify "gsl_matrix_uchar_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_subdiagonal" #.(swig-lispify "gsl_matrix_uchar_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_superdiagonal" #.(swig-lispify "gsl_matrix_uchar_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_subrow" #.(swig-lispify "gsl_matrix_uchar_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_subrow" 'function))

(cffi:defcfun ("gsl_matrix_uchar_subcolumn" #.(swig-lispify "gsl_matrix_uchar_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_uchar_view_array" #.(swig-lispify "gsl_matrix_uchar_view_array" 'function)) #.(swig-lispify "_gsl_matrix_uchar_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_view_array" 'function))

(cffi:defcfun ("gsl_matrix_uchar_view_array_with_tda" #.(swig-lispify "gsl_matrix_uchar_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uchar_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uchar_view_vector" #.(swig-lispify "gsl_matrix_uchar_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_uchar_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_uchar_view_vector_with_tda" #.(swig-lispify "gsl_matrix_uchar_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uchar_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_submatrix" #.(swig-lispify "gsl_matrix_uchar_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_row" #.(swig-lispify "gsl_matrix_uchar_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_row" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_column" #.(swig-lispify "gsl_matrix_uchar_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_column" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_diagonal" #.(swig-lispify "gsl_matrix_uchar_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_subdiagonal" #.(swig-lispify "gsl_matrix_uchar_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_superdiagonal" #.(swig-lispify "gsl_matrix_uchar_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_subrow" #.(swig-lispify "gsl_matrix_uchar_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_subcolumn" #.(swig-lispify "gsl_matrix_uchar_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_view_array" #.(swig-lispify "gsl_matrix_uchar_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_uchar_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_view_vector" #.(swig-lispify "gsl_matrix_uchar_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_uchar_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uchar_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uchar_set_zero" #.(swig-lispify "gsl_matrix_uchar_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_uchar_set_identity" #.(swig-lispify "gsl_matrix_uchar_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_uchar_set_all" #.(swig-lispify "gsl_matrix_uchar_set_all" 'function)) :void
  (m :pointer)
  (x :unsigned-char))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_set_all" 'function))

(cffi:defcfun ("gsl_matrix_uchar_fread" #.(swig-lispify "gsl_matrix_uchar_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_fread" 'function))

(cffi:defcfun ("gsl_matrix_uchar_fwrite" #.(swig-lispify "gsl_matrix_uchar_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_uchar_fscanf" #.(swig-lispify "gsl_matrix_uchar_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_uchar_fprintf" #.(swig-lispify "gsl_matrix_uchar_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_uchar_memcpy" #.(swig-lispify "gsl_matrix_uchar_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_uchar_swap" #.(swig-lispify "gsl_matrix_uchar_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_swap" 'function))

(cffi:defcfun ("gsl_matrix_uchar_swap_rows" #.(swig-lispify "gsl_matrix_uchar_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_uchar_swap_columns" #.(swig-lispify "gsl_matrix_uchar_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_uchar_swap_rowcol" #.(swig-lispify "gsl_matrix_uchar_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_uchar_transpose" #.(swig-lispify "gsl_matrix_uchar_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_transpose" 'function))

(cffi:defcfun ("gsl_matrix_uchar_transpose_memcpy" #.(swig-lispify "gsl_matrix_uchar_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_uchar_max" #.(swig-lispify "gsl_matrix_uchar_max" 'function)) :unsigned-char
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_max" 'function))

(cffi:defcfun ("gsl_matrix_uchar_min" #.(swig-lispify "gsl_matrix_uchar_min" 'function)) :unsigned-char
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_min" 'function))

(cffi:defcfun ("gsl_matrix_uchar_minmax" #.(swig-lispify "gsl_matrix_uchar_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_minmax" 'function))

(cffi:defcfun ("gsl_matrix_uchar_max_index" #.(swig-lispify "gsl_matrix_uchar_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_max_index" 'function))

(cffi:defcfun ("gsl_matrix_uchar_min_index" #.(swig-lispify "gsl_matrix_uchar_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_min_index" 'function))

(cffi:defcfun ("gsl_matrix_uchar_minmax_index" #.(swig-lispify "gsl_matrix_uchar_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_uchar_equal" #.(swig-lispify "gsl_matrix_uchar_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_equal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_isnull" #.(swig-lispify "gsl_matrix_uchar_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_isnull" 'function))

(cffi:defcfun ("gsl_matrix_uchar_ispos" #.(swig-lispify "gsl_matrix_uchar_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_ispos" 'function))

(cffi:defcfun ("gsl_matrix_uchar_isneg" #.(swig-lispify "gsl_matrix_uchar_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_isneg" 'function))

(cffi:defcfun ("gsl_matrix_uchar_isnonneg" #.(swig-lispify "gsl_matrix_uchar_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_uchar_add" #.(swig-lispify "gsl_matrix_uchar_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_add" 'function))

(cffi:defcfun ("gsl_matrix_uchar_sub" #.(swig-lispify "gsl_matrix_uchar_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_sub" 'function))

(cffi:defcfun ("gsl_matrix_uchar_mul_elements" #.(swig-lispify "gsl_matrix_uchar_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_uchar_div_elements" #.(swig-lispify "gsl_matrix_uchar_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_uchar_scale" #.(swig-lispify "gsl_matrix_uchar_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_scale" 'function))

(cffi:defcfun ("gsl_matrix_uchar_add_constant" #.(swig-lispify "gsl_matrix_uchar_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_uchar_add_diagonal" #.(swig-lispify "gsl_matrix_uchar_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_uchar_get_row" #.(swig-lispify "gsl_matrix_uchar_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_get_row" 'function))

(cffi:defcfun ("gsl_matrix_uchar_get_col" #.(swig-lispify "gsl_matrix_uchar_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_get_col" 'function))

(cffi:defcfun ("gsl_matrix_uchar_set_row" #.(swig-lispify "gsl_matrix_uchar_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_set_row" 'function))

(cffi:defcfun ("gsl_matrix_uchar_set_col" #.(swig-lispify "gsl_matrix_uchar_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_set_col" 'function))

(cffi:defcfun ("gsl_matrix_uchar_get" #.(swig-lispify "gsl_matrix_uchar_get" 'function)) :unsigned-char
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_get" 'function))

(cffi:defcfun ("gsl_matrix_uchar_set" #.(swig-lispify "gsl_matrix_uchar_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :unsigned-char))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_set" 'function))

(cffi:defcfun ("gsl_matrix_uchar_ptr" #.(swig-lispify "gsl_matrix_uchar_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_ptr" 'function))

(cffi:defcfun ("gsl_matrix_uchar_const_ptr" #.(swig-lispify "gsl_matrix_uchar_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uchar_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_uint" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_uint" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_uint_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_uint" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_uint_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_uint_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_uint" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_uint_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_uint_alloc" #.(swig-lispify "gsl_matrix_uint_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_alloc" 'function))

(cffi:defcfun ("gsl_matrix_uint_calloc" #.(swig-lispify "gsl_matrix_uint_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_calloc" 'function))

(cffi:defcfun ("gsl_matrix_uint_alloc_from_block" #.(swig-lispify "gsl_matrix_uint_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_uint_alloc_from_matrix" #.(swig-lispify "gsl_matrix_uint_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_uint_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_uint_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_uint_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_uint_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_uint_free" #.(swig-lispify "gsl_matrix_uint_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_free" 'function))

(cffi:defcfun ("gsl_matrix_uint_submatrix" #.(swig-lispify "gsl_matrix_uint_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_uint_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_uint_row" #.(swig-lispify "gsl_matrix_uint_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_row" 'function))

(cffi:defcfun ("gsl_matrix_uint_column" #.(swig-lispify "gsl_matrix_uint_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_column" 'function))

(cffi:defcfun ("gsl_matrix_uint_diagonal" #.(swig-lispify "gsl_matrix_uint_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_subdiagonal" #.(swig-lispify "gsl_matrix_uint_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_superdiagonal" #.(swig-lispify "gsl_matrix_uint_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_subrow" #.(swig-lispify "gsl_matrix_uint_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_subrow" 'function))

(cffi:defcfun ("gsl_matrix_uint_subcolumn" #.(swig-lispify "gsl_matrix_uint_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_uint_view_array" #.(swig-lispify "gsl_matrix_uint_view_array" 'function)) #.(swig-lispify "_gsl_matrix_uint_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_view_array" 'function))

(cffi:defcfun ("gsl_matrix_uint_view_array_with_tda" #.(swig-lispify "gsl_matrix_uint_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uint_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uint_view_vector" #.(swig-lispify "gsl_matrix_uint_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_uint_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_uint_view_vector_with_tda" #.(swig-lispify "gsl_matrix_uint_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uint_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_submatrix" #.(swig-lispify "gsl_matrix_uint_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_uint_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_row" #.(swig-lispify "gsl_matrix_uint_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_row" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_column" #.(swig-lispify "gsl_matrix_uint_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_column" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_diagonal" #.(swig-lispify "gsl_matrix_uint_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_subdiagonal" #.(swig-lispify "gsl_matrix_uint_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_superdiagonal" #.(swig-lispify "gsl_matrix_uint_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_subrow" #.(swig-lispify "gsl_matrix_uint_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_subcolumn" #.(swig-lispify "gsl_matrix_uint_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_view_array" #.(swig-lispify "gsl_matrix_uint_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_uint_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_uint_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uint_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_view_vector" #.(swig-lispify "gsl_matrix_uint_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_uint_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_uint_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_uint_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_uint_set_zero" #.(swig-lispify "gsl_matrix_uint_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_uint_set_identity" #.(swig-lispify "gsl_matrix_uint_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_uint_set_all" #.(swig-lispify "gsl_matrix_uint_set_all" 'function)) :void
  (m :pointer)
  (x :unsigned-int))

(cl:export '#.(swig-lispify "gsl_matrix_uint_set_all" 'function))

(cffi:defcfun ("gsl_matrix_uint_fread" #.(swig-lispify "gsl_matrix_uint_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_fread" 'function))

(cffi:defcfun ("gsl_matrix_uint_fwrite" #.(swig-lispify "gsl_matrix_uint_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_uint_fscanf" #.(swig-lispify "gsl_matrix_uint_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_uint_fprintf" #.(swig-lispify "gsl_matrix_uint_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_uint_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_uint_memcpy" #.(swig-lispify "gsl_matrix_uint_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_uint_swap" #.(swig-lispify "gsl_matrix_uint_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_swap" 'function))

(cffi:defcfun ("gsl_matrix_uint_swap_rows" #.(swig-lispify "gsl_matrix_uint_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_uint_swap_columns" #.(swig-lispify "gsl_matrix_uint_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_uint_swap_rowcol" #.(swig-lispify "gsl_matrix_uint_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_uint_transpose" #.(swig-lispify "gsl_matrix_uint_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_transpose" 'function))

(cffi:defcfun ("gsl_matrix_uint_transpose_memcpy" #.(swig-lispify "gsl_matrix_uint_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_uint_max" #.(swig-lispify "gsl_matrix_uint_max" 'function)) :unsigned-int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_max" 'function))

(cffi:defcfun ("gsl_matrix_uint_min" #.(swig-lispify "gsl_matrix_uint_min" 'function)) :unsigned-int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_min" 'function))

(cffi:defcfun ("gsl_matrix_uint_minmax" #.(swig-lispify "gsl_matrix_uint_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_minmax" 'function))

(cffi:defcfun ("gsl_matrix_uint_max_index" #.(swig-lispify "gsl_matrix_uint_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_max_index" 'function))

(cffi:defcfun ("gsl_matrix_uint_min_index" #.(swig-lispify "gsl_matrix_uint_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_min_index" 'function))

(cffi:defcfun ("gsl_matrix_uint_minmax_index" #.(swig-lispify "gsl_matrix_uint_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_uint_equal" #.(swig-lispify "gsl_matrix_uint_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_equal" 'function))

(cffi:defcfun ("gsl_matrix_uint_isnull" #.(swig-lispify "gsl_matrix_uint_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_isnull" 'function))

(cffi:defcfun ("gsl_matrix_uint_ispos" #.(swig-lispify "gsl_matrix_uint_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_ispos" 'function))

(cffi:defcfun ("gsl_matrix_uint_isneg" #.(swig-lispify "gsl_matrix_uint_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_isneg" 'function))

(cffi:defcfun ("gsl_matrix_uint_isnonneg" #.(swig-lispify "gsl_matrix_uint_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_uint_add" #.(swig-lispify "gsl_matrix_uint_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_add" 'function))

(cffi:defcfun ("gsl_matrix_uint_sub" #.(swig-lispify "gsl_matrix_uint_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_sub" 'function))

(cffi:defcfun ("gsl_matrix_uint_mul_elements" #.(swig-lispify "gsl_matrix_uint_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_uint_div_elements" #.(swig-lispify "gsl_matrix_uint_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_uint_scale" #.(swig-lispify "gsl_matrix_uint_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_uint_scale" 'function))

(cffi:defcfun ("gsl_matrix_uint_add_constant" #.(swig-lispify "gsl_matrix_uint_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_uint_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_uint_add_diagonal" #.(swig-lispify "gsl_matrix_uint_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_uint_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_uint_get_row" #.(swig-lispify "gsl_matrix_uint_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_get_row" 'function))

(cffi:defcfun ("gsl_matrix_uint_get_col" #.(swig-lispify "gsl_matrix_uint_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_get_col" 'function))

(cffi:defcfun ("gsl_matrix_uint_set_row" #.(swig-lispify "gsl_matrix_uint_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_set_row" 'function))

(cffi:defcfun ("gsl_matrix_uint_set_col" #.(swig-lispify "gsl_matrix_uint_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_set_col" 'function))

(cffi:defcfun ("gsl_matrix_uint_get" #.(swig-lispify "gsl_matrix_uint_get" 'function)) :unsigned-int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_get" 'function))

(cffi:defcfun ("gsl_matrix_uint_set" #.(swig-lispify "gsl_matrix_uint_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :unsigned-int))

(cl:export '#.(swig-lispify "gsl_matrix_uint_set" 'function))

(cffi:defcfun ("gsl_matrix_uint_ptr" #.(swig-lispify "gsl_matrix_uint_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_ptr" 'function))

(cffi:defcfun ("gsl_matrix_uint_const_ptr" #.(swig-lispify "gsl_matrix_uint_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_uint_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_ulong" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_ulong" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_ulong_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_ulong" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_ulong_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_ulong" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_ulong_alloc" #.(swig-lispify "gsl_matrix_ulong_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_alloc" 'function))

(cffi:defcfun ("gsl_matrix_ulong_calloc" #.(swig-lispify "gsl_matrix_ulong_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_calloc" 'function))

(cffi:defcfun ("gsl_matrix_ulong_alloc_from_block" #.(swig-lispify "gsl_matrix_ulong_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_ulong_alloc_from_matrix" #.(swig-lispify "gsl_matrix_ulong_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_ulong_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_ulong_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_ulong_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_ulong_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_ulong_free" #.(swig-lispify "gsl_matrix_ulong_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_free" 'function))

(cffi:defcfun ("gsl_matrix_ulong_submatrix" #.(swig-lispify "gsl_matrix_ulong_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_ulong_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_ulong_row" #.(swig-lispify "gsl_matrix_ulong_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_row" 'function))

(cffi:defcfun ("gsl_matrix_ulong_column" #.(swig-lispify "gsl_matrix_ulong_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_column" 'function))

(cffi:defcfun ("gsl_matrix_ulong_diagonal" #.(swig-lispify "gsl_matrix_ulong_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_subdiagonal" #.(swig-lispify "gsl_matrix_ulong_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_superdiagonal" #.(swig-lispify "gsl_matrix_ulong_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_subrow" #.(swig-lispify "gsl_matrix_ulong_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_subrow" 'function))

(cffi:defcfun ("gsl_matrix_ulong_subcolumn" #.(swig-lispify "gsl_matrix_ulong_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_ulong_view_array" #.(swig-lispify "gsl_matrix_ulong_view_array" 'function)) #.(swig-lispify "_gsl_matrix_ulong_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_view_array" 'function))

(cffi:defcfun ("gsl_matrix_ulong_view_array_with_tda" #.(swig-lispify "gsl_matrix_ulong_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ulong_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ulong_view_vector" #.(swig-lispify "gsl_matrix_ulong_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_ulong_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_ulong_view_vector_with_tda" #.(swig-lispify "gsl_matrix_ulong_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ulong_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_submatrix" #.(swig-lispify "gsl_matrix_ulong_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_row" #.(swig-lispify "gsl_matrix_ulong_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_row" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_column" #.(swig-lispify "gsl_matrix_ulong_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_column" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_diagonal" #.(swig-lispify "gsl_matrix_ulong_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_subdiagonal" #.(swig-lispify "gsl_matrix_ulong_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_superdiagonal" #.(swig-lispify "gsl_matrix_ulong_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_subrow" #.(swig-lispify "gsl_matrix_ulong_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_subcolumn" #.(swig-lispify "gsl_matrix_ulong_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_view_array" #.(swig-lispify "gsl_matrix_ulong_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_ulong_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_view_vector" #.(swig-lispify "gsl_matrix_ulong_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_ulong_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ulong_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ulong_set_zero" #.(swig-lispify "gsl_matrix_ulong_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_ulong_set_identity" #.(swig-lispify "gsl_matrix_ulong_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_ulong_set_all" #.(swig-lispify "gsl_matrix_ulong_set_all" 'function)) :void
  (m :pointer)
  (x :unsigned-long))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_set_all" 'function))

(cffi:defcfun ("gsl_matrix_ulong_fread" #.(swig-lispify "gsl_matrix_ulong_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_fread" 'function))

(cffi:defcfun ("gsl_matrix_ulong_fwrite" #.(swig-lispify "gsl_matrix_ulong_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_ulong_fscanf" #.(swig-lispify "gsl_matrix_ulong_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_ulong_fprintf" #.(swig-lispify "gsl_matrix_ulong_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_ulong_memcpy" #.(swig-lispify "gsl_matrix_ulong_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_ulong_swap" #.(swig-lispify "gsl_matrix_ulong_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_swap" 'function))

(cffi:defcfun ("gsl_matrix_ulong_swap_rows" #.(swig-lispify "gsl_matrix_ulong_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_ulong_swap_columns" #.(swig-lispify "gsl_matrix_ulong_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_ulong_swap_rowcol" #.(swig-lispify "gsl_matrix_ulong_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_ulong_transpose" #.(swig-lispify "gsl_matrix_ulong_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_transpose" 'function))

(cffi:defcfun ("gsl_matrix_ulong_transpose_memcpy" #.(swig-lispify "gsl_matrix_ulong_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_ulong_max" #.(swig-lispify "gsl_matrix_ulong_max" 'function)) :unsigned-long
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_max" 'function))

(cffi:defcfun ("gsl_matrix_ulong_min" #.(swig-lispify "gsl_matrix_ulong_min" 'function)) :unsigned-long
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_min" 'function))

(cffi:defcfun ("gsl_matrix_ulong_minmax" #.(swig-lispify "gsl_matrix_ulong_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_minmax" 'function))

(cffi:defcfun ("gsl_matrix_ulong_max_index" #.(swig-lispify "gsl_matrix_ulong_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_max_index" 'function))

(cffi:defcfun ("gsl_matrix_ulong_min_index" #.(swig-lispify "gsl_matrix_ulong_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_min_index" 'function))

(cffi:defcfun ("gsl_matrix_ulong_minmax_index" #.(swig-lispify "gsl_matrix_ulong_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_ulong_equal" #.(swig-lispify "gsl_matrix_ulong_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_equal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_isnull" #.(swig-lispify "gsl_matrix_ulong_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_isnull" 'function))

(cffi:defcfun ("gsl_matrix_ulong_ispos" #.(swig-lispify "gsl_matrix_ulong_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_ispos" 'function))

(cffi:defcfun ("gsl_matrix_ulong_isneg" #.(swig-lispify "gsl_matrix_ulong_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_isneg" 'function))

(cffi:defcfun ("gsl_matrix_ulong_isnonneg" #.(swig-lispify "gsl_matrix_ulong_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_ulong_add" #.(swig-lispify "gsl_matrix_ulong_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_add" 'function))

(cffi:defcfun ("gsl_matrix_ulong_sub" #.(swig-lispify "gsl_matrix_ulong_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_sub" 'function))

(cffi:defcfun ("gsl_matrix_ulong_mul_elements" #.(swig-lispify "gsl_matrix_ulong_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_ulong_div_elements" #.(swig-lispify "gsl_matrix_ulong_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_ulong_scale" #.(swig-lispify "gsl_matrix_ulong_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_scale" 'function))

(cffi:defcfun ("gsl_matrix_ulong_add_constant" #.(swig-lispify "gsl_matrix_ulong_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_ulong_add_diagonal" #.(swig-lispify "gsl_matrix_ulong_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_ulong_get_row" #.(swig-lispify "gsl_matrix_ulong_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_get_row" 'function))

(cffi:defcfun ("gsl_matrix_ulong_get_col" #.(swig-lispify "gsl_matrix_ulong_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_get_col" 'function))

(cffi:defcfun ("gsl_matrix_ulong_set_row" #.(swig-lispify "gsl_matrix_ulong_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_set_row" 'function))

(cffi:defcfun ("gsl_matrix_ulong_set_col" #.(swig-lispify "gsl_matrix_ulong_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_set_col" 'function))

(cffi:defcfun ("gsl_matrix_ulong_get" #.(swig-lispify "gsl_matrix_ulong_get" 'function)) :unsigned-long
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_get" 'function))

(cffi:defcfun ("gsl_matrix_ulong_set" #.(swig-lispify "gsl_matrix_ulong_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :unsigned-long))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_set" 'function))

(cffi:defcfun ("gsl_matrix_ulong_ptr" #.(swig-lispify "gsl_matrix_ulong_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_ptr" 'function))

(cffi:defcfun ("gsl_matrix_ulong_const_ptr" #.(swig-lispify "gsl_matrix_ulong_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ulong_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_matrix_ushort" 'classname)
	(#.(swig-lispify "size1" 'slotname) :pointer)
	(#.(swig-lispify "size2" 'slotname) :pointer)
	(#.(swig-lispify "tda" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_matrix_ushort" 'classname))

(cl:export '#.(swig-lispify "size1" 'slotname))

(cl:export '#.(swig-lispify "size2" 'slotname))

(cl:export '#.(swig-lispify "tda" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_ushort_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_ushort" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_ushort_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname)
	(#.(swig-lispify "matrix" 'slotname) #.(swig-lispify "gsl_matrix_ushort" 'classname)))

(cl:export '#.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_matrix_ushort_alloc" #.(swig-lispify "gsl_matrix_ushort_alloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_alloc" 'function))

(cffi:defcfun ("gsl_matrix_ushort_calloc" #.(swig-lispify "gsl_matrix_ushort_calloc" 'function)) :pointer
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_calloc" 'function))

(cffi:defcfun ("gsl_matrix_ushort_alloc_from_block" #.(swig-lispify "gsl_matrix_ushort_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (d2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_alloc_from_block" 'function))

(cffi:defcfun ("gsl_matrix_ushort_alloc_from_matrix" #.(swig-lispify "gsl_matrix_ushort_alloc_from_matrix" 'function)) :pointer
  (m :pointer)
  (k1 :pointer)
  (k2 :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_alloc_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_ushort_alloc_row_from_matrix" #.(swig-lispify "gsl_vector_ushort_alloc_row_from_matrix" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_alloc_row_from_matrix" 'function))

(cffi:defcfun ("gsl_vector_ushort_alloc_col_from_matrix" #.(swig-lispify "gsl_vector_ushort_alloc_col_from_matrix" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_alloc_col_from_matrix" 'function))

(cffi:defcfun ("gsl_matrix_ushort_free" #.(swig-lispify "gsl_matrix_ushort_free" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_free" 'function))

(cffi:defcfun ("gsl_matrix_ushort_submatrix" #.(swig-lispify "gsl_matrix_ushort_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_ushort_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_ushort_row" #.(swig-lispify "gsl_matrix_ushort_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_row" 'function))

(cffi:defcfun ("gsl_matrix_ushort_column" #.(swig-lispify "gsl_matrix_ushort_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_column" 'function))

(cffi:defcfun ("gsl_matrix_ushort_diagonal" #.(swig-lispify "gsl_matrix_ushort_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_subdiagonal" #.(swig-lispify "gsl_matrix_ushort_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_superdiagonal" #.(swig-lispify "gsl_matrix_ushort_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_subrow" #.(swig-lispify "gsl_matrix_ushort_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_subrow" 'function))

(cffi:defcfun ("gsl_matrix_ushort_subcolumn" #.(swig-lispify "gsl_matrix_ushort_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_ushort_view_array" #.(swig-lispify "gsl_matrix_ushort_view_array" 'function)) #.(swig-lispify "_gsl_matrix_ushort_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_view_array" 'function))

(cffi:defcfun ("gsl_matrix_ushort_view_array_with_tda" #.(swig-lispify "gsl_matrix_ushort_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ushort_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ushort_view_vector" #.(swig-lispify "gsl_matrix_ushort_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_ushort_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_ushort_view_vector_with_tda" #.(swig-lispify "gsl_matrix_ushort_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ushort_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_submatrix" #.(swig-lispify "gsl_matrix_ushort_const_submatrix" 'function)) #.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname)
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_submatrix" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_row" #.(swig-lispify "gsl_matrix_ushort_const_row" 'function)) :pointer
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_row" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_column" #.(swig-lispify "gsl_matrix_ushort_const_column" 'function)) :pointer
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_column" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_diagonal" #.(swig-lispify "gsl_matrix_ushort_const_diagonal" 'function)) :pointer
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_subdiagonal" #.(swig-lispify "gsl_matrix_ushort_const_subdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_subdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_superdiagonal" #.(swig-lispify "gsl_matrix_ushort_const_superdiagonal" 'function)) :pointer
  (m :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_superdiagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_subrow" #.(swig-lispify "gsl_matrix_ushort_const_subrow" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_subrow" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_subcolumn" #.(swig-lispify "gsl_matrix_ushort_const_subcolumn" 'function)) :pointer
  (m :pointer)
  (j :pointer)
  (offset :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_subcolumn" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_view_array" #.(swig-lispify "gsl_matrix_ushort_const_view_array" 'function)) #.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_view_array" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_view_array_with_tda" #.(swig-lispify "gsl_matrix_ushort_const_view_array_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname)
  (base :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_view_array_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_view_vector" #.(swig-lispify "gsl_matrix_ushort_const_view_vector" 'function)) #.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_view_vector" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_view_vector_with_tda" #.(swig-lispify "gsl_matrix_ushort_const_view_vector_with_tda" 'function)) #.(swig-lispify "_gsl_matrix_ushort_const_view" 'classname)
  (v :pointer)
  (n1 :pointer)
  (n2 :pointer)
  (tda :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_view_vector_with_tda" 'function))

(cffi:defcfun ("gsl_matrix_ushort_set_zero" #.(swig-lispify "gsl_matrix_ushort_set_zero" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_set_zero" 'function))

(cffi:defcfun ("gsl_matrix_ushort_set_identity" #.(swig-lispify "gsl_matrix_ushort_set_identity" 'function)) :void
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_set_identity" 'function))

(cffi:defcfun ("gsl_matrix_ushort_set_all" #.(swig-lispify "gsl_matrix_ushort_set_all" 'function)) :void
  (m :pointer)
  (x :unsigned-short))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_set_all" 'function))

(cffi:defcfun ("gsl_matrix_ushort_fread" #.(swig-lispify "gsl_matrix_ushort_fread" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_fread" 'function))

(cffi:defcfun ("gsl_matrix_ushort_fwrite" #.(swig-lispify "gsl_matrix_ushort_fwrite" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_fwrite" 'function))

(cffi:defcfun ("gsl_matrix_ushort_fscanf" #.(swig-lispify "gsl_matrix_ushort_fscanf" 'function)) :int
  (stream :pointer)
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_fscanf" 'function))

(cffi:defcfun ("gsl_matrix_ushort_fprintf" #.(swig-lispify "gsl_matrix_ushort_fprintf" 'function)) :int
  (stream :pointer)
  (m :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_fprintf" 'function))

(cffi:defcfun ("gsl_matrix_ushort_memcpy" #.(swig-lispify "gsl_matrix_ushort_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_ushort_swap" #.(swig-lispify "gsl_matrix_ushort_swap" 'function)) :int
  (m1 :pointer)
  (m2 :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_swap" 'function))

(cffi:defcfun ("gsl_matrix_ushort_swap_rows" #.(swig-lispify "gsl_matrix_ushort_swap_rows" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_swap_rows" 'function))

(cffi:defcfun ("gsl_matrix_ushort_swap_columns" #.(swig-lispify "gsl_matrix_ushort_swap_columns" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_swap_columns" 'function))

(cffi:defcfun ("gsl_matrix_ushort_swap_rowcol" #.(swig-lispify "gsl_matrix_ushort_swap_rowcol" 'function)) :int
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_swap_rowcol" 'function))

(cffi:defcfun ("gsl_matrix_ushort_transpose" #.(swig-lispify "gsl_matrix_ushort_transpose" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_transpose" 'function))

(cffi:defcfun ("gsl_matrix_ushort_transpose_memcpy" #.(swig-lispify "gsl_matrix_ushort_transpose_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_transpose_memcpy" 'function))

(cffi:defcfun ("gsl_matrix_ushort_max" #.(swig-lispify "gsl_matrix_ushort_max" 'function)) :unsigned-short
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_max" 'function))

(cffi:defcfun ("gsl_matrix_ushort_min" #.(swig-lispify "gsl_matrix_ushort_min" 'function)) :unsigned-short
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_min" 'function))

(cffi:defcfun ("gsl_matrix_ushort_minmax" #.(swig-lispify "gsl_matrix_ushort_minmax" 'function)) :void
  (m :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_minmax" 'function))

(cffi:defcfun ("gsl_matrix_ushort_max_index" #.(swig-lispify "gsl_matrix_ushort_max_index" 'function)) :void
  (m :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_max_index" 'function))

(cffi:defcfun ("gsl_matrix_ushort_min_index" #.(swig-lispify "gsl_matrix_ushort_min_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_min_index" 'function))

(cffi:defcfun ("gsl_matrix_ushort_minmax_index" #.(swig-lispify "gsl_matrix_ushort_minmax_index" 'function)) :void
  (m :pointer)
  (imin :pointer)
  (jmin :pointer)
  (imax :pointer)
  (jmax :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_minmax_index" 'function))

(cffi:defcfun ("gsl_matrix_ushort_equal" #.(swig-lispify "gsl_matrix_ushort_equal" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_equal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_isnull" #.(swig-lispify "gsl_matrix_ushort_isnull" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_isnull" 'function))

(cffi:defcfun ("gsl_matrix_ushort_ispos" #.(swig-lispify "gsl_matrix_ushort_ispos" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_ispos" 'function))

(cffi:defcfun ("gsl_matrix_ushort_isneg" #.(swig-lispify "gsl_matrix_ushort_isneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_isneg" 'function))

(cffi:defcfun ("gsl_matrix_ushort_isnonneg" #.(swig-lispify "gsl_matrix_ushort_isnonneg" 'function)) :int
  (m :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_isnonneg" 'function))

(cffi:defcfun ("gsl_matrix_ushort_add" #.(swig-lispify "gsl_matrix_ushort_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_add" 'function))

(cffi:defcfun ("gsl_matrix_ushort_sub" #.(swig-lispify "gsl_matrix_ushort_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_sub" 'function))

(cffi:defcfun ("gsl_matrix_ushort_mul_elements" #.(swig-lispify "gsl_matrix_ushort_mul_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_mul_elements" 'function))

(cffi:defcfun ("gsl_matrix_ushort_div_elements" #.(swig-lispify "gsl_matrix_ushort_div_elements" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_div_elements" 'function))

(cffi:defcfun ("gsl_matrix_ushort_scale" #.(swig-lispify "gsl_matrix_ushort_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_scale" 'function))

(cffi:defcfun ("gsl_matrix_ushort_add_constant" #.(swig-lispify "gsl_matrix_ushort_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_add_constant" 'function))

(cffi:defcfun ("gsl_matrix_ushort_add_diagonal" #.(swig-lispify "gsl_matrix_ushort_add_diagonal" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_add_diagonal" 'function))

(cffi:defcfun ("gsl_matrix_ushort_get_row" #.(swig-lispify "gsl_matrix_ushort_get_row" 'function)) :int
  (v :pointer)
  (m :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_get_row" 'function))

(cffi:defcfun ("gsl_matrix_ushort_get_col" #.(swig-lispify "gsl_matrix_ushort_get_col" 'function)) :int
  (v :pointer)
  (m :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_get_col" 'function))

(cffi:defcfun ("gsl_matrix_ushort_set_row" #.(swig-lispify "gsl_matrix_ushort_set_row" 'function)) :int
  (m :pointer)
  (i :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_set_row" 'function))

(cffi:defcfun ("gsl_matrix_ushort_set_col" #.(swig-lispify "gsl_matrix_ushort_set_col" 'function)) :int
  (m :pointer)
  (j :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_set_col" 'function))

(cffi:defcfun ("gsl_matrix_ushort_get" #.(swig-lispify "gsl_matrix_ushort_get" 'function)) :unsigned-short
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_get" 'function))

(cffi:defcfun ("gsl_matrix_ushort_set" #.(swig-lispify "gsl_matrix_ushort_set" 'function)) :void
  (m :pointer)
  (i :pointer)
  (j :pointer)
  (x :unsigned-short))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_set" 'function))

(cffi:defcfun ("gsl_matrix_ushort_ptr" #.(swig-lispify "gsl_matrix_ushort_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_ptr" 'function))

(cffi:defcfun ("gsl_matrix_ushort_const_ptr" #.(swig-lispify "gsl_matrix_ushort_const_ptr" 'function)) :pointer
  (m :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_matrix_ushort_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_min_fminimizer_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_min_fminimizer" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "x_minimum" 'slotname) :double)
	(#.(swig-lispify "x_lower" 'slotname) :double)
	(#.(swig-lispify "x_upper" 'slotname) :double)
	(#.(swig-lispify "f_minimum" 'slotname) :double)
	(#.(swig-lispify "f_lower" 'slotname) :double)
	(#.(swig-lispify "f_upper" 'slotname) :double)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "x_minimum" 'slotname))

(cl:export '#.(swig-lispify "x_lower" 'slotname))

(cl:export '#.(swig-lispify "x_upper" 'slotname))

(cl:export '#.(swig-lispify "f_minimum" 'slotname))

(cl:export '#.(swig-lispify "f_lower" 'slotname))

(cl:export '#.(swig-lispify "f_upper" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_min_fminimizer_alloc" #.(swig-lispify "gsl_min_fminimizer_alloc" 'function)) :pointer
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_alloc" 'function))

(cffi:defcfun ("gsl_min_fminimizer_free" #.(swig-lispify "gsl_min_fminimizer_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_free" 'function))

(cffi:defcfun ("gsl_min_fminimizer_set" #.(swig-lispify "gsl_min_fminimizer_set" 'function)) :int
  (s :pointer)
  (f :pointer)
  (x_minimum :double)
  (x_lower :double)
  (x_upper :double))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_set" 'function))

(cffi:defcfun ("gsl_min_fminimizer_set_with_values" #.(swig-lispify "gsl_min_fminimizer_set_with_values" 'function)) :int
  (s :pointer)
  (f :pointer)
  (x_minimum :double)
  (f_minimum :double)
  (x_lower :double)
  (f_lower :double)
  (x_upper :double)
  (f_upper :double))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_set_with_values" 'function))

(cffi:defcfun ("gsl_min_fminimizer_iterate" #.(swig-lispify "gsl_min_fminimizer_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_iterate" 'function))

(cffi:defcfun ("gsl_min_fminimizer_name" #.(swig-lispify "gsl_min_fminimizer_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_name" 'function))

(cffi:defcfun ("gsl_min_fminimizer_x_minimum" #.(swig-lispify "gsl_min_fminimizer_x_minimum" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_x_minimum" 'function))

(cffi:defcfun ("gsl_min_fminimizer_x_lower" #.(swig-lispify "gsl_min_fminimizer_x_lower" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_x_lower" 'function))

(cffi:defcfun ("gsl_min_fminimizer_x_upper" #.(swig-lispify "gsl_min_fminimizer_x_upper" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_x_upper" 'function))

(cffi:defcfun ("gsl_min_fminimizer_f_minimum" #.(swig-lispify "gsl_min_fminimizer_f_minimum" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_f_minimum" 'function))

(cffi:defcfun ("gsl_min_fminimizer_f_lower" #.(swig-lispify "gsl_min_fminimizer_f_lower" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_f_lower" 'function))

(cffi:defcfun ("gsl_min_fminimizer_f_upper" #.(swig-lispify "gsl_min_fminimizer_f_upper" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_f_upper" 'function))

(cffi:defcfun ("gsl_min_fminimizer_minimum" #.(swig-lispify "gsl_min_fminimizer_minimum" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_min_fminimizer_minimum" 'function))

(cffi:defcfun ("gsl_min_test_interval" #.(swig-lispify "gsl_min_test_interval" 'function)) :int
  (x_lower :double)
  (x_upper :double)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_min_test_interval" 'function))

(cffi:defcvar ("gsl_min_fminimizer_goldensection" #.(swig-lispify "gsl_min_fminimizer_goldensection" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_min_fminimizer_goldensection" 'variable))

(cffi:defcvar ("gsl_min_fminimizer_brent" #.(swig-lispify "gsl_min_fminimizer_brent" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_min_fminimizer_brent" 'variable))

(cffi:defcvar ("gsl_min_fminimizer_quad_golden" #.(swig-lispify "gsl_min_fminimizer_quad_golden" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_min_fminimizer_quad_golden" 'variable))

(cffi:defcfun ("gsl_min_find_bracket" #.(swig-lispify "gsl_min_find_bracket" 'function)) :int
  (f :pointer)
  (x_minimum :pointer)
  (f_minimum :pointer)
  (x_lower :pointer)
  (f_lower :pointer)
  (x_upper :pointer)
  (f_upper :pointer)
  (eval_max :pointer))

(cl:export '#.(swig-lispify "gsl_min_find_bracket" 'function))

(cffi:defcfun ("gsl_max" #.(swig-lispify "gsl_max" 'function)) :double
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_max" 'function))

(cffi:defcfun ("gsl_min" #.(swig-lispify "gsl_min" 'function)) :double
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_min" 'function))

(cl:defconstant #.(swig-lispify "GSL_PREC_DOUBLE" 'constant) 0)

(cl:export '#.(swig-lispify "GSL_PREC_DOUBLE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_PREC_SINGLE" 'constant) 1)

(cl:export '#.(swig-lispify "GSL_PREC_SINGLE" 'constant))

(cl:defconstant #.(swig-lispify "GSL_PREC_APPROX" 'constant) 2)

(cl:export '#.(swig-lispify "GSL_PREC_APPROX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_MODE_DEFAULT" 'constant) 0)

(cl:export '#.(swig-lispify "GSL_MODE_DEFAULT" 'constant))

(cffi:defcstruct #.(swig-lispify "gsl_monte_function_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "dim" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_monte_function_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "dim" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_monte_miser_state" 'classname)
	(#.(swig-lispify "min_calls" 'slotname) :pointer)
	(#.(swig-lispify "min_calls_per_bisection" 'slotname) :pointer)
	(#.(swig-lispify "dither" 'slotname) :double)
	(#.(swig-lispify "estimate_frac" 'slotname) :double)
	(#.(swig-lispify "alpha" 'slotname) :double)
	(#.(swig-lispify "dim" 'slotname) :pointer)
	(#.(swig-lispify "estimate_style" 'slotname) :int)
	(#.(swig-lispify "depth" 'slotname) :int)
	(#.(swig-lispify "verbose" 'slotname) :int)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "xmid" 'slotname) :pointer)
	(#.(swig-lispify "sigma_l" 'slotname) :pointer)
	(#.(swig-lispify "sigma_r" 'slotname) :pointer)
	(#.(swig-lispify "fmax_l" 'slotname) :pointer)
	(#.(swig-lispify "fmax_r" 'slotname) :pointer)
	(#.(swig-lispify "fmin_l" 'slotname) :pointer)
	(#.(swig-lispify "fmin_r" 'slotname) :pointer)
	(#.(swig-lispify "fsum_l" 'slotname) :pointer)
	(#.(swig-lispify "fsum_r" 'slotname) :pointer)
	(#.(swig-lispify "fsum2_l" 'slotname) :pointer)
	(#.(swig-lispify "fsum2_r" 'slotname) :pointer)
	(#.(swig-lispify "hits_l" 'slotname) :pointer)
	(#.(swig-lispify "hits_r" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_state" 'classname))

(cl:export '#.(swig-lispify "min_calls" 'slotname))

(cl:export '#.(swig-lispify "min_calls_per_bisection" 'slotname))

(cl:export '#.(swig-lispify "dither" 'slotname))

(cl:export '#.(swig-lispify "estimate_frac" 'slotname))

(cl:export '#.(swig-lispify "alpha" 'slotname))

(cl:export '#.(swig-lispify "dim" 'slotname))

(cl:export '#.(swig-lispify "estimate_style" 'slotname))

(cl:export '#.(swig-lispify "depth" 'slotname))

(cl:export '#.(swig-lispify "verbose" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "xmid" 'slotname))

(cl:export '#.(swig-lispify "sigma_l" 'slotname))

(cl:export '#.(swig-lispify "sigma_r" 'slotname))

(cl:export '#.(swig-lispify "fmax_l" 'slotname))

(cl:export '#.(swig-lispify "fmax_r" 'slotname))

(cl:export '#.(swig-lispify "fmin_l" 'slotname))

(cl:export '#.(swig-lispify "fmin_r" 'slotname))

(cl:export '#.(swig-lispify "fsum_l" 'slotname))

(cl:export '#.(swig-lispify "fsum_r" 'slotname))

(cl:export '#.(swig-lispify "fsum2_l" 'slotname))

(cl:export '#.(swig-lispify "fsum2_r" 'slotname))

(cl:export '#.(swig-lispify "hits_l" 'slotname))

(cl:export '#.(swig-lispify "hits_r" 'slotname))

(cffi:defcfun ("gsl_monte_miser_integrate" #.(swig-lispify "gsl_monte_miser_integrate" 'function)) :int
  (f :pointer)
  (xl :pointer)
  (xh :pointer)
  (dim :pointer)
  (calls :pointer)
  (r :pointer)
  (state :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_integrate" 'function))

(cffi:defcfun ("gsl_monte_miser_alloc" #.(swig-lispify "gsl_monte_miser_alloc" 'function)) :pointer
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_alloc" 'function))

(cffi:defcfun ("gsl_monte_miser_init" #.(swig-lispify "gsl_monte_miser_init" 'function)) :int
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_init" 'function))

(cffi:defcfun ("gsl_monte_miser_free" #.(swig-lispify "gsl_monte_miser_free" 'function)) :void
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_free" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_monte_miser_params" 'classname)
	(#.(swig-lispify "estimate_frac" 'slotname) :double)
	(#.(swig-lispify "min_calls" 'slotname) :pointer)
	(#.(swig-lispify "min_calls_per_bisection" 'slotname) :pointer)
	(#.(swig-lispify "alpha" 'slotname) :double)
	(#.(swig-lispify "dither" 'slotname) :double))

(cl:export '#.(swig-lispify "gsl_monte_miser_params" 'classname))

(cl:export '#.(swig-lispify "estimate_frac" 'slotname))

(cl:export '#.(swig-lispify "min_calls" 'slotname))

(cl:export '#.(swig-lispify "min_calls_per_bisection" 'slotname))

(cl:export '#.(swig-lispify "alpha" 'slotname))

(cl:export '#.(swig-lispify "dither" 'slotname))

(cffi:defcfun ("gsl_monte_miser_params_get" #.(swig-lispify "gsl_monte_miser_params_get" 'function)) :void
  (state :pointer)
  (params :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_params_get" 'function))

(cffi:defcfun ("gsl_monte_miser_params_set" #.(swig-lispify "gsl_monte_miser_params_set" 'function)) :void
  (state :pointer)
  (params :pointer))

(cl:export '#.(swig-lispify "gsl_monte_miser_params_set" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_monte_plain_state" 'classname)
	(#.(swig-lispify "dim" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_monte_plain_state" 'classname))

(cl:export '#.(swig-lispify "dim" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cffi:defcfun ("gsl_monte_plain_integrate" #.(swig-lispify "gsl_monte_plain_integrate" 'function)) :int
  (f :pointer)
  (xl :pointer)
  (xu :pointer)
  (dim :pointer)
  (calls :pointer)
  (r :pointer)
  (state :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_monte_plain_integrate" 'function))

(cffi:defcfun ("gsl_monte_plain_alloc" #.(swig-lispify "gsl_monte_plain_alloc" 'function)) :pointer
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_monte_plain_alloc" 'function))

(cffi:defcfun ("gsl_monte_plain_init" #.(swig-lispify "gsl_monte_plain_init" 'function)) :int
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_plain_init" 'function))

(cffi:defcfun ("gsl_monte_plain_free" #.(swig-lispify "gsl_monte_plain_free" 'function)) :void
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_plain_free" 'function))

(defanonenum 
	(#.(swig-lispify "GSL_VEGAS_MODE_IMPORTANCE" 'enumvalue) #.1)
	(#.(swig-lispify "GSL_VEGAS_MODE_IMPORTANCE_ONLY" 'enumvalue) #.0)
	(#.(swig-lispify "GSL_VEGAS_MODE_STRATIFIED" 'enumvalue) #.-1))

(cl:export '#.(swig-lispify "GSL_VEGAS_MODE_IMPORTANCE" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_VEGAS_MODE_IMPORTANCE_ONLY" 'enumvalue))

(cl:export '#.(swig-lispify "GSL_VEGAS_MODE_STRATIFIED" 'enumvalue))

(cffi:defcstruct #.(swig-lispify "gsl_monte_vegas_state" 'classname)
	(#.(swig-lispify "dim" 'slotname) :pointer)
	(#.(swig-lispify "bins_max" 'slotname) :pointer)
	(#.(swig-lispify "bins" 'slotname) :unsigned-int)
	(#.(swig-lispify "boxes" 'slotname) :unsigned-int)
	(#.(swig-lispify "xi" 'slotname) :pointer)
	(#.(swig-lispify "xin" 'slotname) :pointer)
	(#.(swig-lispify "delx" 'slotname) :pointer)
	(#.(swig-lispify "weight" 'slotname) :pointer)
	(#.(swig-lispify "vol" 'slotname) :double)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "bin" 'slotname) :pointer)
	(#.(swig-lispify "box" 'slotname) :pointer)
	(#.(swig-lispify "d" 'slotname) :pointer)
	(#.(swig-lispify "alpha" 'slotname) :double)
	(#.(swig-lispify "mode" 'slotname) :int)
	(#.(swig-lispify "verbose" 'slotname) :int)
	(#.(swig-lispify "iterations" 'slotname) :unsigned-int)
	(#.(swig-lispify "stage" 'slotname) :int)
	(#.(swig-lispify "jac" 'slotname) :double)
	(#.(swig-lispify "wtd_int_sum" 'slotname) :double)
	(#.(swig-lispify "sum_wgts" 'slotname) :double)
	(#.(swig-lispify "chi_sum" 'slotname) :double)
	(#.(swig-lispify "chisq" 'slotname) :double)
	(#.(swig-lispify "result" 'slotname) :double)
	(#.(swig-lispify "sigma" 'slotname) :double)
	(#.(swig-lispify "it_start" 'slotname) :unsigned-int)
	(#.(swig-lispify "it_num" 'slotname) :unsigned-int)
	(#.(swig-lispify "samples" 'slotname) :unsigned-int)
	(#.(swig-lispify "calls_per_box" 'slotname) :unsigned-int)
	(#.(swig-lispify "ostream" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_state" 'classname))

(cl:export '#.(swig-lispify "dim" 'slotname))

(cl:export '#.(swig-lispify "bins_max" 'slotname))

(cl:export '#.(swig-lispify "bins" 'slotname))

(cl:export '#.(swig-lispify "boxes" 'slotname))

(cl:export '#.(swig-lispify "xi" 'slotname))

(cl:export '#.(swig-lispify "xin" 'slotname))

(cl:export '#.(swig-lispify "delx" 'slotname))

(cl:export '#.(swig-lispify "weight" 'slotname))

(cl:export '#.(swig-lispify "vol" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "bin" 'slotname))

(cl:export '#.(swig-lispify "box" 'slotname))

(cl:export '#.(swig-lispify "d" 'slotname))

(cl:export '#.(swig-lispify "alpha" 'slotname))

(cl:export '#.(swig-lispify "mode" 'slotname))

(cl:export '#.(swig-lispify "verbose" 'slotname))

(cl:export '#.(swig-lispify "iterations" 'slotname))

(cl:export '#.(swig-lispify "stage" 'slotname))

(cl:export '#.(swig-lispify "jac" 'slotname))

(cl:export '#.(swig-lispify "wtd_int_sum" 'slotname))

(cl:export '#.(swig-lispify "sum_wgts" 'slotname))

(cl:export '#.(swig-lispify "chi_sum" 'slotname))

(cl:export '#.(swig-lispify "chisq" 'slotname))

(cl:export '#.(swig-lispify "result" 'slotname))

(cl:export '#.(swig-lispify "sigma" 'slotname))

(cl:export '#.(swig-lispify "it_start" 'slotname))

(cl:export '#.(swig-lispify "it_num" 'slotname))

(cl:export '#.(swig-lispify "samples" 'slotname))

(cl:export '#.(swig-lispify "calls_per_box" 'slotname))

(cl:export '#.(swig-lispify "ostream" 'slotname))

(cffi:defcfun ("gsl_monte_vegas_integrate" #.(swig-lispify "gsl_monte_vegas_integrate" 'function)) :int
  (f :pointer)
  (xl :pointer)
  (xu :pointer)
  (dim :pointer)
  (calls :pointer)
  (r :pointer)
  (state :pointer)
  (result :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_integrate" 'function))

(cffi:defcfun ("gsl_monte_vegas_alloc" #.(swig-lispify "gsl_monte_vegas_alloc" 'function)) :pointer
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_alloc" 'function))

(cffi:defcfun ("gsl_monte_vegas_init" #.(swig-lispify "gsl_monte_vegas_init" 'function)) :int
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_init" 'function))

(cffi:defcfun ("gsl_monte_vegas_free" #.(swig-lispify "gsl_monte_vegas_free" 'function)) :void
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_free" 'function))

(cffi:defcfun ("gsl_monte_vegas_chisq" #.(swig-lispify "gsl_monte_vegas_chisq" 'function)) :double
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_chisq" 'function))

(cffi:defcfun ("gsl_monte_vegas_runval" #.(swig-lispify "gsl_monte_vegas_runval" 'function)) :void
  (state :pointer)
  (result :pointer)
  (sigma :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_runval" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_monte_vegas_params" 'classname)
	(#.(swig-lispify "alpha" 'slotname) :double)
	(#.(swig-lispify "iterations" 'slotname) :pointer)
	(#.(swig-lispify "stage" 'slotname) :int)
	(#.(swig-lispify "mode" 'slotname) :int)
	(#.(swig-lispify "verbose" 'slotname) :int)
	(#.(swig-lispify "ostream" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_params" 'classname))

(cl:export '#.(swig-lispify "alpha" 'slotname))

(cl:export '#.(swig-lispify "iterations" 'slotname))

(cl:export '#.(swig-lispify "stage" 'slotname))

(cl:export '#.(swig-lispify "mode" 'slotname))

(cl:export '#.(swig-lispify "verbose" 'slotname))

(cl:export '#.(swig-lispify "ostream" 'slotname))

(cffi:defcfun ("gsl_monte_vegas_params_get" #.(swig-lispify "gsl_monte_vegas_params_get" 'function)) :void
  (state :pointer)
  (params :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_params_get" 'function))

(cffi:defcfun ("gsl_monte_vegas_params_set" #.(swig-lispify "gsl_monte_vegas_params_set" 'function)) :void
  (state :pointer)
  (params :pointer))

(cl:export '#.(swig-lispify "gsl_monte_vegas_params_set" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_linear_workspace" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "p" 'slotname) :pointer)
	(#.(swig-lispify "A" 'slotname) :pointer)
	(#.(swig-lispify "Q" 'slotname) :pointer)
	(#.(swig-lispify "QSI" 'slotname) :pointer)
	(#.(swig-lispify "S" 'slotname) :pointer)
	(#.(swig-lispify "t" 'slotname) :pointer)
	(#.(swig-lispify "xt" 'slotname) :pointer)
	(#.(swig-lispify "D" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_workspace" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "p" 'slotname))

(cl:export '#.(swig-lispify "A" 'slotname))

(cl:export '#.(swig-lispify "Q" 'slotname))

(cl:export '#.(swig-lispify "QSI" 'slotname))

(cl:export '#.(swig-lispify "S" 'slotname))

(cl:export '#.(swig-lispify "t" 'slotname))

(cl:export '#.(swig-lispify "xt" 'slotname))

(cl:export '#.(swig-lispify "D" 'slotname))

(cffi:defcfun ("gsl_multifit_linear_alloc" #.(swig-lispify "gsl_multifit_linear_alloc" 'function)) :pointer
  (n :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_alloc" 'function))

(cffi:defcfun ("gsl_multifit_linear_free" #.(swig-lispify "gsl_multifit_linear_free" 'function)) :void
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_free" 'function))

(cffi:defcfun ("gsl_multifit_linear" #.(swig-lispify "gsl_multifit_linear" 'function)) :int
  (X :pointer)
  (y :pointer)
  (c :pointer)
  (cov :pointer)
  (chisq :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear" 'function))

(cffi:defcfun ("gsl_multifit_linear_svd" #.(swig-lispify "gsl_multifit_linear_svd" 'function)) :int
  (X :pointer)
  (y :pointer)
  (tol :double)
  (rank :pointer)
  (c :pointer)
  (cov :pointer)
  (chisq :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_svd" 'function))

(cffi:defcfun ("gsl_multifit_linear_usvd" #.(swig-lispify "gsl_multifit_linear_usvd" 'function)) :int
  (X :pointer)
  (y :pointer)
  (tol :double)
  (rank :pointer)
  (c :pointer)
  (cov :pointer)
  (chisq :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_usvd" 'function))

(cffi:defcfun ("gsl_multifit_wlinear" #.(swig-lispify "gsl_multifit_wlinear" 'function)) :int
  (X :pointer)
  (w :pointer)
  (y :pointer)
  (c :pointer)
  (cov :pointer)
  (chisq :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_wlinear" 'function))

(cffi:defcfun ("gsl_multifit_wlinear_svd" #.(swig-lispify "gsl_multifit_wlinear_svd" 'function)) :int
  (X :pointer)
  (w :pointer)
  (y :pointer)
  (tol :double)
  (rank :pointer)
  (c :pointer)
  (cov :pointer)
  (chisq :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_wlinear_svd" 'function))

(cffi:defcfun ("gsl_multifit_wlinear_usvd" #.(swig-lispify "gsl_multifit_wlinear_usvd" 'function)) :int
  (X :pointer)
  (w :pointer)
  (y :pointer)
  (tol :double)
  (rank :pointer)
  (c :pointer)
  (cov :pointer)
  (chisq :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_wlinear_usvd" 'function))

(cffi:defcfun ("gsl_multifit_linear_est" #.(swig-lispify "gsl_multifit_linear_est" 'function)) :int
  (x :pointer)
  (c :pointer)
  (cov :pointer)
  (y :pointer)
  (y_err :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_est" 'function))

(cffi:defcfun ("gsl_multifit_linear_residuals" #.(swig-lispify "gsl_multifit_linear_residuals" 'function)) :int
  (X :pointer)
  (y :pointer)
  (c :pointer)
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_linear_residuals" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_robust_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "wfun" 'slotname) :pointer)
	(#.(swig-lispify "psi_deriv" 'slotname) :pointer)
	(#.(swig-lispify "tuning_default" 'slotname) :double))

(cl:export '#.(swig-lispify "gsl_multifit_robust_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "wfun" 'slotname))

(cl:export '#.(swig-lispify "psi_deriv" 'slotname))

(cl:export '#.(swig-lispify "tuning_default" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_robust_stats" 'classname)
	(#.(swig-lispify "sigma_ols" 'slotname) :double)
	(#.(swig-lispify "sigma_mad" 'slotname) :double)
	(#.(swig-lispify "sigma_rob" 'slotname) :double)
	(#.(swig-lispify "sigma" 'slotname) :double)
	(#.(swig-lispify "Rsq" 'slotname) :double)
	(#.(swig-lispify "adj_Rsq" 'slotname) :double)
	(#.(swig-lispify "rmse" 'slotname) :double)
	(#.(swig-lispify "sse" 'slotname) :double)
	(#.(swig-lispify "dof" 'slotname) :pointer)
	(#.(swig-lispify "numit" 'slotname) :pointer)
	(#.(swig-lispify "weights" 'slotname) :pointer)
	(#.(swig-lispify "r" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_stats" 'classname))

(cl:export '#.(swig-lispify "sigma_ols" 'slotname))

(cl:export '#.(swig-lispify "sigma_mad" 'slotname))

(cl:export '#.(swig-lispify "sigma_rob" 'slotname))

(cl:export '#.(swig-lispify "sigma" 'slotname))

(cl:export '#.(swig-lispify "Rsq" 'slotname))

(cl:export '#.(swig-lispify "adj_Rsq" 'slotname))

(cl:export '#.(swig-lispify "rmse" 'slotname))

(cl:export '#.(swig-lispify "sse" 'slotname))

(cl:export '#.(swig-lispify "dof" 'slotname))

(cl:export '#.(swig-lispify "numit" 'slotname))

(cl:export '#.(swig-lispify "weights" 'slotname))

(cl:export '#.(swig-lispify "r" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_robust_workspace" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "p" 'slotname) :pointer)
	(#.(swig-lispify "numit" 'slotname) :pointer)
	(#.(swig-lispify "maxiter" 'slotname) :pointer)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "tune" 'slotname) :double)
	(#.(swig-lispify "r" 'slotname) :pointer)
	(#.(swig-lispify "weights" 'slotname) :pointer)
	(#.(swig-lispify "c_prev" 'slotname) :pointer)
	(#.(swig-lispify "resfac" 'slotname) :pointer)
	(#.(swig-lispify "psi" 'slotname) :pointer)
	(#.(swig-lispify "dpsi" 'slotname) :pointer)
	(#.(swig-lispify "QSI" 'slotname) :pointer)
	(#.(swig-lispify "D" 'slotname) :pointer)
	(#.(swig-lispify "workn" 'slotname) :pointer)
	(#.(swig-lispify "stats" 'slotname) #.(swig-lispify "gsl_multifit_robust_stats" 'classname))
	(#.(swig-lispify "multifit_p" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_workspace" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "p" 'slotname))

(cl:export '#.(swig-lispify "numit" 'slotname))

(cl:export '#.(swig-lispify "maxiter" 'slotname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "tune" 'slotname))

(cl:export '#.(swig-lispify "r" 'slotname))

(cl:export '#.(swig-lispify "weights" 'slotname))

(cl:export '#.(swig-lispify "c_prev" 'slotname))

(cl:export '#.(swig-lispify "resfac" 'slotname))

(cl:export '#.(swig-lispify "psi" 'slotname))

(cl:export '#.(swig-lispify "dpsi" 'slotname))

(cl:export '#.(swig-lispify "QSI" 'slotname))

(cl:export '#.(swig-lispify "D" 'slotname))

(cl:export '#.(swig-lispify "workn" 'slotname))

(cl:export '#.(swig-lispify "stats" 'slotname))

(cl:export '#.(swig-lispify "multifit_p" 'slotname))

(cffi:defcvar ("gsl_multifit_robust_default" #.(swig-lispify "gsl_multifit_robust_default" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_default" 'variable))

(cffi:defcvar ("gsl_multifit_robust_bisquare" #.(swig-lispify "gsl_multifit_robust_bisquare" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_bisquare" 'variable))

(cffi:defcvar ("gsl_multifit_robust_cauchy" #.(swig-lispify "gsl_multifit_robust_cauchy" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_cauchy" 'variable))

(cffi:defcvar ("gsl_multifit_robust_fair" #.(swig-lispify "gsl_multifit_robust_fair" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_fair" 'variable))

(cffi:defcvar ("gsl_multifit_robust_huber" #.(swig-lispify "gsl_multifit_robust_huber" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_huber" 'variable))

(cffi:defcvar ("gsl_multifit_robust_ols" #.(swig-lispify "gsl_multifit_robust_ols" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_ols" 'variable))

(cffi:defcvar ("gsl_multifit_robust_welsch" #.(swig-lispify "gsl_multifit_robust_welsch" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_robust_welsch" 'variable))

(cffi:defcfun ("gsl_multifit_robust_alloc" #.(swig-lispify "gsl_multifit_robust_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_alloc" 'function))

(cffi:defcfun ("gsl_multifit_robust_free" #.(swig-lispify "gsl_multifit_robust_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_free" 'function))

(cffi:defcfun ("gsl_multifit_robust_tune" #.(swig-lispify "gsl_multifit_robust_tune" 'function)) :int
  (tune :double)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_tune" 'function))

(cffi:defcfun ("gsl_multifit_robust_name" #.(swig-lispify "gsl_multifit_robust_name" 'function)) :string
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_name" 'function))

(cffi:defcfun ("gsl_multifit_robust_statistics" #.(swig-lispify "gsl_multifit_robust_statistics" 'function)) #.(swig-lispify "gsl_multifit_robust_stats" 'classname)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_statistics" 'function))

(cffi:defcfun ("gsl_multifit_robust" #.(swig-lispify "gsl_multifit_robust" 'function)) :int
  (X :pointer)
  (y :pointer)
  (c :pointer)
  (cov :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust" 'function))

(cffi:defcfun ("gsl_multifit_robust_est" #.(swig-lispify "gsl_multifit_robust_est" 'function)) :int
  (x :pointer)
  (c :pointer)
  (cov :pointer)
  (y :pointer)
  (y_err :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_robust_est" 'function))

(cffi:defcfun ("gsl_multifit_gradient" #.(swig-lispify "gsl_multifit_gradient" 'function)) :int
  (J :pointer)
  (f :pointer)
  (g :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_gradient" 'function))

(cffi:defcfun ("gsl_multifit_covar" #.(swig-lispify "gsl_multifit_covar" 'function)) :int
  (J :pointer)
  (epsrel :double)
  (covar :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_covar" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_function_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "p" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_function_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "p" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_fsolver_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_fsolver" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "dx" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "dx" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_multifit_fsolver_alloc" #.(swig-lispify "gsl_multifit_fsolver_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_alloc" 'function))

(cffi:defcfun ("gsl_multifit_fsolver_free" #.(swig-lispify "gsl_multifit_fsolver_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_free" 'function))

(cffi:defcfun ("gsl_multifit_fsolver_set" #.(swig-lispify "gsl_multifit_fsolver_set" 'function)) :int
  (s :pointer)
  (f :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_set" 'function))

(cffi:defcfun ("gsl_multifit_fsolver_iterate" #.(swig-lispify "gsl_multifit_fsolver_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_iterate" 'function))

(cffi:defcfun ("gsl_multifit_fsolver_driver" #.(swig-lispify "gsl_multifit_fsolver_driver" 'function)) :int
  (s :pointer)
  (maxiter :pointer)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_driver" 'function))

(cffi:defcfun ("gsl_multifit_fsolver_name" #.(swig-lispify "gsl_multifit_fsolver_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_name" 'function))

(cffi:defcfun ("gsl_multifit_fsolver_position" #.(swig-lispify "gsl_multifit_fsolver_position" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fsolver_position" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_function_fdf_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "df" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "p" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_function_fdf_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "df" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "p" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_fdfsolver_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multifit_fdfsolver" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "J" 'slotname) :pointer)
	(#.(swig-lispify "dx" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "J" 'slotname))

(cl:export '#.(swig-lispify "dx" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_multifit_fdfsolver_alloc" #.(swig-lispify "gsl_multifit_fdfsolver_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_alloc" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_set" #.(swig-lispify "gsl_multifit_fdfsolver_set" 'function)) :int
  (s :pointer)
  (fdf :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_set" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_iterate" #.(swig-lispify "gsl_multifit_fdfsolver_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_iterate" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_driver" #.(swig-lispify "gsl_multifit_fdfsolver_driver" 'function)) :int
  (s :pointer)
  (maxiter :pointer)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_driver" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_free" #.(swig-lispify "gsl_multifit_fdfsolver_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_free" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_name" #.(swig-lispify "gsl_multifit_fdfsolver_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_name" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_position" #.(swig-lispify "gsl_multifit_fdfsolver_position" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_position" 'function))

(cffi:defcfun ("gsl_multifit_test_delta" #.(swig-lispify "gsl_multifit_test_delta" 'function)) :int
  (dx :pointer)
  (x :pointer)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_multifit_test_delta" 'function))

(cffi:defcfun ("gsl_multifit_test_gradient" #.(swig-lispify "gsl_multifit_test_gradient" 'function)) :int
  (g :pointer)
  (epsabs :double))

(cl:export '#.(swig-lispify "gsl_multifit_test_gradient" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_dif_df" #.(swig-lispify "gsl_multifit_fdfsolver_dif_df" 'function)) :int
  (x :pointer)
  (fdf :pointer)
  (f :pointer)
  (J :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_dif_df" 'function))

(cffi:defcfun ("gsl_multifit_fdfsolver_dif_fdf" #.(swig-lispify "gsl_multifit_fdfsolver_dif_fdf" 'function)) :int
  (x :pointer)
  (fdf :pointer)
  (f :pointer)
  (J :pointer))

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_dif_fdf" 'function))

(cffi:defcvar ("gsl_multifit_fdfsolver_lmder" #.(swig-lispify "gsl_multifit_fdfsolver_lmder" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_lmder" 'variable))

(cffi:defcvar ("gsl_multifit_fdfsolver_lmsder" #.(swig-lispify "gsl_multifit_fdfsolver_lmsder" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multifit_fdfsolver_lmsder" 'variable))

(cffi:defcstruct #.(swig-lispify "gsl_multimin_function_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_function_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multimin_function_fdf_struct" 'classname)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "df" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_function_fdf_struct" 'classname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "df" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcfun ("gsl_multimin_diff" #.(swig-lispify "gsl_multimin_diff" 'function)) :int
  (f :pointer)
  (x :pointer)
  (g :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_diff" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multimin_fminimizer_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multimin_fminimizer" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :pointer)
	(#.(swig-lispify "fval" 'slotname) :double)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "size" 'slotname) :double)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "fval" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_multimin_fminimizer_alloc" #.(swig-lispify "gsl_multimin_fminimizer_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_alloc" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_set" #.(swig-lispify "gsl_multimin_fminimizer_set" 'function)) :int
  (s :pointer)
  (f :pointer)
  (x :pointer)
  (step_size :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_set" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_free" #.(swig-lispify "gsl_multimin_fminimizer_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_free" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_name" #.(swig-lispify "gsl_multimin_fminimizer_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_name" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_iterate" #.(swig-lispify "gsl_multimin_fminimizer_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_iterate" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_x" #.(swig-lispify "gsl_multimin_fminimizer_x" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_x" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_minimum" #.(swig-lispify "gsl_multimin_fminimizer_minimum" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_minimum" 'function))

(cffi:defcfun ("gsl_multimin_fminimizer_size" #.(swig-lispify "gsl_multimin_fminimizer_size" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_size" 'function))

(cffi:defcfun ("gsl_multimin_test_gradient" #.(swig-lispify "gsl_multimin_test_gradient" 'function)) :int
  (g :pointer)
  (epsabs :double))

(cl:export '#.(swig-lispify "gsl_multimin_test_gradient" 'function))

(cffi:defcfun ("gsl_multimin_test_size" #.(swig-lispify "gsl_multimin_test_size" 'function)) :int
  (size :double)
  (epsabs :double))

(cl:export '#.(swig-lispify "gsl_multimin_test_size" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_multimin_fdfminimizer_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer)
	(#.(swig-lispify "restart" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cl:export '#.(swig-lispify "restart" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_multimin_fdfminimizer" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "f" 'slotname) :double)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "gradient" 'slotname) :pointer)
	(#.(swig-lispify "dx" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "f" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "gradient" 'slotname))

(cl:export '#.(swig-lispify "dx" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_multimin_fdfminimizer_alloc" #.(swig-lispify "gsl_multimin_fdfminimizer_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_alloc" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_set" #.(swig-lispify "gsl_multimin_fdfminimizer_set" 'function)) :int
  (s :pointer)
  (fdf :pointer)
  (x :pointer)
  (step_size :double)
  (tol :double))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_set" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_free" #.(swig-lispify "gsl_multimin_fdfminimizer_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_free" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_name" #.(swig-lispify "gsl_multimin_fdfminimizer_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_name" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_iterate" #.(swig-lispify "gsl_multimin_fdfminimizer_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_iterate" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_restart" #.(swig-lispify "gsl_multimin_fdfminimizer_restart" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_restart" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_x" #.(swig-lispify "gsl_multimin_fdfminimizer_x" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_x" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_dx" #.(swig-lispify "gsl_multimin_fdfminimizer_dx" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_dx" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_gradient" #.(swig-lispify "gsl_multimin_fdfminimizer_gradient" 'function)) :pointer
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_gradient" 'function))

(cffi:defcfun ("gsl_multimin_fdfminimizer_minimum" #.(swig-lispify "gsl_multimin_fdfminimizer_minimum" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_minimum" 'function))

(cffi:defcvar ("gsl_multimin_fdfminimizer_steepest_descent" #.(swig-lispify "gsl_multimin_fdfminimizer_steepest_descent" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_steepest_descent" 'variable))

(cffi:defcvar ("gsl_multimin_fdfminimizer_conjugate_pr" #.(swig-lispify "gsl_multimin_fdfminimizer_conjugate_pr" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_conjugate_pr" 'variable))

(cffi:defcvar ("gsl_multimin_fdfminimizer_conjugate_fr" #.(swig-lispify "gsl_multimin_fdfminimizer_conjugate_fr" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_conjugate_fr" 'variable))

(cffi:defcvar ("gsl_multimin_fdfminimizer_vector_bfgs" #.(swig-lispify "gsl_multimin_fdfminimizer_vector_bfgs" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_vector_bfgs" 'variable))

(cffi:defcvar ("gsl_multimin_fdfminimizer_vector_bfgs2" #.(swig-lispify "gsl_multimin_fdfminimizer_vector_bfgs2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fdfminimizer_vector_bfgs2" 'variable))

(cffi:defcvar ("gsl_multimin_fminimizer_nmsimplex" #.(swig-lispify "gsl_multimin_fminimizer_nmsimplex" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_nmsimplex" 'variable))

(cffi:defcvar ("gsl_multimin_fminimizer_nmsimplex2" #.(swig-lispify "gsl_multimin_fminimizer_nmsimplex2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_nmsimplex2" 'variable))

(cffi:defcvar ("gsl_multimin_fminimizer_nmsimplex2rand" #.(swig-lispify "gsl_multimin_fminimizer_nmsimplex2rand" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_multimin_fminimizer_nmsimplex2rand" 'variable))

(cffi:defcstruct #.(swig-lispify "gsl_multiset_struct" 'classname)
	(#.(swig-lispify "n" 'slotname) :pointer)
	(#.(swig-lispify "k" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_struct" 'classname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "k" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_multiset_alloc" #.(swig-lispify "gsl_multiset_alloc" 'function)) :pointer
  (n :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_alloc" 'function))

(cffi:defcfun ("gsl_multiset_calloc" #.(swig-lispify "gsl_multiset_calloc" 'function)) :pointer
  (n :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_calloc" 'function))

(cffi:defcfun ("gsl_multiset_init_first" #.(swig-lispify "gsl_multiset_init_first" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_init_first" 'function))

(cffi:defcfun ("gsl_multiset_init_last" #.(swig-lispify "gsl_multiset_init_last" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_init_last" 'function))

(cffi:defcfun ("gsl_multiset_free" #.(swig-lispify "gsl_multiset_free" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_free" 'function))

(cffi:defcfun ("gsl_multiset_memcpy" #.(swig-lispify "gsl_multiset_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_memcpy" 'function))

(cffi:defcfun ("gsl_multiset_fread" #.(swig-lispify "gsl_multiset_fread" 'function)) :int
  (stream :pointer)
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_fread" 'function))

(cffi:defcfun ("gsl_multiset_fwrite" #.(swig-lispify "gsl_multiset_fwrite" 'function)) :int
  (stream :pointer)
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_fwrite" 'function))

(cffi:defcfun ("gsl_multiset_fscanf" #.(swig-lispify "gsl_multiset_fscanf" 'function)) :int
  (stream :pointer)
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_fscanf" 'function))

(cffi:defcfun ("gsl_multiset_fprintf" #.(swig-lispify "gsl_multiset_fprintf" 'function)) :int
  (stream :pointer)
  (c :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_multiset_fprintf" 'function))

(cffi:defcfun ("gsl_multiset_n" #.(swig-lispify "gsl_multiset_n" 'function)) :pointer
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_n" 'function))

(cffi:defcfun ("gsl_multiset_k" #.(swig-lispify "gsl_multiset_k" 'function)) :pointer
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_k" 'function))

(cffi:defcfun ("gsl_multiset_data" #.(swig-lispify "gsl_multiset_data" 'function)) :pointer
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_data" 'function))

(cffi:defcfun ("gsl_multiset_valid" #.(swig-lispify "gsl_multiset_valid" 'function)) :int
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_valid" 'function))

(cffi:defcfun ("gsl_multiset_next" #.(swig-lispify "gsl_multiset_next" 'function)) :int
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_next" 'function))

(cffi:defcfun ("gsl_multiset_prev" #.(swig-lispify "gsl_multiset_prev" 'function)) :int
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_prev" 'function))

(cffi:defcfun ("gsl_multiset_get" #.(swig-lispify "gsl_multiset_get" 'function)) :pointer
  (c :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_multiset_get" 'function))

(cl:defconstant #.(swig-lispify "GSL_POSZERO" 'constant) +0.0d0)

(cl:export '#.(swig-lispify "GSL_POSZERO" 'constant))

(cl:defconstant #.(swig-lispify "GSL_NEGZERO" 'constant) -0.0d0)

(cl:export '#.(swig-lispify "GSL_NEGZERO" 'constant))

(cffi:defcstruct #.(swig-lispify "gsl_ntuple" 'classname)
	(#.(swig-lispify "file" 'slotname) :pointer)
	(#.(swig-lispify "ntuple_data" 'slotname) :pointer)
	(#.(swig-lispify "size" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple" 'classname))

(cl:export '#.(swig-lispify "file" 'slotname))

(cl:export '#.(swig-lispify "ntuple_data" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_ntuple_select_fn" 'classname)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_select_fn" 'classname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_ntuple_value_fn" 'classname)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_value_fn" 'classname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcfun ("gsl_ntuple_open" #.(swig-lispify "gsl_ntuple_open" 'function)) :pointer
  (filename :string)
  (ntuple_data :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_open" 'function))

(cffi:defcfun ("gsl_ntuple_create" #.(swig-lispify "gsl_ntuple_create" 'function)) :pointer
  (filename :string)
  (ntuple_data :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_create" 'function))

(cffi:defcfun ("gsl_ntuple_write" #.(swig-lispify "gsl_ntuple_write" 'function)) :int
  (ntuple :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_write" 'function))

(cffi:defcfun ("gsl_ntuple_read" #.(swig-lispify "gsl_ntuple_read" 'function)) :int
  (ntuple :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_read" 'function))

(cffi:defcfun ("gsl_ntuple_bookdata" #.(swig-lispify "gsl_ntuple_bookdata" 'function)) :int
  (ntuple :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_bookdata" 'function))

(cffi:defcfun ("gsl_ntuple_project" #.(swig-lispify "gsl_ntuple_project" 'function)) :int
  (h :pointer)
  (ntuple :pointer)
  (value_func :pointer)
  (select_func :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_project" 'function))

(cffi:defcfun ("gsl_ntuple_close" #.(swig-lispify "gsl_ntuple_close" 'function)) :int
  (ntuple :pointer))

(cl:export '#.(swig-lispify "gsl_ntuple_close" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv_system" 'classname)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "jacobian" 'slotname) :pointer)
	(#.(swig-lispify "dimension" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_system" 'classname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "jacobian" 'slotname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv_step_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "can_use_dydt_in" 'slotname) :int)
	(#.(swig-lispify "gives_exact_dydt_out" 'slotname) :int)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "apply" 'slotname) :pointer)
	(#.(swig-lispify "reset" 'slotname) :pointer)
	(#.(swig-lispify "order" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "can_use_dydt_in" 'slotname))

(cl:export '#.(swig-lispify "gives_exact_dydt_out" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "apply" 'slotname))

(cl:export '#.(swig-lispify "reset" 'slotname))

(cl:export '#.(swig-lispify "order" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv_step" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "dimension" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcvar ("gsl_odeiv_step_rk2" #.(swig-lispify "gsl_odeiv_step_rk2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rk2" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rk4" #.(swig-lispify "gsl_odeiv_step_rk4" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rk4" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rkf45" #.(swig-lispify "gsl_odeiv_step_rkf45" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rkf45" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rkck" #.(swig-lispify "gsl_odeiv_step_rkck" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rkck" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rk8pd" #.(swig-lispify "gsl_odeiv_step_rk8pd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rk8pd" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rk2imp" #.(swig-lispify "gsl_odeiv_step_rk2imp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rk2imp" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rk2simp" #.(swig-lispify "gsl_odeiv_step_rk2simp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rk2simp" 'variable))

(cffi:defcvar ("gsl_odeiv_step_rk4imp" #.(swig-lispify "gsl_odeiv_step_rk4imp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_rk4imp" 'variable))

(cffi:defcvar ("gsl_odeiv_step_bsimp" #.(swig-lispify "gsl_odeiv_step_bsimp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_bsimp" 'variable))

(cffi:defcvar ("gsl_odeiv_step_gear1" #.(swig-lispify "gsl_odeiv_step_gear1" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_gear1" 'variable))

(cffi:defcvar ("gsl_odeiv_step_gear2" #.(swig-lispify "gsl_odeiv_step_gear2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv_step_gear2" 'variable))

(cffi:defcfun ("gsl_odeiv_step_alloc" #.(swig-lispify "gsl_odeiv_step_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_alloc" 'function))

(cffi:defcfun ("gsl_odeiv_step_reset" #.(swig-lispify "gsl_odeiv_step_reset" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_reset" 'function))

(cffi:defcfun ("gsl_odeiv_step_free" #.(swig-lispify "gsl_odeiv_step_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_free" 'function))

(cffi:defcfun ("gsl_odeiv_step_name" #.(swig-lispify "gsl_odeiv_step_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_name" 'function))

(cffi:defcfun ("gsl_odeiv_step_order" #.(swig-lispify "gsl_odeiv_step_order" 'function)) :unsigned-int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_order" 'function))

(cffi:defcfun ("gsl_odeiv_step_apply" #.(swig-lispify "gsl_odeiv_step_apply" 'function)) :int
  (s :pointer)
  (t_arg1 :double)
  (h :double)
  (y :pointer)
  (yerr :pointer)
  (dydt_in :pointer)
  (dydt_out :pointer)
  (dydt :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_step_apply" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv_control_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "init" 'slotname) :pointer)
	(#.(swig-lispify "hadjust" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "init" 'slotname))

(cl:export '#.(swig-lispify "hadjust" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv_control" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cl:defconstant #.(swig-lispify "GSL_ODEIV_HADJ_INC" 'constant) 1)

(cl:export '#.(swig-lispify "GSL_ODEIV_HADJ_INC" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ODEIV_HADJ_NIL" 'constant) 0)

(cl:export '#.(swig-lispify "GSL_ODEIV_HADJ_NIL" 'constant))

(cl:defconstant #.(swig-lispify "GSL_ODEIV_HADJ_DEC" 'constant) -1)

(cl:export '#.(swig-lispify "GSL_ODEIV_HADJ_DEC" 'constant))

(cffi:defcfun ("gsl_odeiv_control_alloc" #.(swig-lispify "gsl_odeiv_control_alloc" 'function)) :pointer
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control_alloc" 'function))

(cffi:defcfun ("gsl_odeiv_control_init" #.(swig-lispify "gsl_odeiv_control_init" 'function)) :int
  (c :pointer)
  (eps_abs :double)
  (eps_rel :double)
  (a_y :double)
  (a_dydt :double))

(cl:export '#.(swig-lispify "gsl_odeiv_control_init" 'function))

(cffi:defcfun ("gsl_odeiv_control_free" #.(swig-lispify "gsl_odeiv_control_free" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control_free" 'function))

(cffi:defcfun ("gsl_odeiv_control_hadjust" #.(swig-lispify "gsl_odeiv_control_hadjust" 'function)) :int
  (c :pointer)
  (s :pointer)
  (y :pointer)
  (yerr :pointer)
  (dydt :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control_hadjust" 'function))

(cffi:defcfun ("gsl_odeiv_control_name" #.(swig-lispify "gsl_odeiv_control_name" 'function)) :string
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control_name" 'function))

(cffi:defcfun ("gsl_odeiv_control_standard_new" #.(swig-lispify "gsl_odeiv_control_standard_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double)
  (a_y :double)
  (a_dydt :double))

(cl:export '#.(swig-lispify "gsl_odeiv_control_standard_new" 'function))

(cffi:defcfun ("gsl_odeiv_control_y_new" #.(swig-lispify "gsl_odeiv_control_y_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double))

(cl:export '#.(swig-lispify "gsl_odeiv_control_y_new" 'function))

(cffi:defcfun ("gsl_odeiv_control_yp_new" #.(swig-lispify "gsl_odeiv_control_yp_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double))

(cl:export '#.(swig-lispify "gsl_odeiv_control_yp_new" 'function))

(cffi:defcfun ("gsl_odeiv_control_scaled_new" #.(swig-lispify "gsl_odeiv_control_scaled_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double)
  (a_y :double)
  (a_dydt :double)
  (scale_abs :pointer)
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_control_scaled_new" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv_evolve" 'classname)
	(#.(swig-lispify "dimension" 'slotname) :pointer)
	(#.(swig-lispify "y0" 'slotname) :pointer)
	(#.(swig-lispify "yerr" 'slotname) :pointer)
	(#.(swig-lispify "dydt_in" 'slotname) :pointer)
	(#.(swig-lispify "dydt_out" 'slotname) :pointer)
	(#.(swig-lispify "last_step" 'slotname) :double)
	(#.(swig-lispify "count" 'slotname) :unsigned-long)
	(#.(swig-lispify "failed_steps" 'slotname) :unsigned-long))

(cl:export '#.(swig-lispify "gsl_odeiv_evolve" 'classname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "y0" 'slotname))

(cl:export '#.(swig-lispify "yerr" 'slotname))

(cl:export '#.(swig-lispify "dydt_in" 'slotname))

(cl:export '#.(swig-lispify "dydt_out" 'slotname))

(cl:export '#.(swig-lispify "last_step" 'slotname))

(cl:export '#.(swig-lispify "count" 'slotname))

(cl:export '#.(swig-lispify "failed_steps" 'slotname))

(cffi:defcfun ("gsl_odeiv_evolve_alloc" #.(swig-lispify "gsl_odeiv_evolve_alloc" 'function)) :pointer
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_evolve_alloc" 'function))

(cffi:defcfun ("gsl_odeiv_evolve_apply" #.(swig-lispify "gsl_odeiv_evolve_apply" 'function)) :int
  (e :pointer)
  (con :pointer)
  (step :pointer)
  (dydt :pointer)
  (t_arg4 :pointer)
  (t1 :double)
  (h :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_evolve_apply" 'function))

(cffi:defcfun ("gsl_odeiv_evolve_reset" #.(swig-lispify "gsl_odeiv_evolve_reset" 'function)) :int
  (e :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_evolve_reset" 'function))

(cffi:defcfun ("gsl_odeiv_evolve_free" #.(swig-lispify "gsl_odeiv_evolve_free" 'function)) :void
  (e :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv_evolve_free" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_system" 'classname)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "jacobian" 'slotname) :pointer)
	(#.(swig-lispify "dimension" 'slotname) :pointer)
	(#.(swig-lispify "params" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_system" 'classname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "jacobian" 'slotname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "params" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_step_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "can_use_dydt_in" 'slotname) :int)
	(#.(swig-lispify "gives_exact_dydt_out" 'slotname) :int)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "apply" 'slotname) :pointer)
	(#.(swig-lispify "set_driver" 'slotname) :pointer)
	(#.(swig-lispify "reset" 'slotname) :pointer)
	(#.(swig-lispify "order" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "can_use_dydt_in" 'slotname))

(cl:export '#.(swig-lispify "gives_exact_dydt_out" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "apply" 'slotname))

(cl:export '#.(swig-lispify "set_driver" 'slotname))

(cl:export '#.(swig-lispify "reset" 'slotname))

(cl:export '#.(swig-lispify "order" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_step_struct" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "dimension" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_struct" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcvar ("gsl_odeiv2_step_rk2" #.(swig-lispify "gsl_odeiv2_step_rk2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rk2" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rk4" #.(swig-lispify "gsl_odeiv2_step_rk4" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rk4" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rkf45" #.(swig-lispify "gsl_odeiv2_step_rkf45" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rkf45" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rkck" #.(swig-lispify "gsl_odeiv2_step_rkck" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rkck" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rk8pd" #.(swig-lispify "gsl_odeiv2_step_rk8pd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rk8pd" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rk2imp" #.(swig-lispify "gsl_odeiv2_step_rk2imp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rk2imp" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rk4imp" #.(swig-lispify "gsl_odeiv2_step_rk4imp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rk4imp" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_bsimp" #.(swig-lispify "gsl_odeiv2_step_bsimp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_bsimp" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_rk1imp" #.(swig-lispify "gsl_odeiv2_step_rk1imp" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_rk1imp" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_msadams" #.(swig-lispify "gsl_odeiv2_step_msadams" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_msadams" 'variable))

(cffi:defcvar ("gsl_odeiv2_step_msbdf" #.(swig-lispify "gsl_odeiv2_step_msbdf" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_odeiv2_step_msbdf" 'variable))

(cffi:defcfun ("gsl_odeiv2_step_alloc" #.(swig-lispify "gsl_odeiv2_step_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_alloc" 'function))

(cffi:defcfun ("gsl_odeiv2_step_reset" #.(swig-lispify "gsl_odeiv2_step_reset" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_reset" 'function))

(cffi:defcfun ("gsl_odeiv2_step_free" #.(swig-lispify "gsl_odeiv2_step_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_free" 'function))

(cffi:defcfun ("gsl_odeiv2_step_name" #.(swig-lispify "gsl_odeiv2_step_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_name" 'function))

(cffi:defcfun ("gsl_odeiv2_step_order" #.(swig-lispify "gsl_odeiv2_step_order" 'function)) :unsigned-int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_order" 'function))

(cffi:defcfun ("gsl_odeiv2_step_apply" #.(swig-lispify "gsl_odeiv2_step_apply" 'function)) :int
  (s :pointer)
  (t_arg1 :double)
  (h :double)
  (y :pointer)
  (yerr :pointer)
  (dydt_in :pointer)
  (dydt_out :pointer)
  (dydt :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_apply" 'function))

(cffi:defcfun ("gsl_odeiv2_step_set_driver" #.(swig-lispify "gsl_odeiv2_step_set_driver" 'function)) :int
  (s :pointer)
  (d :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_step_set_driver" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_control_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "alloc" 'slotname) :pointer)
	(#.(swig-lispify "init" 'slotname) :pointer)
	(#.(swig-lispify "hadjust" 'slotname) :pointer)
	(#.(swig-lispify "errlevel" 'slotname) :pointer)
	(#.(swig-lispify "set_driver" 'slotname) :pointer)
	(#.(swig-lispify "free" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "alloc" 'slotname))

(cl:export '#.(swig-lispify "init" 'slotname))

(cl:export '#.(swig-lispify "hadjust" 'slotname))

(cl:export '#.(swig-lispify "errlevel" 'slotname))

(cl:export '#.(swig-lispify "set_driver" 'slotname))

(cl:export '#.(swig-lispify "free" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_control_struct" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_struct" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_odeiv2_control_alloc" #.(swig-lispify "gsl_odeiv2_control_alloc" 'function)) :pointer
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_alloc" 'function))

(cffi:defcfun ("gsl_odeiv2_control_init" #.(swig-lispify "gsl_odeiv2_control_init" 'function)) :int
  (c :pointer)
  (eps_abs :double)
  (eps_rel :double)
  (a_y :double)
  (a_dydt :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_init" 'function))

(cffi:defcfun ("gsl_odeiv2_control_free" #.(swig-lispify "gsl_odeiv2_control_free" 'function)) :void
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_free" 'function))

(cffi:defcfun ("gsl_odeiv2_control_hadjust" #.(swig-lispify "gsl_odeiv2_control_hadjust" 'function)) :int
  (c :pointer)
  (s :pointer)
  (y :pointer)
  (yerr :pointer)
  (dydt :pointer)
  (h :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_hadjust" 'function))

(cffi:defcfun ("gsl_odeiv2_control_name" #.(swig-lispify "gsl_odeiv2_control_name" 'function)) :string
  (c :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_name" 'function))

(cffi:defcfun ("gsl_odeiv2_control_errlevel" #.(swig-lispify "gsl_odeiv2_control_errlevel" 'function)) :int
  (c :pointer)
  (y :double)
  (dydt :double)
  (h :double)
  (ind :pointer)
  (errlev :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_errlevel" 'function))

(cffi:defcfun ("gsl_odeiv2_control_set_driver" #.(swig-lispify "gsl_odeiv2_control_set_driver" 'function)) :int
  (c :pointer)
  (d :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_set_driver" 'function))

(cffi:defcfun ("gsl_odeiv2_control_standard_new" #.(swig-lispify "gsl_odeiv2_control_standard_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double)
  (a_y :double)
  (a_dydt :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_standard_new" 'function))

(cffi:defcfun ("gsl_odeiv2_control_y_new" #.(swig-lispify "gsl_odeiv2_control_y_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_y_new" 'function))

(cffi:defcfun ("gsl_odeiv2_control_yp_new" #.(swig-lispify "gsl_odeiv2_control_yp_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_yp_new" 'function))

(cffi:defcfun ("gsl_odeiv2_control_scaled_new" #.(swig-lispify "gsl_odeiv2_control_scaled_new" 'function)) :pointer
  (eps_abs :double)
  (eps_rel :double)
  (a_y :double)
  (a_dydt :double)
  (scale_abs :pointer)
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_control_scaled_new" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_evolve_struct" 'classname)
	(#.(swig-lispify "dimension" 'slotname) :pointer)
	(#.(swig-lispify "y0" 'slotname) :pointer)
	(#.(swig-lispify "yerr" 'slotname) :pointer)
	(#.(swig-lispify "dydt_in" 'slotname) :pointer)
	(#.(swig-lispify "dydt_out" 'slotname) :pointer)
	(#.(swig-lispify "last_step" 'slotname) :double)
	(#.(swig-lispify "count" 'slotname) :unsigned-long)
	(#.(swig-lispify "failed_steps" 'slotname) :unsigned-long)
	(#.(swig-lispify "driver" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_struct" 'classname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "y0" 'slotname))

(cl:export '#.(swig-lispify "yerr" 'slotname))

(cl:export '#.(swig-lispify "dydt_in" 'slotname))

(cl:export '#.(swig-lispify "dydt_out" 'slotname))

(cl:export '#.(swig-lispify "last_step" 'slotname))

(cl:export '#.(swig-lispify "count" 'slotname))

(cl:export '#.(swig-lispify "failed_steps" 'slotname))

(cl:export '#.(swig-lispify "driver" 'slotname))

(cffi:defcfun ("gsl_odeiv2_evolve_alloc" #.(swig-lispify "gsl_odeiv2_evolve_alloc" 'function)) :pointer
  (dim :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_alloc" 'function))

(cffi:defcfun ("gsl_odeiv2_evolve_apply" #.(swig-lispify "gsl_odeiv2_evolve_apply" 'function)) :int
  (e :pointer)
  (con :pointer)
  (step :pointer)
  (dydt :pointer)
  (t_arg4 :pointer)
  (t1 :double)
  (h :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_apply" 'function))

(cffi:defcfun ("gsl_odeiv2_evolve_apply_fixed_step" #.(swig-lispify "gsl_odeiv2_evolve_apply_fixed_step" 'function)) :int
  (e :pointer)
  (con :pointer)
  (step :pointer)
  (dydt :pointer)
  (t_arg4 :pointer)
  (h0 :double)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_apply_fixed_step" 'function))

(cffi:defcfun ("gsl_odeiv2_evolve_reset" #.(swig-lispify "gsl_odeiv2_evolve_reset" 'function)) :int
  (e :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_reset" 'function))

(cffi:defcfun ("gsl_odeiv2_evolve_free" #.(swig-lispify "gsl_odeiv2_evolve_free" 'function)) :void
  (e :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_free" 'function))

(cffi:defcfun ("gsl_odeiv2_evolve_set_driver" #.(swig-lispify "gsl_odeiv2_evolve_set_driver" 'function)) :int
  (e :pointer)
  (d :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_evolve_set_driver" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_odeiv2_driver_struct" 'classname)
	(#.(swig-lispify "sys" 'slotname) :pointer)
	(#.(swig-lispify "s" 'slotname) :pointer)
	(#.(swig-lispify "c" 'slotname) :pointer)
	(#.(swig-lispify "e" 'slotname) :pointer)
	(#.(swig-lispify "h" 'slotname) :double)
	(#.(swig-lispify "hmin" 'slotname) :double)
	(#.(swig-lispify "hmax" 'slotname) :double)
	(#.(swig-lispify "n" 'slotname) :unsigned-long)
	(#.(swig-lispify "nmax" 'slotname) :unsigned-long))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_struct" 'classname))

(cl:export '#.(swig-lispify "sys" 'slotname))

(cl:export '#.(swig-lispify "s" 'slotname))

(cl:export '#.(swig-lispify "c" 'slotname))

(cl:export '#.(swig-lispify "e" 'slotname))

(cl:export '#.(swig-lispify "h" 'slotname))

(cl:export '#.(swig-lispify "hmin" 'slotname))

(cl:export '#.(swig-lispify "hmax" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cl:export '#.(swig-lispify "nmax" 'slotname))

(cffi:defcfun ("gsl_odeiv2_driver_alloc_y_new" #.(swig-lispify "gsl_odeiv2_driver_alloc_y_new" 'function)) :pointer
  (sys :pointer)
  (t_arg1 :pointer)
  (hstart :double)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_alloc_y_new" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_alloc_yp_new" #.(swig-lispify "gsl_odeiv2_driver_alloc_yp_new" 'function)) :pointer
  (sys :pointer)
  (t_arg1 :pointer)
  (hstart :double)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_alloc_yp_new" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_alloc_scaled_new" #.(swig-lispify "gsl_odeiv2_driver_alloc_scaled_new" 'function)) :pointer
  (sys :pointer)
  (t_arg1 :pointer)
  (hstart :double)
  (epsabs :double)
  (epsrel :double)
  (a_y :double)
  (a_dydt :double)
  (scale_abs :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_alloc_scaled_new" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_alloc_standard_new" #.(swig-lispify "gsl_odeiv2_driver_alloc_standard_new" 'function)) :pointer
  (sys :pointer)
  (t_arg1 :pointer)
  (hstart :double)
  (epsabs :double)
  (epsrel :double)
  (a_y :double)
  (a_dydt :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_alloc_standard_new" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_set_hmin" #.(swig-lispify "gsl_odeiv2_driver_set_hmin" 'function)) :int
  (d :pointer)
  (hmin :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_set_hmin" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_set_hmax" #.(swig-lispify "gsl_odeiv2_driver_set_hmax" 'function)) :int
  (d :pointer)
  (hmax :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_set_hmax" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_set_nmax" #.(swig-lispify "gsl_odeiv2_driver_set_nmax" 'function)) :int
  (d :pointer)
  (nmax :unsigned-long))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_set_nmax" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_apply" #.(swig-lispify "gsl_odeiv2_driver_apply" 'function)) :int
  (d :pointer)
  (t_arg1 :pointer)
  (t1 :double)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_apply" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_apply_fixed_step" #.(swig-lispify "gsl_odeiv2_driver_apply_fixed_step" 'function)) :int
  (d :pointer)
  (t_arg1 :pointer)
  (h :double)
  (n :unsigned-long)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_apply_fixed_step" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_reset" #.(swig-lispify "gsl_odeiv2_driver_reset" 'function)) :int
  (d :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_reset" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_reset_hstart" #.(swig-lispify "gsl_odeiv2_driver_reset_hstart" 'function)) :int
  (d :pointer)
  (hstart :double))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_reset_hstart" 'function))

(cffi:defcfun ("gsl_odeiv2_driver_free" #.(swig-lispify "gsl_odeiv2_driver_free" 'function)) :void
  (state :pointer))

(cl:export '#.(swig-lispify "gsl_odeiv2_driver_free" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_permutation_struct" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_struct" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cffi:defcfun ("gsl_permutation_alloc" #.(swig-lispify "gsl_permutation_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_alloc" 'function))

(cffi:defcfun ("gsl_permutation_calloc" #.(swig-lispify "gsl_permutation_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_calloc" 'function))

(cffi:defcfun ("gsl_permutation_init" #.(swig-lispify "gsl_permutation_init" 'function)) :void
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_init" 'function))

(cffi:defcfun ("gsl_permutation_free" #.(swig-lispify "gsl_permutation_free" 'function)) :void
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_free" 'function))

(cffi:defcfun ("gsl_permutation_memcpy" #.(swig-lispify "gsl_permutation_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_memcpy" 'function))

(cffi:defcfun ("gsl_permutation_fread" #.(swig-lispify "gsl_permutation_fread" 'function)) :int
  (stream :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_fread" 'function))

(cffi:defcfun ("gsl_permutation_fwrite" #.(swig-lispify "gsl_permutation_fwrite" 'function)) :int
  (stream :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_fwrite" 'function))

(cffi:defcfun ("gsl_permutation_fscanf" #.(swig-lispify "gsl_permutation_fscanf" 'function)) :int
  (stream :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_fscanf" 'function))

(cffi:defcfun ("gsl_permutation_fprintf" #.(swig-lispify "gsl_permutation_fprintf" 'function)) :int
  (stream :pointer)
  (p :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_permutation_fprintf" 'function))

(cffi:defcfun ("gsl_permutation_size" #.(swig-lispify "gsl_permutation_size" 'function)) :pointer
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_size" 'function))

(cffi:defcfun ("gsl_permutation_data" #.(swig-lispify "gsl_permutation_data" 'function)) :pointer
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_data" 'function))

(cffi:defcfun ("gsl_permutation_swap" #.(swig-lispify "gsl_permutation_swap" 'function)) :int
  (p :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_swap" 'function))

(cffi:defcfun ("gsl_permutation_valid" #.(swig-lispify "gsl_permutation_valid" 'function)) :int
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_valid" 'function))

(cffi:defcfun ("gsl_permutation_reverse" #.(swig-lispify "gsl_permutation_reverse" 'function)) :void
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_reverse" 'function))

(cffi:defcfun ("gsl_permutation_inverse" #.(swig-lispify "gsl_permutation_inverse" 'function)) :int
  (inv :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_inverse" 'function))

(cffi:defcfun ("gsl_permutation_next" #.(swig-lispify "gsl_permutation_next" 'function)) :int
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_next" 'function))

(cffi:defcfun ("gsl_permutation_prev" #.(swig-lispify "gsl_permutation_prev" 'function)) :int
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_prev" 'function))

(cffi:defcfun ("gsl_permutation_mul" #.(swig-lispify "gsl_permutation_mul" 'function)) :int
  (p :pointer)
  (pa :pointer)
  (pb :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_mul" 'function))

(cffi:defcfun ("gsl_permutation_linear_to_canonical" #.(swig-lispify "gsl_permutation_linear_to_canonical" 'function)) :int
  (q :pointer)
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_linear_to_canonical" 'function))

(cffi:defcfun ("gsl_permutation_canonical_to_linear" #.(swig-lispify "gsl_permutation_canonical_to_linear" 'function)) :int
  (p :pointer)
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_canonical_to_linear" 'function))

(cffi:defcfun ("gsl_permutation_inversions" #.(swig-lispify "gsl_permutation_inversions" 'function)) :pointer
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_inversions" 'function))

(cffi:defcfun ("gsl_permutation_linear_cycles" #.(swig-lispify "gsl_permutation_linear_cycles" 'function)) :pointer
  (p :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_linear_cycles" 'function))

(cffi:defcfun ("gsl_permutation_canonical_cycles" #.(swig-lispify "gsl_permutation_canonical_cycles" 'function)) :pointer
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_canonical_cycles" 'function))

(cffi:defcfun ("gsl_permutation_get" #.(swig-lispify "gsl_permutation_get" 'function)) :pointer
  (p :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_permutation_get" 'function))

(cffi:defcfun ("gsl_permute_char" #.(swig-lispify "gsl_permute_char" 'function)) :int
  (p :pointer)
  (data :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_char" 'function))

(cffi:defcfun ("gsl_permute_char_inverse" #.(swig-lispify "gsl_permute_char_inverse" 'function)) :int
  (p :pointer)
  (data :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_char_inverse" 'function))

(cffi:defcfun ("gsl_permute_complex" #.(swig-lispify "gsl_permute_complex" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_complex" 'function))

(cffi:defcfun ("gsl_permute_complex_inverse" #.(swig-lispify "gsl_permute_complex_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_complex_inverse" 'function))

(cffi:defcfun ("gsl_permute_complex_float" #.(swig-lispify "gsl_permute_complex_float" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_complex_float" 'function))

(cffi:defcfun ("gsl_permute_complex_float_inverse" #.(swig-lispify "gsl_permute_complex_float_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_complex_float_inverse" 'function))

(cffi:defcfun ("gsl_permute_complex_long_double" #.(swig-lispify "gsl_permute_complex_long_double" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_complex_long_double" 'function))

(cffi:defcfun ("gsl_permute_complex_long_double_inverse" #.(swig-lispify "gsl_permute_complex_long_double_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_complex_long_double_inverse" 'function))

(cffi:defcfun ("gsl_permute" #.(swig-lispify "gsl_permute" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute" 'function))

(cffi:defcfun ("gsl_permute_inverse" #.(swig-lispify "gsl_permute_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_inverse" 'function))

(cffi:defcfun ("gsl_permute_float" #.(swig-lispify "gsl_permute_float" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_float" 'function))

(cffi:defcfun ("gsl_permute_float_inverse" #.(swig-lispify "gsl_permute_float_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_float_inverse" 'function))

(cffi:defcfun ("gsl_permute_int" #.(swig-lispify "gsl_permute_int" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_int" 'function))

(cffi:defcfun ("gsl_permute_int_inverse" #.(swig-lispify "gsl_permute_int_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_int_inverse" 'function))

(cffi:defcfun ("gsl_permute_long" #.(swig-lispify "gsl_permute_long" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_long" 'function))

(cffi:defcfun ("gsl_permute_long_inverse" #.(swig-lispify "gsl_permute_long_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_long_inverse" 'function))

(cffi:defcfun ("gsl_permute_long_double" #.(swig-lispify "gsl_permute_long_double" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_long_double" 'function))

(cffi:defcfun ("gsl_permute_long_double_inverse" #.(swig-lispify "gsl_permute_long_double_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_long_double_inverse" 'function))

(cffi:defcfun ("gsl_permute_short" #.(swig-lispify "gsl_permute_short" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_short" 'function))

(cffi:defcfun ("gsl_permute_short_inverse" #.(swig-lispify "gsl_permute_short_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_short_inverse" 'function))

(cffi:defcfun ("gsl_permute_uchar" #.(swig-lispify "gsl_permute_uchar" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_uchar" 'function))

(cffi:defcfun ("gsl_permute_uchar_inverse" #.(swig-lispify "gsl_permute_uchar_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_uchar_inverse" 'function))

(cffi:defcfun ("gsl_permute_uint" #.(swig-lispify "gsl_permute_uint" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_uint" 'function))

(cffi:defcfun ("gsl_permute_uint_inverse" #.(swig-lispify "gsl_permute_uint_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_uint_inverse" 'function))

(cffi:defcfun ("gsl_permute_ulong" #.(swig-lispify "gsl_permute_ulong" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_ulong" 'function))

(cffi:defcfun ("gsl_permute_ulong_inverse" #.(swig-lispify "gsl_permute_ulong_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_ulong_inverse" 'function))

(cffi:defcfun ("gsl_permute_ushort" #.(swig-lispify "gsl_permute_ushort" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_ushort" 'function))

(cffi:defcfun ("gsl_permute_ushort_inverse" #.(swig-lispify "gsl_permute_ushort_inverse" 'function)) :int
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_permute_ushort_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_char" #.(swig-lispify "gsl_permute_vector_char" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_char" 'function))

(cffi:defcfun ("gsl_permute_vector_char_inverse" #.(swig-lispify "gsl_permute_vector_char_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_char_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_complex" #.(swig-lispify "gsl_permute_vector_complex" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_complex" 'function))

(cffi:defcfun ("gsl_permute_vector_complex_inverse" #.(swig-lispify "gsl_permute_vector_complex_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_complex_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_complex_float" #.(swig-lispify "gsl_permute_vector_complex_float" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_complex_float" 'function))

(cffi:defcfun ("gsl_permute_vector_complex_float_inverse" #.(swig-lispify "gsl_permute_vector_complex_float_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_complex_float_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_complex_long_double" #.(swig-lispify "gsl_permute_vector_complex_long_double" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_complex_long_double" 'function))

(cffi:defcfun ("gsl_permute_vector_complex_long_double_inverse" #.(swig-lispify "gsl_permute_vector_complex_long_double_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_complex_long_double_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector" #.(swig-lispify "gsl_permute_vector" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector" 'function))

(cffi:defcfun ("gsl_permute_vector_inverse" #.(swig-lispify "gsl_permute_vector_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_float" #.(swig-lispify "gsl_permute_vector_float" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_float" 'function))

(cffi:defcfun ("gsl_permute_vector_float_inverse" #.(swig-lispify "gsl_permute_vector_float_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_float_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_int" #.(swig-lispify "gsl_permute_vector_int" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_int" 'function))

(cffi:defcfun ("gsl_permute_vector_int_inverse" #.(swig-lispify "gsl_permute_vector_int_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_int_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_long" #.(swig-lispify "gsl_permute_vector_long" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_long" 'function))

(cffi:defcfun ("gsl_permute_vector_long_inverse" #.(swig-lispify "gsl_permute_vector_long_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_long_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_long_double" #.(swig-lispify "gsl_permute_vector_long_double" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_long_double" 'function))

(cffi:defcfun ("gsl_permute_vector_long_double_inverse" #.(swig-lispify "gsl_permute_vector_long_double_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_long_double_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_short" #.(swig-lispify "gsl_permute_vector_short" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_short" 'function))

(cffi:defcfun ("gsl_permute_vector_short_inverse" #.(swig-lispify "gsl_permute_vector_short_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_short_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_uchar" #.(swig-lispify "gsl_permute_vector_uchar" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_uchar" 'function))

(cffi:defcfun ("gsl_permute_vector_uchar_inverse" #.(swig-lispify "gsl_permute_vector_uchar_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_uchar_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_uint" #.(swig-lispify "gsl_permute_vector_uint" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_uint" 'function))

(cffi:defcfun ("gsl_permute_vector_uint_inverse" #.(swig-lispify "gsl_permute_vector_uint_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_uint_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_ulong" #.(swig-lispify "gsl_permute_vector_ulong" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_ulong" 'function))

(cffi:defcfun ("gsl_permute_vector_ulong_inverse" #.(swig-lispify "gsl_permute_vector_ulong_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_ulong_inverse" 'function))

(cffi:defcfun ("gsl_permute_vector_ushort" #.(swig-lispify "gsl_permute_vector_ushort" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_ushort" 'function))

(cffi:defcfun ("gsl_permute_vector_ushort_inverse" #.(swig-lispify "gsl_permute_vector_ushort_inverse" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_permute_vector_ushort_inverse" 'function))

(cffi:defcfun ("gsl_poly_eval" #.(swig-lispify "gsl_poly_eval" 'function)) :double
  (c :pointer)
  (len :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_poly_eval" 'function))

(cffi:defcfun ("gsl_poly_complex_eval" #.(swig-lispify "gsl_poly_complex_eval" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (c :pointer)
  (len :int)
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_poly_complex_eval" 'function))

(cffi:defcfun ("gsl_complex_poly_complex_eval" #.(swig-lispify "gsl_complex_poly_complex_eval" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (c :pointer)
  (len :int)
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_complex_poly_complex_eval" 'function))

(cffi:defcfun ("gsl_poly_eval_derivs" #.(swig-lispify "gsl_poly_eval_derivs" 'function)) :int
  (c :pointer)
  (lenc :pointer)
  (x :double)
  (res :pointer)
  (lenres :pointer))

(cl:export '#.(swig-lispify "gsl_poly_eval_derivs" 'function))

(cffi:defcfun ("gsl_poly_dd_init" #.(swig-lispify "gsl_poly_dd_init" 'function)) :int
  (dd :pointer)
  (x :pointer)
  (y :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_poly_dd_init" 'function))

(cffi:defcfun ("gsl_poly_dd_eval" #.(swig-lispify "gsl_poly_dd_eval" 'function)) :double
  (dd :pointer)
  (xa :pointer)
  (size :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_poly_dd_eval" 'function))

(cffi:defcfun ("gsl_poly_dd_taylor" #.(swig-lispify "gsl_poly_dd_taylor" 'function)) :int
  (c :pointer)
  (xp :double)
  (dd :pointer)
  (x :pointer)
  (size :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_poly_dd_taylor" 'function))

(cffi:defcfun ("gsl_poly_dd_hermite_init" #.(swig-lispify "gsl_poly_dd_hermite_init" 'function)) :int
  (dd :pointer)
  (z :pointer)
  (xa :pointer)
  (ya :pointer)
  (dya :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_poly_dd_hermite_init" 'function))

(cffi:defcfun ("gsl_poly_solve_quadratic" #.(swig-lispify "gsl_poly_solve_quadratic" 'function)) :int
  (a :double)
  (b :double)
  (c :double)
  (x0 :pointer)
  (x1 :pointer))

(cl:export '#.(swig-lispify "gsl_poly_solve_quadratic" 'function))

(cffi:defcfun ("gsl_poly_complex_solve_quadratic" #.(swig-lispify "gsl_poly_complex_solve_quadratic" 'function)) :int
  (a :double)
  (b :double)
  (c :double)
  (z0 :pointer)
  (z1 :pointer))

(cl:export '#.(swig-lispify "gsl_poly_complex_solve_quadratic" 'function))

(cffi:defcfun ("gsl_poly_solve_cubic" #.(swig-lispify "gsl_poly_solve_cubic" 'function)) :int
  (a :double)
  (b :double)
  (c :double)
  (x0 :pointer)
  (x1 :pointer)
  (x2 :pointer))

(cl:export '#.(swig-lispify "gsl_poly_solve_cubic" 'function))

(cffi:defcfun ("gsl_poly_complex_solve_cubic" #.(swig-lispify "gsl_poly_complex_solve_cubic" 'function)) :int
  (a :double)
  (b :double)
  (c :double)
  (z0 :pointer)
  (z1 :pointer)
  (z2 :pointer))

(cl:export '#.(swig-lispify "gsl_poly_complex_solve_cubic" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_poly_complex_workspace" 'classname)
	(#.(swig-lispify "nc" 'slotname) :pointer)
	(#.(swig-lispify "matrix" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_poly_complex_workspace" 'classname))

(cl:export '#.(swig-lispify "nc" 'slotname))

(cl:export '#.(swig-lispify "matrix" 'slotname))

(cffi:defcfun ("gsl_poly_complex_workspace_alloc" #.(swig-lispify "gsl_poly_complex_workspace_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_poly_complex_workspace_alloc" 'function))

(cffi:defcfun ("gsl_poly_complex_workspace_free" #.(swig-lispify "gsl_poly_complex_workspace_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_poly_complex_workspace_free" 'function))

(cffi:defcfun ("gsl_poly_complex_solve" #.(swig-lispify "gsl_poly_complex_solve" 'function)) :int
  (a :pointer)
  (n :pointer)
  (w :pointer)
  (z :pointer))

(cl:export '#.(swig-lispify "gsl_poly_complex_solve" 'function))

(cffi:defcfun ("gsl_pow_2" #.(swig-lispify "gsl_pow_2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_2" 'function))

(cffi:defcfun ("gsl_pow_3" #.(swig-lispify "gsl_pow_3" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_3" 'function))

(cffi:defcfun ("gsl_pow_4" #.(swig-lispify "gsl_pow_4" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_4" 'function))

(cffi:defcfun ("gsl_pow_5" #.(swig-lispify "gsl_pow_5" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_5" 'function))

(cffi:defcfun ("gsl_pow_6" #.(swig-lispify "gsl_pow_6" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_6" 'function))

(cffi:defcfun ("gsl_pow_7" #.(swig-lispify "gsl_pow_7" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_7" 'function))

(cffi:defcfun ("gsl_pow_8" #.(swig-lispify "gsl_pow_8" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_8" 'function))

(cffi:defcfun ("gsl_pow_9" #.(swig-lispify "gsl_pow_9" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_pow_9" 'function))

(cffi:defcfun ("gsl_pow_int" #.(swig-lispify "gsl_pow_int" 'function)) :double
  (x :double)
  (n :int))

(cl:export '#.(swig-lispify "gsl_pow_int" 'function))

(cffi:defcfun ("gsl_pow_uint" #.(swig-lispify "gsl_pow_uint" 'function)) :double
  (x :double)
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_pow_uint" 'function))

(cl:defconstant #.(swig-lispify "_GSL_PREC_T_NUM" 'constant) 3)

(cl:export '#.(swig-lispify "_GSL_PREC_T_NUM" 'constant))

(cffi:defcvar ("gsl_prec_eps" #.(swig-lispify "gsl_prec_eps" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_prec_eps" 'variable))

(cffi:defcvar ("gsl_prec_sqrt_eps" #.(swig-lispify "gsl_prec_sqrt_eps" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_prec_sqrt_eps" 'variable))

(cffi:defcvar ("gsl_prec_root3_eps" #.(swig-lispify "gsl_prec_root3_eps" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_prec_root3_eps" 'variable))

(cffi:defcvar ("gsl_prec_root4_eps" #.(swig-lispify "gsl_prec_root4_eps" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_prec_root4_eps" 'variable))

(cffi:defcvar ("gsl_prec_root5_eps" #.(swig-lispify "gsl_prec_root5_eps" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_prec_root5_eps" 'variable))

(cffi:defcvar ("gsl_prec_root6_eps" #.(swig-lispify "gsl_prec_root6_eps" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_prec_root6_eps" 'variable))

(cffi:defcstruct #.(swig-lispify "gsl_qrng_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "max_dimension" 'slotname) :unsigned-int)
	(#.(swig-lispify "state_size" 'slotname) :pointer)
	(#.(swig-lispify "init_state" 'slotname) :pointer)
	(#.(swig-lispify "get" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "max_dimension" 'slotname))

(cl:export '#.(swig-lispify "state_size" 'slotname))

(cl:export '#.(swig-lispify "init_state" 'slotname))

(cl:export '#.(swig-lispify "get" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_qrng" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "dimension" 'slotname) :unsigned-int)
	(#.(swig-lispify "state_size" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_qrng" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "dimension" 'slotname))

(cl:export '#.(swig-lispify "state_size" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcvar ("gsl_qrng_niederreiter_2" #.(swig-lispify "gsl_qrng_niederreiter_2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_qrng_niederreiter_2" 'variable))

(cffi:defcvar ("gsl_qrng_sobol" #.(swig-lispify "gsl_qrng_sobol" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_qrng_sobol" 'variable))

(cffi:defcvar ("gsl_qrng_halton" #.(swig-lispify "gsl_qrng_halton" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_qrng_halton" 'variable))

(cffi:defcvar ("gsl_qrng_reversehalton" #.(swig-lispify "gsl_qrng_reversehalton" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_qrng_reversehalton" 'variable))

(cffi:defcfun ("gsl_qrng_alloc" #.(swig-lispify "gsl_qrng_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (dimension :unsigned-int))

(cl:export '#.(swig-lispify "gsl_qrng_alloc" 'function))

(cffi:defcfun ("gsl_qrng_memcpy" #.(swig-lispify "gsl_qrng_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_memcpy" 'function))

(cffi:defcfun ("gsl_qrng_clone" #.(swig-lispify "gsl_qrng_clone" 'function)) :pointer
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_clone" 'function))

(cffi:defcfun ("gsl_qrng_free" #.(swig-lispify "gsl_qrng_free" 'function)) :void
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_free" 'function))

(cffi:defcfun ("gsl_qrng_init" #.(swig-lispify "gsl_qrng_init" 'function)) :void
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_init" 'function))

(cffi:defcfun ("gsl_qrng_name" #.(swig-lispify "gsl_qrng_name" 'function)) :string
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_name" 'function))

(cffi:defcfun ("gsl_qrng_size" #.(swig-lispify "gsl_qrng_size" 'function)) :pointer
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_size" 'function))

(cffi:defcfun ("gsl_qrng_state" #.(swig-lispify "gsl_qrng_state" 'function)) :pointer
  (q :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_state" 'function))

(cffi:defcfun ("gsl_qrng_get" #.(swig-lispify "gsl_qrng_get" 'function)) :int
  (q :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_qrng_get" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_rng_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "max" 'slotname) :unsigned-long)
	(#.(swig-lispify "min" 'slotname) :unsigned-long)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "get" 'slotname) :pointer)
	(#.(swig-lispify "get_double" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_rng_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "max" 'slotname))

(cl:export '#.(swig-lispify "min" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "get" 'slotname))

(cl:export '#.(swig-lispify "get_double" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_rng" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_rng" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcvar ("gsl_rng_borosh13" #.(swig-lispify "gsl_rng_borosh13" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_borosh13" 'variable))

(cffi:defcvar ("gsl_rng_coveyou" #.(swig-lispify "gsl_rng_coveyou" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_coveyou" 'variable))

(cffi:defcvar ("gsl_rng_cmrg" #.(swig-lispify "gsl_rng_cmrg" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_cmrg" 'variable))

(cffi:defcvar ("gsl_rng_fishman18" #.(swig-lispify "gsl_rng_fishman18" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_fishman18" 'variable))

(cffi:defcvar ("gsl_rng_fishman20" #.(swig-lispify "gsl_rng_fishman20" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_fishman20" 'variable))

(cffi:defcvar ("gsl_rng_fishman2x" #.(swig-lispify "gsl_rng_fishman2x" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_fishman2x" 'variable))

(cffi:defcvar ("gsl_rng_gfsr4" #.(swig-lispify "gsl_rng_gfsr4" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_gfsr4" 'variable))

(cffi:defcvar ("gsl_rng_knuthran" #.(swig-lispify "gsl_rng_knuthran" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_knuthran" 'variable))

(cffi:defcvar ("gsl_rng_knuthran2" #.(swig-lispify "gsl_rng_knuthran2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_knuthran2" 'variable))

(cffi:defcvar ("gsl_rng_knuthran2002" #.(swig-lispify "gsl_rng_knuthran2002" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_knuthran2002" 'variable))

(cffi:defcvar ("gsl_rng_lecuyer21" #.(swig-lispify "gsl_rng_lecuyer21" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_lecuyer21" 'variable))

(cffi:defcvar ("gsl_rng_minstd" #.(swig-lispify "gsl_rng_minstd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_minstd" 'variable))

(cffi:defcvar ("gsl_rng_mrg" #.(swig-lispify "gsl_rng_mrg" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_mrg" 'variable))

(cffi:defcvar ("gsl_rng_mt19937" #.(swig-lispify "gsl_rng_mt19937" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_mt19937" 'variable))

(cffi:defcvar ("gsl_rng_mt19937_1999" #.(swig-lispify "gsl_rng_mt19937_1999" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_mt19937_1999" 'variable))

(cffi:defcvar ("gsl_rng_mt19937_1998" #.(swig-lispify "gsl_rng_mt19937_1998" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_mt19937_1998" 'variable))

(cffi:defcvar ("gsl_rng_r250" #.(swig-lispify "gsl_rng_r250" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_r250" 'variable))

(cffi:defcvar ("gsl_rng_ran0" #.(swig-lispify "gsl_rng_ran0" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ran0" 'variable))

(cffi:defcvar ("gsl_rng_ran1" #.(swig-lispify "gsl_rng_ran1" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ran1" 'variable))

(cffi:defcvar ("gsl_rng_ran2" #.(swig-lispify "gsl_rng_ran2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ran2" 'variable))

(cffi:defcvar ("gsl_rng_ran3" #.(swig-lispify "gsl_rng_ran3" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ran3" 'variable))

(cffi:defcvar ("gsl_rng_rand" #.(swig-lispify "gsl_rng_rand" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_rand" 'variable))

(cffi:defcvar ("gsl_rng_rand48" #.(swig-lispify "gsl_rng_rand48" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_rand48" 'variable))

(cffi:defcvar ("gsl_rng_random128_bsd" #.(swig-lispify "gsl_rng_random128_bsd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random128_bsd" 'variable))

(cffi:defcvar ("gsl_rng_random128_glibc2" #.(swig-lispify "gsl_rng_random128_glibc2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random128_glibc2" 'variable))

(cffi:defcvar ("gsl_rng_random128_libc5" #.(swig-lispify "gsl_rng_random128_libc5" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random128_libc5" 'variable))

(cffi:defcvar ("gsl_rng_random256_bsd" #.(swig-lispify "gsl_rng_random256_bsd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random256_bsd" 'variable))

(cffi:defcvar ("gsl_rng_random256_glibc2" #.(swig-lispify "gsl_rng_random256_glibc2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random256_glibc2" 'variable))

(cffi:defcvar ("gsl_rng_random256_libc5" #.(swig-lispify "gsl_rng_random256_libc5" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random256_libc5" 'variable))

(cffi:defcvar ("gsl_rng_random32_bsd" #.(swig-lispify "gsl_rng_random32_bsd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random32_bsd" 'variable))

(cffi:defcvar ("gsl_rng_random32_glibc2" #.(swig-lispify "gsl_rng_random32_glibc2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random32_glibc2" 'variable))

(cffi:defcvar ("gsl_rng_random32_libc5" #.(swig-lispify "gsl_rng_random32_libc5" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random32_libc5" 'variable))

(cffi:defcvar ("gsl_rng_random64_bsd" #.(swig-lispify "gsl_rng_random64_bsd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random64_bsd" 'variable))

(cffi:defcvar ("gsl_rng_random64_glibc2" #.(swig-lispify "gsl_rng_random64_glibc2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random64_glibc2" 'variable))

(cffi:defcvar ("gsl_rng_random64_libc5" #.(swig-lispify "gsl_rng_random64_libc5" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random64_libc5" 'variable))

(cffi:defcvar ("gsl_rng_random8_bsd" #.(swig-lispify "gsl_rng_random8_bsd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random8_bsd" 'variable))

(cffi:defcvar ("gsl_rng_random8_glibc2" #.(swig-lispify "gsl_rng_random8_glibc2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random8_glibc2" 'variable))

(cffi:defcvar ("gsl_rng_random8_libc5" #.(swig-lispify "gsl_rng_random8_libc5" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random8_libc5" 'variable))

(cffi:defcvar ("gsl_rng_random_bsd" #.(swig-lispify "gsl_rng_random_bsd" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random_bsd" 'variable))

(cffi:defcvar ("gsl_rng_random_glibc2" #.(swig-lispify "gsl_rng_random_glibc2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random_glibc2" 'variable))

(cffi:defcvar ("gsl_rng_random_libc5" #.(swig-lispify "gsl_rng_random_libc5" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_random_libc5" 'variable))

(cffi:defcvar ("gsl_rng_randu" #.(swig-lispify "gsl_rng_randu" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_randu" 'variable))

(cffi:defcvar ("gsl_rng_ranf" #.(swig-lispify "gsl_rng_ranf" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranf" 'variable))

(cffi:defcvar ("gsl_rng_ranlux" #.(swig-lispify "gsl_rng_ranlux" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlux" 'variable))

(cffi:defcvar ("gsl_rng_ranlux389" #.(swig-lispify "gsl_rng_ranlux389" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlux389" 'variable))

(cffi:defcvar ("gsl_rng_ranlxd1" #.(swig-lispify "gsl_rng_ranlxd1" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlxd1" 'variable))

(cffi:defcvar ("gsl_rng_ranlxd2" #.(swig-lispify "gsl_rng_ranlxd2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlxd2" 'variable))

(cffi:defcvar ("gsl_rng_ranlxs0" #.(swig-lispify "gsl_rng_ranlxs0" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlxs0" 'variable))

(cffi:defcvar ("gsl_rng_ranlxs1" #.(swig-lispify "gsl_rng_ranlxs1" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlxs1" 'variable))

(cffi:defcvar ("gsl_rng_ranlxs2" #.(swig-lispify "gsl_rng_ranlxs2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranlxs2" 'variable))

(cffi:defcvar ("gsl_rng_ranmar" #.(swig-lispify "gsl_rng_ranmar" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_ranmar" 'variable))

(cffi:defcvar ("gsl_rng_slatec" #.(swig-lispify "gsl_rng_slatec" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_slatec" 'variable))

(cffi:defcvar ("gsl_rng_taus" #.(swig-lispify "gsl_rng_taus" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_taus" 'variable))

(cffi:defcvar ("gsl_rng_taus2" #.(swig-lispify "gsl_rng_taus2" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_taus2" 'variable))

(cffi:defcvar ("gsl_rng_taus113" #.(swig-lispify "gsl_rng_taus113" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_taus113" 'variable))

(cffi:defcvar ("gsl_rng_transputer" #.(swig-lispify "gsl_rng_transputer" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_transputer" 'variable))

(cffi:defcvar ("gsl_rng_tt800" #.(swig-lispify "gsl_rng_tt800" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_tt800" 'variable))

(cffi:defcvar ("gsl_rng_uni" #.(swig-lispify "gsl_rng_uni" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_uni" 'variable))

(cffi:defcvar ("gsl_rng_uni32" #.(swig-lispify "gsl_rng_uni32" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_uni32" 'variable))

(cffi:defcvar ("gsl_rng_vax" #.(swig-lispify "gsl_rng_vax" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_vax" 'variable))

(cffi:defcvar ("gsl_rng_waterman14" #.(swig-lispify "gsl_rng_waterman14" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_waterman14" 'variable))

(cffi:defcvar ("gsl_rng_zuf" #.(swig-lispify "gsl_rng_zuf" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_zuf" 'variable))

(cffi:defcfun ("gsl_rng_types_setup" #.(swig-lispify "gsl_rng_types_setup" 'function)) :pointer)

(cl:export '#.(swig-lispify "gsl_rng_types_setup" 'function))

(cffi:defcvar ("gsl_rng_default" #.(swig-lispify "gsl_rng_default" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_rng_default" 'variable))

(cffi:defcvar ("gsl_rng_default_seed" #.(swig-lispify "gsl_rng_default_seed" 'variable))
 :unsigned-long)

(cl:export '#.(swig-lispify "gsl_rng_default_seed" 'variable))

(cffi:defcfun ("gsl_rng_alloc" #.(swig-lispify "gsl_rng_alloc" 'function)) :pointer
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_rng_alloc" 'function))

(cffi:defcfun ("gsl_rng_memcpy" #.(swig-lispify "gsl_rng_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_rng_memcpy" 'function))

(cffi:defcfun ("gsl_rng_clone" #.(swig-lispify "gsl_rng_clone" 'function)) :pointer
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_clone" 'function))

(cffi:defcfun ("gsl_rng_free" #.(swig-lispify "gsl_rng_free" 'function)) :void
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_free" 'function))

(cffi:defcfun ("gsl_rng_set" #.(swig-lispify "gsl_rng_set" 'function)) :void
  (r :pointer)
  (seed :unsigned-long))

(cl:export '#.(swig-lispify "gsl_rng_set" 'function))

(cffi:defcfun ("gsl_rng_max" #.(swig-lispify "gsl_rng_max" 'function)) :unsigned-long
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_max" 'function))

(cffi:defcfun ("gsl_rng_min" #.(swig-lispify "gsl_rng_min" 'function)) :unsigned-long
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_min" 'function))

(cffi:defcfun ("gsl_rng_name" #.(swig-lispify "gsl_rng_name" 'function)) :string
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_name" 'function))

(cffi:defcfun ("gsl_rng_fread" #.(swig-lispify "gsl_rng_fread" 'function)) :int
  (stream :pointer)
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_fread" 'function))

(cffi:defcfun ("gsl_rng_fwrite" #.(swig-lispify "gsl_rng_fwrite" 'function)) :int
  (stream :pointer)
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_fwrite" 'function))

(cffi:defcfun ("gsl_rng_size" #.(swig-lispify "gsl_rng_size" 'function)) :pointer
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_size" 'function))

(cffi:defcfun ("gsl_rng_state" #.(swig-lispify "gsl_rng_state" 'function)) :pointer
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_state" 'function))

(cffi:defcfun ("gsl_rng_print_state" #.(swig-lispify "gsl_rng_print_state" 'function)) :void
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_print_state" 'function))

(cffi:defcfun ("gsl_rng_env_setup" #.(swig-lispify "gsl_rng_env_setup" 'function)) :pointer)

(cl:export '#.(swig-lispify "gsl_rng_env_setup" 'function))

(cffi:defcfun ("gsl_rng_get" #.(swig-lispify "gsl_rng_get" 'function)) :unsigned-long
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_get" 'function))

(cffi:defcfun ("gsl_rng_uniform" #.(swig-lispify "gsl_rng_uniform" 'function)) :double
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_uniform" 'function))

(cffi:defcfun ("gsl_rng_uniform_pos" #.(swig-lispify "gsl_rng_uniform_pos" 'function)) :double
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_rng_uniform_pos" 'function))

(cffi:defcfun ("gsl_rng_uniform_int" #.(swig-lispify "gsl_rng_uniform_int" 'function)) :unsigned-long
  (r :pointer)
  (n :unsigned-long))

(cl:export '#.(swig-lispify "gsl_rng_uniform_int" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_root_fsolver_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_root_fsolver" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "function" 'slotname) :pointer)
	(#.(swig-lispify "root" 'slotname) :double)
	(#.(swig-lispify "x_lower" 'slotname) :double)
	(#.(swig-lispify "x_upper" 'slotname) :double)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "function" 'slotname))

(cl:export '#.(swig-lispify "root" 'slotname))

(cl:export '#.(swig-lispify "x_lower" 'slotname))

(cl:export '#.(swig-lispify "x_upper" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_root_fdfsolver_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "set" 'slotname) :pointer)
	(#.(swig-lispify "iterate" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "set" 'slotname))

(cl:export '#.(swig-lispify "iterate" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_root_fdfsolver" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "fdf" 'slotname) :pointer)
	(#.(swig-lispify "root" 'slotname) :double)
	(#.(swig-lispify "state" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "fdf" 'slotname))

(cl:export '#.(swig-lispify "root" 'slotname))

(cl:export '#.(swig-lispify "state" 'slotname))

(cffi:defcfun ("gsl_root_fsolver_alloc" #.(swig-lispify "gsl_root_fsolver_alloc" 'function)) :pointer
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_alloc" 'function))

(cffi:defcfun ("gsl_root_fsolver_free" #.(swig-lispify "gsl_root_fsolver_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_free" 'function))

(cffi:defcfun ("gsl_root_fsolver_set" #.(swig-lispify "gsl_root_fsolver_set" 'function)) :int
  (s :pointer)
  (f :pointer)
  (x_lower :double)
  (x_upper :double))

(cl:export '#.(swig-lispify "gsl_root_fsolver_set" 'function))

(cffi:defcfun ("gsl_root_fsolver_iterate" #.(swig-lispify "gsl_root_fsolver_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_iterate" 'function))

(cffi:defcfun ("gsl_root_fsolver_name" #.(swig-lispify "gsl_root_fsolver_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_name" 'function))

(cffi:defcfun ("gsl_root_fsolver_root" #.(swig-lispify "gsl_root_fsolver_root" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_root" 'function))

(cffi:defcfun ("gsl_root_fsolver_x_lower" #.(swig-lispify "gsl_root_fsolver_x_lower" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_x_lower" 'function))

(cffi:defcfun ("gsl_root_fsolver_x_upper" #.(swig-lispify "gsl_root_fsolver_x_upper" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fsolver_x_upper" 'function))

(cffi:defcfun ("gsl_root_fdfsolver_alloc" #.(swig-lispify "gsl_root_fdfsolver_alloc" 'function)) :pointer
  (t_arg0 :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_alloc" 'function))

(cffi:defcfun ("gsl_root_fdfsolver_set" #.(swig-lispify "gsl_root_fdfsolver_set" 'function)) :int
  (s :pointer)
  (fdf :pointer)
  (root :double))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_set" 'function))

(cffi:defcfun ("gsl_root_fdfsolver_iterate" #.(swig-lispify "gsl_root_fdfsolver_iterate" 'function)) :int
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_iterate" 'function))

(cffi:defcfun ("gsl_root_fdfsolver_free" #.(swig-lispify "gsl_root_fdfsolver_free" 'function)) :void
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_free" 'function))

(cffi:defcfun ("gsl_root_fdfsolver_name" #.(swig-lispify "gsl_root_fdfsolver_name" 'function)) :string
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_name" 'function))

(cffi:defcfun ("gsl_root_fdfsolver_root" #.(swig-lispify "gsl_root_fdfsolver_root" 'function)) :double
  (s :pointer))

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_root" 'function))

(cffi:defcfun ("gsl_root_test_interval" #.(swig-lispify "gsl_root_test_interval" 'function)) :int
  (x_lower :double)
  (x_upper :double)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_root_test_interval" 'function))

(cffi:defcfun ("gsl_root_test_residual" #.(swig-lispify "gsl_root_test_residual" 'function)) :int
  (f :double)
  (epsabs :double))

(cl:export '#.(swig-lispify "gsl_root_test_residual" 'function))

(cffi:defcfun ("gsl_root_test_delta" #.(swig-lispify "gsl_root_test_delta" 'function)) :int
  (x1 :double)
  (x0 :double)
  (epsabs :double)
  (epsrel :double))

(cl:export '#.(swig-lispify "gsl_root_test_delta" 'function))

(cffi:defcvar ("gsl_root_fsolver_bisection" #.(swig-lispify "gsl_root_fsolver_bisection" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_root_fsolver_bisection" 'variable))

(cffi:defcvar ("gsl_root_fsolver_brent" #.(swig-lispify "gsl_root_fsolver_brent" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_root_fsolver_brent" 'variable))

(cffi:defcvar ("gsl_root_fsolver_falsepos" #.(swig-lispify "gsl_root_fsolver_falsepos" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_root_fsolver_falsepos" 'variable))

(cffi:defcvar ("gsl_root_fdfsolver_newton" #.(swig-lispify "gsl_root_fdfsolver_newton" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_newton" 'variable))

(cffi:defcvar ("gsl_root_fdfsolver_secant" #.(swig-lispify "gsl_root_fdfsolver_secant" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_secant" 'variable))

(cffi:defcvar ("gsl_root_fdfsolver_steffenson" #.(swig-lispify "gsl_root_fdfsolver_steffenson" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_root_fdfsolver_steffenson" 'variable))

(cffi:defcfun ("gsl_sf_airy_Ai_e" #.(swig-lispify "gsl_sf_airy_Ai_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai" #.(swig-lispify "gsl_sf_airy_Ai" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_e" #.(swig-lispify "gsl_sf_airy_Bi_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi" #.(swig-lispify "gsl_sf_airy_Bi" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai_scaled_e" #.(swig-lispify "gsl_sf_airy_Ai_scaled_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai_scaled" #.(swig-lispify "gsl_sf_airy_Ai_scaled" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_scaled" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_scaled_e" #.(swig-lispify "gsl_sf_airy_Bi_scaled_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_scaled" #.(swig-lispify "gsl_sf_airy_Bi_scaled" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_scaled" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai_deriv_e" #.(swig-lispify "gsl_sf_airy_Ai_deriv_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_deriv_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai_deriv" #.(swig-lispify "gsl_sf_airy_Ai_deriv" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_deriv" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_deriv_e" #.(swig-lispify "gsl_sf_airy_Bi_deriv_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_deriv_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_deriv" #.(swig-lispify "gsl_sf_airy_Bi_deriv" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_deriv" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai_deriv_scaled_e" #.(swig-lispify "gsl_sf_airy_Ai_deriv_scaled_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_deriv_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Ai_deriv_scaled" #.(swig-lispify "gsl_sf_airy_Ai_deriv_scaled" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Ai_deriv_scaled" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_deriv_scaled_e" #.(swig-lispify "gsl_sf_airy_Bi_deriv_scaled_e" 'function)) :int
  (x :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_deriv_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_airy_Bi_deriv_scaled" #.(swig-lispify "gsl_sf_airy_Bi_deriv_scaled" 'function)) :double
  (x :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_Bi_deriv_scaled" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Ai_e" #.(swig-lispify "gsl_sf_airy_zero_Ai_e" 'function)) :int
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Ai_e" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Ai" #.(swig-lispify "gsl_sf_airy_zero_Ai" 'function)) :double
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Ai" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Bi_e" #.(swig-lispify "gsl_sf_airy_zero_Bi_e" 'function)) :int
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Bi_e" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Bi" #.(swig-lispify "gsl_sf_airy_zero_Bi" 'function)) :double
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Bi" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Ai_deriv_e" #.(swig-lispify "gsl_sf_airy_zero_Ai_deriv_e" 'function)) :int
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Ai_deriv_e" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Ai_deriv" #.(swig-lispify "gsl_sf_airy_zero_Ai_deriv" 'function)) :double
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Ai_deriv" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Bi_deriv_e" #.(swig-lispify "gsl_sf_airy_zero_Bi_deriv_e" 'function)) :int
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Bi_deriv_e" 'function))

(cffi:defcfun ("gsl_sf_airy_zero_Bi_deriv" #.(swig-lispify "gsl_sf_airy_zero_Bi_deriv" 'function)) :double
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_airy_zero_Bi_deriv" 'function))

(cffi:defcfun ("gsl_sf_bessel_J0_e" #.(swig-lispify "gsl_sf_bessel_jj0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jj0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_J0" #.(swig-lispify "gsl_sf_bessel_jj0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jj0" 'function))

(cffi:defcfun ("gsl_sf_bessel_J1_e" #.(swig-lispify "gsl_sf_bessel_jj1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jj1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_J1" #.(swig-lispify "gsl_sf_bessel_jj1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jj1" 'function))

(cffi:defcfun ("gsl_sf_bessel_Jn_e" #.(swig-lispify "gsl_sf_bessel_jjn_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jjn_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Jn" #.(swig-lispify "gsl_sf_bessel_jjn" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jjn" 'function))

(cffi:defcfun ("gsl_sf_bessel_Jn_array" #.(swig-lispify "gsl_sf_bessel_jjn_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jjn_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_Y0_e" #.(swig-lispify "gsl_sf_bessel_yy0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yy0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Y0" #.(swig-lispify "gsl_sf_bessel_yy0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yy0" 'function))

(cffi:defcfun ("gsl_sf_bessel_Y1_e" #.(swig-lispify "gsl_sf_bessel_yy1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yy1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Y1" #.(swig-lispify "gsl_sf_bessel_yy1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yy1" 'function))

(cffi:defcfun ("gsl_sf_bessel_Yn_e" #.(swig-lispify "gsl_sf_bessel_yyn_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yyn_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Yn" #.(swig-lispify "gsl_sf_bessel_yyn" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yyn" 'function))

(cffi:defcfun ("gsl_sf_bessel_Yn_array" #.(swig-lispify "gsl_sf_bessel_yyn_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yyn_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_I0_e" #.(swig-lispify "gsl_sf_bessel_ii0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_I0" #.(swig-lispify "gsl_sf_bessel_ii0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii0" 'function))

(cffi:defcfun ("gsl_sf_bessel_I1_e" #.(swig-lispify "gsl_sf_bessel_ii1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_I1" #.(swig-lispify "gsl_sf_bessel_ii1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii1" 'function))

(cffi:defcfun ("gsl_sf_bessel_In_e" #.(swig-lispify "gsl_sf_bessel_iin_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iin_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_In" #.(swig-lispify "gsl_sf_bessel_iin" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iin" 'function))

(cffi:defcfun ("gsl_sf_bessel_In_array" #.(swig-lispify "gsl_sf_bessel_iin_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iin_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_I0_scaled_e" #.(swig-lispify "gsl_sf_bessel_ii0_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii0_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_I0_scaled" #.(swig-lispify "gsl_sf_bessel_ii0_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii0_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_I1_scaled_e" #.(swig-lispify "gsl_sf_bessel_ii1_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii1_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_I1_scaled" #.(swig-lispify "gsl_sf_bessel_ii1_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_ii1_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_In_scaled_e" #.(swig-lispify "gsl_sf_bessel_iin_scaled_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iin_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_In_scaled" #.(swig-lispify "gsl_sf_bessel_iin_scaled" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iin_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_In_scaled_array" #.(swig-lispify "gsl_sf_bessel_iin_scaled_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iin_scaled_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_K0_e" #.(swig-lispify "gsl_sf_bessel_kk0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_K0" #.(swig-lispify "gsl_sf_bessel_kk0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk0" 'function))

(cffi:defcfun ("gsl_sf_bessel_K1_e" #.(swig-lispify "gsl_sf_bessel_kk1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_K1" #.(swig-lispify "gsl_sf_bessel_kk1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk1" 'function))

(cffi:defcfun ("gsl_sf_bessel_Kn_e" #.(swig-lispify "gsl_sf_bessel_kkn_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kkn_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Kn" #.(swig-lispify "gsl_sf_bessel_kkn" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kkn" 'function))

(cffi:defcfun ("gsl_sf_bessel_Kn_array" #.(swig-lispify "gsl_sf_bessel_kkn_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kkn_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_K0_scaled_e" #.(swig-lispify "gsl_sf_bessel_kk0_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk0_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_K0_scaled" #.(swig-lispify "gsl_sf_bessel_kk0_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk0_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_K1_scaled_e" #.(swig-lispify "gsl_sf_bessel_kk1_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk1_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_K1_scaled" #.(swig-lispify "gsl_sf_bessel_kk1_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kk1_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_Kn_scaled_e" #.(swig-lispify "gsl_sf_bessel_kkn_scaled_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kkn_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Kn_scaled" #.(swig-lispify "gsl_sf_bessel_kkn_scaled" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kkn_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_Kn_scaled_array" #.(swig-lispify "gsl_sf_bessel_kkn_scaled_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kkn_scaled_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_j0_e" #.(swig-lispify "gsl_sf_bessel_j0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_j0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_j0" #.(swig-lispify "gsl_sf_bessel_j0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_j0" 'function))

(cffi:defcfun ("gsl_sf_bessel_j1_e" #.(swig-lispify "gsl_sf_bessel_j1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_j1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_j1" #.(swig-lispify "gsl_sf_bessel_j1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_j1" 'function))

(cffi:defcfun ("gsl_sf_bessel_j2_e" #.(swig-lispify "gsl_sf_bessel_j2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_j2_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_j2" #.(swig-lispify "gsl_sf_bessel_j2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_j2" 'function))

(cffi:defcfun ("gsl_sf_bessel_jl_e" #.(swig-lispify "gsl_sf_bessel_jl_e" 'function)) :int
  (l :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jl_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_jl" #.(swig-lispify "gsl_sf_bessel_jl" 'function)) :double
  (l :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jl" 'function))

(cffi:defcfun ("gsl_sf_bessel_jl_array" #.(swig-lispify "gsl_sf_bessel_jl_array" 'function)) :int
  (lmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jl_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_jl_steed_array" #.(swig-lispify "gsl_sf_bessel_jl_steed_array" 'function)) :int
  (lmax :int)
  (x :double)
  (jl_x_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jl_steed_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_y0_e" #.(swig-lispify "gsl_sf_bessel_y0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_y0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_y0" #.(swig-lispify "gsl_sf_bessel_y0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_y0" 'function))

(cffi:defcfun ("gsl_sf_bessel_y1_e" #.(swig-lispify "gsl_sf_bessel_y1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_y1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_y1" #.(swig-lispify "gsl_sf_bessel_y1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_y1" 'function))

(cffi:defcfun ("gsl_sf_bessel_y2_e" #.(swig-lispify "gsl_sf_bessel_y2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_y2_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_y2" #.(swig-lispify "gsl_sf_bessel_y2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_y2" 'function))

(cffi:defcfun ("gsl_sf_bessel_yl_e" #.(swig-lispify "gsl_sf_bessel_yl_e" 'function)) :int
  (l :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yl_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_yl" #.(swig-lispify "gsl_sf_bessel_yl" 'function)) :double
  (l :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yl" 'function))

(cffi:defcfun ("gsl_sf_bessel_yl_array" #.(swig-lispify "gsl_sf_bessel_yl_array" 'function)) :int
  (lmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yl_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_i0_scaled_e" #.(swig-lispify "gsl_sf_bessel_i0_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_i0_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_i0_scaled" #.(swig-lispify "gsl_sf_bessel_i0_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_i0_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_i1_scaled_e" #.(swig-lispify "gsl_sf_bessel_i1_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_i1_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_i1_scaled" #.(swig-lispify "gsl_sf_bessel_i1_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_i1_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_i2_scaled_e" #.(swig-lispify "gsl_sf_bessel_i2_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_i2_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_i2_scaled" #.(swig-lispify "gsl_sf_bessel_i2_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_i2_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_il_scaled_e" #.(swig-lispify "gsl_sf_bessel_il_scaled_e" 'function)) :int
  (l :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_il_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_il_scaled" #.(swig-lispify "gsl_sf_bessel_il_scaled" 'function)) :double
  (l :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_il_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_il_scaled_array" #.(swig-lispify "gsl_sf_bessel_il_scaled_array" 'function)) :int
  (lmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_il_scaled_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_k0_scaled_e" #.(swig-lispify "gsl_sf_bessel_k0_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_k0_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_k0_scaled" #.(swig-lispify "gsl_sf_bessel_k0_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_k0_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_k1_scaled_e" #.(swig-lispify "gsl_sf_bessel_k1_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_k1_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_k1_scaled" #.(swig-lispify "gsl_sf_bessel_k1_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_k1_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_k2_scaled_e" #.(swig-lispify "gsl_sf_bessel_k2_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_k2_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_k2_scaled" #.(swig-lispify "gsl_sf_bessel_k2_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_k2_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_kl_scaled_e" #.(swig-lispify "gsl_sf_bessel_kl_scaled_e" 'function)) :int
  (l :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kl_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_kl_scaled" #.(swig-lispify "gsl_sf_bessel_kl_scaled" 'function)) :double
  (l :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kl_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_kl_scaled_array" #.(swig-lispify "gsl_sf_bessel_kl_scaled_array" 'function)) :int
  (lmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kl_scaled_array" 'function))

(cffi:defcfun ("gsl_sf_bessel_Jnu_e" #.(swig-lispify "gsl_sf_bessel_jjnu_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jjnu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Jnu" #.(swig-lispify "gsl_sf_bessel_jjnu" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_jjnu" 'function))

(cffi:defcfun ("gsl_sf_bessel_Ynu_e" #.(swig-lispify "gsl_sf_bessel_yynu_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yynu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Ynu" #.(swig-lispify "gsl_sf_bessel_yynu" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_yynu" 'function))

(cffi:defcfun ("gsl_sf_bessel_sequence_Jnu_e" #.(swig-lispify "gsl_sf_bessel_sequence_Jnu_e" 'function)) :int
  (nu :double)
  (mode :unsigned-int)
  (size :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_sequence_Jnu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Inu_scaled_e" #.(swig-lispify "gsl_sf_bessel_iinu_scaled_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iinu_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Inu_scaled" #.(swig-lispify "gsl_sf_bessel_iinu_scaled" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iinu_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_Inu_e" #.(swig-lispify "gsl_sf_bessel_iinu_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iinu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Inu" #.(swig-lispify "gsl_sf_bessel_iinu" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_iinu" 'function))

(cffi:defcfun ("gsl_sf_bessel_Knu_scaled_e" #.(swig-lispify "gsl_sf_bessel_kknu_scaled_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kknu_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Knu_scaled" #.(swig-lispify "gsl_sf_bessel_kknu_scaled" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kknu_scaled" 'function))

(cffi:defcfun ("gsl_sf_bessel_Knu_scaled_e10_e" #.(swig-lispify "gsl_sf_bessel_kknu_scaled_e10_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kknu_scaled_e10_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Knu_e" #.(swig-lispify "gsl_sf_bessel_kknu_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kknu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_Knu" #.(swig-lispify "gsl_sf_bessel_kknu" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_kknu" 'function))

(cffi:defcfun ("gsl_sf_bessel_lnKnu_e" #.(swig-lispify "gsl_sf_bessel_lnKnu_e" 'function)) :int
  (nu :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_lnKnu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_lnKnu" #.(swig-lispify "gsl_sf_bessel_lnKnu" 'function)) :double
  (nu :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_bessel_lnKnu" 'function))

(cffi:defcfun ("gsl_sf_bessel_zero_J0_e" #.(swig-lispify "gsl_sf_bessel_zero_J0_e" 'function)) :int
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_zero_J0_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_zero_J0" #.(swig-lispify "gsl_sf_bessel_zero_J0" 'function)) :double
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_bessel_zero_J0" 'function))

(cffi:defcfun ("gsl_sf_bessel_zero_J1_e" #.(swig-lispify "gsl_sf_bessel_zero_J1_e" 'function)) :int
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_zero_J1_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_zero_J1" #.(swig-lispify "gsl_sf_bessel_zero_J1" 'function)) :double
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_bessel_zero_J1" 'function))

(cffi:defcfun ("gsl_sf_bessel_zero_Jnu_e" #.(swig-lispify "gsl_sf_bessel_zero_Jnu_e" 'function)) :int
  (nu :double)
  (s :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_bessel_zero_Jnu_e" 'function))

(cffi:defcfun ("gsl_sf_bessel_zero_Jnu" #.(swig-lispify "gsl_sf_bessel_zero_Jnu" 'function)) :double
  (nu :double)
  (s :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_bessel_zero_Jnu" 'function))

(cffi:defcfun ("gsl_sf_clausen_e" #.(swig-lispify "gsl_sf_clausen_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_clausen_e" 'function))

(cffi:defcfun ("gsl_sf_clausen" #.(swig-lispify "gsl_sf_clausen" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_clausen" 'function))

(cffi:defcfun ("gsl_sf_hydrogenicR_1_e" #.(swig-lispify "gsl_sf_hydrogenicR_1_e" 'function)) :int
  (Z :double)
  (r :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hydrogenicR_1_e" 'function))

(cffi:defcfun ("gsl_sf_hydrogenicR_1" #.(swig-lispify "gsl_sf_hydrogenicR_1" 'function)) :double
  (Z :double)
  (r :double))

(cl:export '#.(swig-lispify "gsl_sf_hydrogenicR_1" 'function))

(cffi:defcfun ("gsl_sf_hydrogenicR_e" #.(swig-lispify "gsl_sf_hydrogenicR_e" 'function)) :int
  (n :int)
  (l :int)
  (Z :double)
  (r :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hydrogenicR_e" 'function))

(cffi:defcfun ("gsl_sf_hydrogenicR" #.(swig-lispify "gsl_sf_hydrogenicR" 'function)) :double
  (n :int)
  (l :int)
  (Z :double)
  (r :double))

(cl:export '#.(swig-lispify "gsl_sf_hydrogenicR" 'function))

(cffi:defcfun ("gsl_sf_coulomb_wave_FG_e" #.(swig-lispify "gsl_sf_coulomb_wave_FG_e" 'function)) :int
  (eta :double)
  (x :double)
  (lam_F :double)
  (k_lam_G :int)
  (F :pointer)
  (Fp :pointer)
  (G :pointer)
  (Gp :pointer)
  (exp_F :pointer)
  (exp_G :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_wave_FG_e" 'function))

(cffi:defcfun ("gsl_sf_coulomb_wave_F_array" #.(swig-lispify "gsl_sf_coulomb_wave_F_array" 'function)) :int
  (lam_min :double)
  (kmax :int)
  (eta :double)
  (x :double)
  (fc_array :pointer)
  (F_exponent :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_wave_F_array" 'function))

(cffi:defcfun ("gsl_sf_coulomb_wave_FG_array" #.(swig-lispify "gsl_sf_coulomb_wave_FG_array" 'function)) :int
  (lam_min :double)
  (kmax :int)
  (eta :double)
  (x :double)
  (fc_array :pointer)
  (gc_array :pointer)
  (F_exponent :pointer)
  (G_exponent :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_wave_FG_array" 'function))

(cffi:defcfun ("gsl_sf_coulomb_wave_FGp_array" #.(swig-lispify "gsl_sf_coulomb_wave_FGp_array" 'function)) :int
  (lam_min :double)
  (kmax :int)
  (eta :double)
  (x :double)
  (fc_array :pointer)
  (fcp_array :pointer)
  (gc_array :pointer)
  (gcp_array :pointer)
  (F_exponent :pointer)
  (G_exponent :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_wave_FGp_array" 'function))

(cffi:defcfun ("gsl_sf_coulomb_wave_sphF_array" #.(swig-lispify "gsl_sf_coulomb_wave_sphF_array" 'function)) :int
  (lam_min :double)
  (kmax :int)
  (eta :double)
  (x :double)
  (fc_array :pointer)
  (F_exponent :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_wave_sphF_array" 'function))

(cffi:defcfun ("gsl_sf_coulomb_CL_e" #.(swig-lispify "gsl_sf_coulomb_CL_e" 'function)) :int
  (L :double)
  (eta :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_CL_e" 'function))

(cffi:defcfun ("gsl_sf_coulomb_CL_array" #.(swig-lispify "gsl_sf_coulomb_CL_array" 'function)) :int
  (Lmin :double)
  (kmax :int)
  (eta :double)
  (cl :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coulomb_CL_array" 'function))

(cffi:defcfun ("gsl_sf_coupling_3j_e" #.(swig-lispify "gsl_sf_coupling_3j_e" 'function)) :int
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_ma :int)
  (two_mb :int)
  (two_mc :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coupling_3j_e" 'function))

(cffi:defcfun ("gsl_sf_coupling_3j" #.(swig-lispify "gsl_sf_coupling_3j" 'function)) :double
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_ma :int)
  (two_mb :int)
  (two_mc :int))

(cl:export '#.(swig-lispify "gsl_sf_coupling_3j" 'function))

(cffi:defcfun ("gsl_sf_coupling_6j_e" #.(swig-lispify "gsl_sf_coupling_6j_e" 'function)) :int
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coupling_6j_e" 'function))

(cffi:defcfun ("gsl_sf_coupling_6j" #.(swig-lispify "gsl_sf_coupling_6j" 'function)) :double
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int))

(cl:export '#.(swig-lispify "gsl_sf_coupling_6j" 'function))

(cffi:defcfun ("gsl_sf_coupling_RacahW_e" #.(swig-lispify "gsl_sf_coupling_RacahW_e" 'function)) :int
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coupling_RacahW_e" 'function))

(cffi:defcfun ("gsl_sf_coupling_RacahW" #.(swig-lispify "gsl_sf_coupling_RacahW" 'function)) :double
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int))

(cl:export '#.(swig-lispify "gsl_sf_coupling_RacahW" 'function))

(cffi:defcfun ("gsl_sf_coupling_9j_e" #.(swig-lispify "gsl_sf_coupling_9j_e" 'function)) :int
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int)
  (two_jg :int)
  (two_jh :int)
  (two_ji :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coupling_9j_e" 'function))

(cffi:defcfun ("gsl_sf_coupling_9j" #.(swig-lispify "gsl_sf_coupling_9j" 'function)) :double
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int)
  (two_jg :int)
  (two_jh :int)
  (two_ji :int))

(cl:export '#.(swig-lispify "gsl_sf_coupling_9j" 'function))

(cffi:defcfun ("gsl_sf_coupling_6j_INCORRECT_e" #.(swig-lispify "gsl_sf_coupling_6j_INCORRECT_e" 'function)) :int
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_coupling_6j_INCORRECT_e" 'function))

(cffi:defcfun ("gsl_sf_coupling_6j_INCORRECT" #.(swig-lispify "gsl_sf_coupling_6j_INCORRECT" 'function)) :double
  (two_ja :int)
  (two_jb :int)
  (two_jc :int)
  (two_jd :int)
  (two_je :int)
  (two_jf :int))

(cl:export '#.(swig-lispify "gsl_sf_coupling_6j_INCORRECT" 'function))

(cffi:defcfun ("gsl_sf_dawson_e" #.(swig-lispify "gsl_sf_dawson_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_dawson_e" 'function))

(cffi:defcfun ("gsl_sf_dawson" #.(swig-lispify "gsl_sf_dawson" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_dawson" 'function))

(cffi:defcfun ("gsl_sf_debye_1_e" #.(swig-lispify "gsl_sf_debye_1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_debye_1_e" 'function))

(cffi:defcfun ("gsl_sf_debye_1" #.(swig-lispify "gsl_sf_debye_1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_debye_1" 'function))

(cffi:defcfun ("gsl_sf_debye_2_e" #.(swig-lispify "gsl_sf_debye_2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_debye_2_e" 'function))

(cffi:defcfun ("gsl_sf_debye_2" #.(swig-lispify "gsl_sf_debye_2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_debye_2" 'function))

(cffi:defcfun ("gsl_sf_debye_3_e" #.(swig-lispify "gsl_sf_debye_3_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_debye_3_e" 'function))

(cffi:defcfun ("gsl_sf_debye_3" #.(swig-lispify "gsl_sf_debye_3" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_debye_3" 'function))

(cffi:defcfun ("gsl_sf_debye_4_e" #.(swig-lispify "gsl_sf_debye_4_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_debye_4_e" 'function))

(cffi:defcfun ("gsl_sf_debye_4" #.(swig-lispify "gsl_sf_debye_4" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_debye_4" 'function))

(cffi:defcfun ("gsl_sf_debye_5_e" #.(swig-lispify "gsl_sf_debye_5_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_debye_5_e" 'function))

(cffi:defcfun ("gsl_sf_debye_5" #.(swig-lispify "gsl_sf_debye_5" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_debye_5" 'function))

(cffi:defcfun ("gsl_sf_debye_6_e" #.(swig-lispify "gsl_sf_debye_6_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_debye_6_e" 'function))

(cffi:defcfun ("gsl_sf_debye_6" #.(swig-lispify "gsl_sf_debye_6" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_debye_6" 'function))

(cffi:defcfun ("gsl_sf_dilog_e" #.(swig-lispify "gsl_sf_dilog_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_dilog_e" 'function))

(cffi:defcfun ("gsl_sf_dilog" #.(swig-lispify "gsl_sf_dilog" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_dilog" 'function))

(cffi:defcfun ("gsl_sf_complex_dilog_xy_e" #.(swig-lispify "gsl_sf_complex_dilog_xy_e" 'function)) :int
  (x :double)
  (y :double)
  (result_re :pointer)
  (result_im :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_dilog_xy_e" 'function))

(cffi:defcfun ("gsl_sf_complex_dilog_e" #.(swig-lispify "gsl_sf_complex_dilog_e" 'function)) :int
  (r :double)
  (theta :double)
  (result_re :pointer)
  (result_im :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_dilog_e" 'function))

(cffi:defcfun ("gsl_sf_complex_spence_xy_e" #.(swig-lispify "gsl_sf_complex_spence_xy_e" 'function)) :int
  (x :double)
  (y :double)
  (real_sp :pointer)
  (imag_sp :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_spence_xy_e" 'function))

(cffi:defcfun ("gsl_sf_multiply_e" #.(swig-lispify "gsl_sf_multiply_e" 'function)) :int
  (x :double)
  (y :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_multiply_e" 'function))

(cffi:defcfun ("gsl_sf_multiply" #.(swig-lispify "gsl_sf_multiply" 'function)) :double
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_sf_multiply" 'function))

(cffi:defcfun ("gsl_sf_multiply_err_e" #.(swig-lispify "gsl_sf_multiply_err_e" 'function)) :int
  (x :double)
  (dx :double)
  (y :double)
  (dy :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_multiply_err_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_Kcomp_e" #.(swig-lispify "gsl_sf_ellint_Kcomp_e" 'function)) :int
  (k :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Kcomp_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_Kcomp" #.(swig-lispify "gsl_sf_ellint_Kcomp" 'function)) :double
  (k :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Kcomp" 'function))

(cffi:defcfun ("gsl_sf_ellint_Ecomp_e" #.(swig-lispify "gsl_sf_ellint_Ecomp_e" 'function)) :int
  (k :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Ecomp_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_Ecomp" #.(swig-lispify "gsl_sf_ellint_Ecomp" 'function)) :double
  (k :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Ecomp" 'function))

(cffi:defcfun ("gsl_sf_ellint_Pcomp_e" #.(swig-lispify "gsl_sf_ellint_Pcomp_e" 'function)) :int
  (k :double)
  (n :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Pcomp_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_Pcomp" #.(swig-lispify "gsl_sf_ellint_Pcomp" 'function)) :double
  (k :double)
  (n :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Pcomp" 'function))

(cffi:defcfun ("gsl_sf_ellint_Dcomp_e" #.(swig-lispify "gsl_sf_ellint_Dcomp_e" 'function)) :int
  (k :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Dcomp_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_Dcomp" #.(swig-lispify "gsl_sf_ellint_Dcomp" 'function)) :double
  (k :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_Dcomp" 'function))

(cffi:defcfun ("gsl_sf_ellint_F_e" #.(swig-lispify "gsl_sf_ellint_F_e" 'function)) :int
  (phi :double)
  (k :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_F_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_F" #.(swig-lispify "gsl_sf_ellint_F" 'function)) :double
  (phi :double)
  (k :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_F" 'function))

(cffi:defcfun ("gsl_sf_ellint_E_e" #.(swig-lispify "gsl_sf_ellint_E_e" 'function)) :int
  (phi :double)
  (k :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_E_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_E" #.(swig-lispify "gsl_sf_ellint_E" 'function)) :double
  (phi :double)
  (k :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_E" 'function))

(cffi:defcfun ("gsl_sf_ellint_P_e" #.(swig-lispify "gsl_sf_ellint_P_e" 'function)) :int
  (phi :double)
  (k :double)
  (n :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_P_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_P" #.(swig-lispify "gsl_sf_ellint_P" 'function)) :double
  (phi :double)
  (k :double)
  (n :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_P" 'function))

(cffi:defcfun ("gsl_sf_ellint_D_e" #.(swig-lispify "gsl_sf_ellint_D_e" 'function)) :int
  (phi :double)
  (k :double)
  (n :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_D_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_D" #.(swig-lispify "gsl_sf_ellint_D" 'function)) :double
  (phi :double)
  (k :double)
  (n :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_D" 'function))

(cffi:defcfun ("gsl_sf_ellint_RC_e" #.(swig-lispify "gsl_sf_ellint_RC_e" 'function)) :int
  (x :double)
  (y :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RC_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_RC" #.(swig-lispify "gsl_sf_ellint_RC" 'function)) :double
  (x :double)
  (y :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RC" 'function))

(cffi:defcfun ("gsl_sf_ellint_RD_e" #.(swig-lispify "gsl_sf_ellint_RD_e" 'function)) :int
  (x :double)
  (y :double)
  (z :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RD_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_RD" #.(swig-lispify "gsl_sf_ellint_RD" 'function)) :double
  (x :double)
  (y :double)
  (z :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RD" 'function))

(cffi:defcfun ("gsl_sf_ellint_RF_e" #.(swig-lispify "gsl_sf_ellint_RF_e" 'function)) :int
  (x :double)
  (y :double)
  (z :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RF_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_RF" #.(swig-lispify "gsl_sf_ellint_RF" 'function)) :double
  (x :double)
  (y :double)
  (z :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RF" 'function))

(cffi:defcfun ("gsl_sf_ellint_RJ_e" #.(swig-lispify "gsl_sf_ellint_RJ_e" 'function)) :int
  (x :double)
  (y :double)
  (z :double)
  (p :double)
  (mode :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RJ_e" 'function))

(cffi:defcfun ("gsl_sf_ellint_RJ" #.(swig-lispify "gsl_sf_ellint_RJ" 'function)) :double
  (x :double)
  (y :double)
  (z :double)
  (p :double)
  (mode :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_ellint_RJ" 'function))

(cffi:defcfun ("gsl_sf_elljac_e" #.(swig-lispify "gsl_sf_elljac_e" 'function)) :int
  (u :double)
  (m :double)
  (sn :pointer)
  (cn :pointer)
  (dn :pointer))

(cl:export '#.(swig-lispify "gsl_sf_elljac_e" 'function))

(cffi:defcfun ("gsl_sf_erfc_e" #.(swig-lispify "gsl_sf_erfc_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_erfc_e" 'function))

(cffi:defcfun ("gsl_sf_erfc" #.(swig-lispify "gsl_sf_erfc" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_erfc" 'function))

(cffi:defcfun ("gsl_sf_log_erfc_e" #.(swig-lispify "gsl_sf_log_erfc_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_log_erfc_e" 'function))

(cffi:defcfun ("gsl_sf_log_erfc" #.(swig-lispify "gsl_sf_log_erfc" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_log_erfc" 'function))

(cffi:defcfun ("gsl_sf_erf_e" #.(swig-lispify "gsl_sf_erf_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_erf_e" 'function))

(cffi:defcfun ("gsl_sf_erf" #.(swig-lispify "gsl_sf_erf" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_erf" 'function))

(cffi:defcfun ("gsl_sf_erf_Z_e" #.(swig-lispify "gsl_sf_erf_Z_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_erf_Z_e" 'function))

(cffi:defcfun ("gsl_sf_erf_Q_e" #.(swig-lispify "gsl_sf_erf_Q_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_erf_Q_e" 'function))

(cffi:defcfun ("gsl_sf_erf_Z" #.(swig-lispify "gsl_sf_erf_Z" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_erf_Z" 'function))

(cffi:defcfun ("gsl_sf_erf_Q" #.(swig-lispify "gsl_sf_erf_Q" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_erf_Q" 'function))

(cffi:defcfun ("gsl_sf_hazard_e" #.(swig-lispify "gsl_sf_hazard_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hazard_e" 'function))

(cffi:defcfun ("gsl_sf_hazard" #.(swig-lispify "gsl_sf_hazard" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hazard" 'function))

(cffi:defcfun ("gsl_sf_exp_e" #.(swig-lispify "gsl_sf_exp_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_e" 'function))

(cffi:defcfun ("gsl_sf_exp" #.(swig-lispify "gsl_sf_exp" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_exp" 'function))

(cffi:defcfun ("gsl_sf_exp_e10_e" #.(swig-lispify "gsl_sf_exp_e10_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_e10_e" 'function))

(cffi:defcfun ("gsl_sf_exp_mult_e" #.(swig-lispify "gsl_sf_exp_mult_e" 'function)) :int
  (x :double)
  (y :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_mult_e" 'function))

(cffi:defcfun ("gsl_sf_exp_mult" #.(swig-lispify "gsl_sf_exp_mult" 'function)) :double
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_sf_exp_mult" 'function))

(cffi:defcfun ("gsl_sf_exp_mult_e10_e" #.(swig-lispify "gsl_sf_exp_mult_e10_e" 'function)) :int
  (x :double)
  (y :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_mult_e10_e" 'function))

(cffi:defcfun ("gsl_sf_expm1_e" #.(swig-lispify "gsl_sf_expm1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expm1_e" 'function))

(cffi:defcfun ("gsl_sf_expm1" #.(swig-lispify "gsl_sf_expm1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expm1" 'function))

(cffi:defcfun ("gsl_sf_exprel_e" #.(swig-lispify "gsl_sf_exprel_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exprel_e" 'function))

(cffi:defcfun ("gsl_sf_exprel" #.(swig-lispify "gsl_sf_exprel" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_exprel" 'function))

(cffi:defcfun ("gsl_sf_exprel_2_e" #.(swig-lispify "gsl_sf_exprel_2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exprel_2_e" 'function))

(cffi:defcfun ("gsl_sf_exprel_2" #.(swig-lispify "gsl_sf_exprel_2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_exprel_2" 'function))

(cffi:defcfun ("gsl_sf_exprel_n_e" #.(swig-lispify "gsl_sf_exprel_n_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exprel_n_e" 'function))

(cffi:defcfun ("gsl_sf_exprel_n" #.(swig-lispify "gsl_sf_exprel_n" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_exprel_n" 'function))

(cffi:defcfun ("gsl_sf_exprel_n_CF_e" #.(swig-lispify "gsl_sf_exprel_n_CF_e" 'function)) :int
  (n :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exprel_n_CF_e" 'function))

(cffi:defcfun ("gsl_sf_exp_err_e" #.(swig-lispify "gsl_sf_exp_err_e" 'function)) :int
  (x :double)
  (dx :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_err_e" 'function))

(cffi:defcfun ("gsl_sf_exp_err_e10_e" #.(swig-lispify "gsl_sf_exp_err_e10_e" 'function)) :int
  (x :double)
  (dx :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_err_e10_e" 'function))

(cffi:defcfun ("gsl_sf_exp_mult_err_e" #.(swig-lispify "gsl_sf_exp_mult_err_e" 'function)) :int
  (x :double)
  (dx :double)
  (y :double)
  (dy :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_mult_err_e" 'function))

(cffi:defcfun ("gsl_sf_exp_mult_err_e10_e" #.(swig-lispify "gsl_sf_exp_mult_err_e10_e" 'function)) :int
  (x :double)
  (dx :double)
  (y :double)
  (dy :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_exp_mult_err_e10_e" 'function))

(cffi:defcfun ("gsl_sf_expint_E1_e" #.(swig-lispify "gsl_sf_expint_E1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_E1_e" 'function))

(cffi:defcfun ("gsl_sf_expint_E1" #.(swig-lispify "gsl_sf_expint_E1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_E1" 'function))

(cffi:defcfun ("gsl_sf_expint_E2_e" #.(swig-lispify "gsl_sf_expint_E2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_E2_e" 'function))

(cffi:defcfun ("gsl_sf_expint_E2" #.(swig-lispify "gsl_sf_expint_E2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_E2" 'function))

(cffi:defcfun ("gsl_sf_expint_En_e" #.(swig-lispify "gsl_sf_expint_En_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_En_e" 'function))

(cffi:defcfun ("gsl_sf_expint_En" #.(swig-lispify "gsl_sf_expint_En" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_En" 'function))

(cffi:defcfun ("gsl_sf_expint_E1_scaled_e" #.(swig-lispify "gsl_sf_expint_E1_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_E1_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_expint_E1_scaled" #.(swig-lispify "gsl_sf_expint_E1_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_E1_scaled" 'function))

(cffi:defcfun ("gsl_sf_expint_E2_scaled_e" #.(swig-lispify "gsl_sf_expint_E2_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_E2_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_expint_E2_scaled" #.(swig-lispify "gsl_sf_expint_E2_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_E2_scaled" 'function))

(cffi:defcfun ("gsl_sf_expint_En_scaled_e" #.(swig-lispify "gsl_sf_expint_En_scaled_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_En_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_expint_En_scaled" #.(swig-lispify "gsl_sf_expint_En_scaled" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_En_scaled" 'function))

(cffi:defcfun ("gsl_sf_expint_Ei_e" #.(swig-lispify "gsl_sf_expint_Ei_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_Ei_e" 'function))

(cffi:defcfun ("gsl_sf_expint_Ei" #.(swig-lispify "gsl_sf_expint_Ei" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_Ei" 'function))

(cffi:defcfun ("gsl_sf_expint_Ei_scaled_e" #.(swig-lispify "gsl_sf_expint_Ei_scaled_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_Ei_scaled_e" 'function))

(cffi:defcfun ("gsl_sf_expint_Ei_scaled" #.(swig-lispify "gsl_sf_expint_Ei_scaled" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_Ei_scaled" 'function))

(cffi:defcfun ("gsl_sf_Shi_e" #.(swig-lispify "gsl_sf_Shi_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_Shi_e" 'function))

(cffi:defcfun ("gsl_sf_Shi" #.(swig-lispify "gsl_sf_Shi" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_Shi" 'function))

(cffi:defcfun ("gsl_sf_Chi_e" #.(swig-lispify "gsl_sf_Chi_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_Chi_e" 'function))

(cffi:defcfun ("gsl_sf_Chi" #.(swig-lispify "gsl_sf_Chi" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_Chi" 'function))

(cffi:defcfun ("gsl_sf_expint_3_e" #.(swig-lispify "gsl_sf_expint_3_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_expint_3_e" 'function))

(cffi:defcfun ("gsl_sf_expint_3" #.(swig-lispify "gsl_sf_expint_3" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_expint_3" 'function))

(cffi:defcfun ("gsl_sf_Si_e" #.(swig-lispify "gsl_sf_Si_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_Si_e" 'function))

(cffi:defcfun ("gsl_sf_Si" #.(swig-lispify "gsl_sf_Si" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_Si" 'function))

(cffi:defcfun ("gsl_sf_Ci_e" #.(swig-lispify "gsl_sf_Ci_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_Ci_e" 'function))

(cffi:defcfun ("gsl_sf_Ci" #.(swig-lispify "gsl_sf_Ci" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_Ci" 'function))

(cffi:defcfun ("gsl_sf_atanint_e" #.(swig-lispify "gsl_sf_atanint_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_atanint_e" 'function))

(cffi:defcfun ("gsl_sf_atanint" #.(swig-lispify "gsl_sf_atanint" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_atanint" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_m1_e" #.(swig-lispify "gsl_sf_fermi_dirac_m1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_m1_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_m1" #.(swig-lispify "gsl_sf_fermi_dirac_m1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_m1" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_0_e" #.(swig-lispify "gsl_sf_fermi_dirac_0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_0_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_0" #.(swig-lispify "gsl_sf_fermi_dirac_0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_0" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_1_e" #.(swig-lispify "gsl_sf_fermi_dirac_1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_1_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_1" #.(swig-lispify "gsl_sf_fermi_dirac_1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_1" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_2_e" #.(swig-lispify "gsl_sf_fermi_dirac_2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_2_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_2" #.(swig-lispify "gsl_sf_fermi_dirac_2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_2" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_int_e" #.(swig-lispify "gsl_sf_fermi_dirac_int_e" 'function)) :int
  (j :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_int_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_int" #.(swig-lispify "gsl_sf_fermi_dirac_int" 'function)) :double
  (j :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_int" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_mhalf_e" #.(swig-lispify "gsl_sf_fermi_dirac_mhalf_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_mhalf_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_mhalf" #.(swig-lispify "gsl_sf_fermi_dirac_mhalf" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_mhalf" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_half_e" #.(swig-lispify "gsl_sf_fermi_dirac_half_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_half_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_half" #.(swig-lispify "gsl_sf_fermi_dirac_half" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_half" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_3half_e" #.(swig-lispify "gsl_sf_fermi_dirac_3half_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_3half_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_3half" #.(swig-lispify "gsl_sf_fermi_dirac_3half" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_3half" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_inc_0_e" #.(swig-lispify "gsl_sf_fermi_dirac_inc_0_e" 'function)) :int
  (x :double)
  (b :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_inc_0_e" 'function))

(cffi:defcfun ("gsl_sf_fermi_dirac_inc_0" #.(swig-lispify "gsl_sf_fermi_dirac_inc_0" 'function)) :double
  (x :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_sf_fermi_dirac_inc_0" 'function))

(cffi:defcfun ("gsl_sf_lngamma_e" #.(swig-lispify "gsl_sf_lngamma_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lngamma_e" 'function))

(cffi:defcfun ("gsl_sf_lngamma" #.(swig-lispify "gsl_sf_lngamma" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_lngamma" 'function))

(cffi:defcfun ("gsl_sf_lngamma_sgn_e" #.(swig-lispify "gsl_sf_lngamma_sgn_e" 'function)) :int
  (x :double)
  (result_lg :pointer)
  (sgn :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lngamma_sgn_e" 'function))

(cffi:defcfun ("gsl_sf_gamma_e" #.(swig-lispify "gsl_sf_gamma_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gamma_e" 'function))

(cffi:defcfun ("gsl_sf_gamma" #.(swig-lispify "gsl_sf_gamma" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gamma" 'function))

(cffi:defcfun ("gsl_sf_gammastar_e" #.(swig-lispify "gsl_sf_gammastar_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gammastar_e" 'function))

(cffi:defcfun ("gsl_sf_gammastar" #.(swig-lispify "gsl_sf_gammastar" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gammastar" 'function))

(cffi:defcfun ("gsl_sf_gammainv_e" #.(swig-lispify "gsl_sf_gammainv_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gammainv_e" 'function))

(cffi:defcfun ("gsl_sf_gammainv" #.(swig-lispify "gsl_sf_gammainv" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gammainv" 'function))

(cffi:defcfun ("gsl_sf_lngamma_complex_e" #.(swig-lispify "gsl_sf_lngamma_complex_e" 'function)) :int
  (zr :double)
  (zi :double)
  (lnr :pointer)
  (arg :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lngamma_complex_e" 'function))

(cffi:defcfun ("gsl_sf_taylorcoeff_e" #.(swig-lispify "gsl_sf_taylorcoeff_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_taylorcoeff_e" 'function))

(cffi:defcfun ("gsl_sf_taylorcoeff" #.(swig-lispify "gsl_sf_taylorcoeff" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_taylorcoeff" 'function))

(cffi:defcfun ("gsl_sf_fact_e" #.(swig-lispify "gsl_sf_fact_e" 'function)) :int
  (n :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_fact_e" 'function))

(cffi:defcfun ("gsl_sf_fact" #.(swig-lispify "gsl_sf_fact" 'function)) :double
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_fact" 'function))

(cffi:defcfun ("gsl_sf_doublefact_e" #.(swig-lispify "gsl_sf_doublefact_e" 'function)) :int
  (n :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_doublefact_e" 'function))

(cffi:defcfun ("gsl_sf_doublefact" #.(swig-lispify "gsl_sf_doublefact" 'function)) :double
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_doublefact" 'function))

(cffi:defcfun ("gsl_sf_lnfact_e" #.(swig-lispify "gsl_sf_lnfact_e" 'function)) :int
  (n :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnfact_e" 'function))

(cffi:defcfun ("gsl_sf_lnfact" #.(swig-lispify "gsl_sf_lnfact" 'function)) :double
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_lnfact" 'function))

(cffi:defcfun ("gsl_sf_lndoublefact_e" #.(swig-lispify "gsl_sf_lndoublefact_e" 'function)) :int
  (n :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lndoublefact_e" 'function))

(cffi:defcfun ("gsl_sf_lndoublefact" #.(swig-lispify "gsl_sf_lndoublefact" 'function)) :double
  (n :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_lndoublefact" 'function))

(cffi:defcfun ("gsl_sf_lnchoose_e" #.(swig-lispify "gsl_sf_lnchoose_e" 'function)) :int
  (n :unsigned-int)
  (m :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnchoose_e" 'function))

(cffi:defcfun ("gsl_sf_lnchoose" #.(swig-lispify "gsl_sf_lnchoose" 'function)) :double
  (n :unsigned-int)
  (m :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_lnchoose" 'function))

(cffi:defcfun ("gsl_sf_choose_e" #.(swig-lispify "gsl_sf_choose_e" 'function)) :int
  (n :unsigned-int)
  (m :unsigned-int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_choose_e" 'function))

(cffi:defcfun ("gsl_sf_choose" #.(swig-lispify "gsl_sf_choose" 'function)) :double
  (n :unsigned-int)
  (m :unsigned-int))

(cl:export '#.(swig-lispify "gsl_sf_choose" 'function))

(cffi:defcfun ("gsl_sf_lnpoch_e" #.(swig-lispify "gsl_sf_lnpoch_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnpoch_e" 'function))

(cffi:defcfun ("gsl_sf_lnpoch" #.(swig-lispify "gsl_sf_lnpoch" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_lnpoch" 'function))

(cffi:defcfun ("gsl_sf_lnpoch_sgn_e" #.(swig-lispify "gsl_sf_lnpoch_sgn_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer)
  (sgn :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnpoch_sgn_e" 'function))

(cffi:defcfun ("gsl_sf_poch_e" #.(swig-lispify "gsl_sf_poch_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_poch_e" 'function))

(cffi:defcfun ("gsl_sf_poch" #.(swig-lispify "gsl_sf_poch" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_poch" 'function))

(cffi:defcfun ("gsl_sf_pochrel_e" #.(swig-lispify "gsl_sf_pochrel_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_pochrel_e" 'function))

(cffi:defcfun ("gsl_sf_pochrel" #.(swig-lispify "gsl_sf_pochrel" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_pochrel" 'function))

(cffi:defcfun ("gsl_sf_gamma_inc_Q_e" #.(swig-lispify "gsl_sf_gamma_inc_Q_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gamma_inc_Q_e" 'function))

(cffi:defcfun ("gsl_sf_gamma_inc_Q" #.(swig-lispify "gsl_sf_gamma_inc_Q" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gamma_inc_Q" 'function))

(cffi:defcfun ("gsl_sf_gamma_inc_P_e" #.(swig-lispify "gsl_sf_gamma_inc_P_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gamma_inc_P_e" 'function))

(cffi:defcfun ("gsl_sf_gamma_inc_P" #.(swig-lispify "gsl_sf_gamma_inc_P" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gamma_inc_P" 'function))

(cffi:defcfun ("gsl_sf_gamma_inc_e" #.(swig-lispify "gsl_sf_gamma_inc_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gamma_inc_e" 'function))

(cffi:defcfun ("gsl_sf_gamma_inc" #.(swig-lispify "gsl_sf_gamma_inc" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gamma_inc" 'function))

(cffi:defcfun ("gsl_sf_lnbeta_e" #.(swig-lispify "gsl_sf_lnbeta_e" 'function)) :int
  (a :double)
  (b :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnbeta_e" 'function))

(cffi:defcfun ("gsl_sf_lnbeta" #.(swig-lispify "gsl_sf_lnbeta" 'function)) :double
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_sf_lnbeta" 'function))

(cffi:defcfun ("gsl_sf_lnbeta_sgn_e" #.(swig-lispify "gsl_sf_lnbeta_sgn_e" 'function)) :int
  (x :double)
  (y :double)
  (result :pointer)
  (sgn :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnbeta_sgn_e" 'function))

(cffi:defcfun ("gsl_sf_beta_e" #.(swig-lispify "gsl_sf_beta_e" 'function)) :int
  (a :double)
  (b :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_beta_e" 'function))

(cffi:defcfun ("gsl_sf_beta" #.(swig-lispify "gsl_sf_beta" 'function)) :double
  (a :double)
  (b :double))

(cl:export '#.(swig-lispify "gsl_sf_beta" 'function))

(cffi:defcfun ("gsl_sf_beta_inc_e" #.(swig-lispify "gsl_sf_beta_inc_e" 'function)) :int
  (a :double)
  (b :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_beta_inc_e" 'function))

(cffi:defcfun ("gsl_sf_beta_inc" #.(swig-lispify "gsl_sf_beta_inc" 'function)) :double
  (a :double)
  (b :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_beta_inc" 'function))

(cl:defconstant #.(swig-lispify "GSL_SF_GAMMA_XMAX" 'constant) 171.0d0)

(cl:export '#.(swig-lispify "GSL_SF_GAMMA_XMAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SF_FACT_NMAX" 'constant) 170)

(cl:export '#.(swig-lispify "GSL_SF_FACT_NMAX" 'constant))

(cl:defconstant #.(swig-lispify "GSL_SF_DOUBLEFACT_NMAX" 'constant) 297)

(cl:export '#.(swig-lispify "GSL_SF_DOUBLEFACT_NMAX" 'constant))

(cffi:defcfun ("gsl_sf_gegenpoly_1_e" #.(swig-lispify "gsl_sf_gegenpoly_1_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_1_e" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_2_e" #.(swig-lispify "gsl_sf_gegenpoly_2_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_2_e" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_3_e" #.(swig-lispify "gsl_sf_gegenpoly_3_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_3_e" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_1" #.(swig-lispify "gsl_sf_gegenpoly_1" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_1" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_2" #.(swig-lispify "gsl_sf_gegenpoly_2" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_2" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_3" #.(swig-lispify "gsl_sf_gegenpoly_3" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_3" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_n_e" #.(swig-lispify "gsl_sf_gegenpoly_n_e" 'function)) :int
  (n :int)
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_n_e" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_n" #.(swig-lispify "gsl_sf_gegenpoly_n" 'function)) :double
  (n :int)
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_n" 'function))

(cffi:defcfun ("gsl_sf_gegenpoly_array" #.(swig-lispify "gsl_sf_gegenpoly_array" 'function)) :int
  (nmax :int)
  (lambda :double)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_gegenpoly_array" 'function))

(cffi:defcfun ("gsl_sf_hyperg_0F1_e" #.(swig-lispify "gsl_sf_hyperg_0F1_e" 'function)) :int
  (c :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_0F1_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_0F1" #.(swig-lispify "gsl_sf_hyperg_0F1" 'function)) :double
  (c :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_0F1" 'function))

(cffi:defcfun ("gsl_sf_hyperg_1F1_int_e" #.(swig-lispify "gsl_sf_hyperg_1F1_int_e" 'function)) :int
  (m :int)
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_1F1_int_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_1F1_int" #.(swig-lispify "gsl_sf_hyperg_1F1_int" 'function)) :double
  (m :int)
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_1F1_int" 'function))

(cffi:defcfun ("gsl_sf_hyperg_1F1_e" #.(swig-lispify "gsl_sf_hyperg_1F1_e" 'function)) :int
  (a :double)
  (b :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_1F1_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_1F1" #.(swig-lispify "gsl_sf_hyperg_1F1" 'function)) :double
  (a :double)
  (b :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_1F1" 'function))

(cffi:defcfun ("gsl_sf_hyperg_U_int_e" #.(swig-lispify "gsl_sf_hyperg_U_int_e" 'function)) :int
  (m :int)
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_U_int_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_U_int" #.(swig-lispify "gsl_sf_hyperg_U_int" 'function)) :double
  (m :int)
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_U_int" 'function))

(cffi:defcfun ("gsl_sf_hyperg_U_int_e10_e" #.(swig-lispify "gsl_sf_hyperg_U_int_e10_e" 'function)) :int
  (m :int)
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_U_int_e10_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_U_e" #.(swig-lispify "gsl_sf_hyperg_U_e" 'function)) :int
  (a :double)
  (b :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_U_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_U" #.(swig-lispify "gsl_sf_hyperg_U" 'function)) :double
  (a :double)
  (b :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_U" 'function))

(cffi:defcfun ("gsl_sf_hyperg_U_e10_e" #.(swig-lispify "gsl_sf_hyperg_U_e10_e" 'function)) :int
  (a :double)
  (b :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_U_e10_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_e" #.(swig-lispify "gsl_sf_hyperg_2F1_e" 'function)) :int
  (a :double)
  (b :double)
  (c :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1" #.(swig-lispify "gsl_sf_hyperg_2F1" 'function)) :double
  (a :double)
  (b :double)
  (c :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_conj_e" #.(swig-lispify "gsl_sf_hyperg_2F1_conj_e" 'function)) :int
  (aR :double)
  (aI :double)
  (c :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_conj_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_conj" #.(swig-lispify "gsl_sf_hyperg_2F1_conj" 'function)) :double
  (aR :double)
  (aI :double)
  (c :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_conj" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_renorm_e" #.(swig-lispify "gsl_sf_hyperg_2F1_renorm_e" 'function)) :int
  (a :double)
  (b :double)
  (c :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_renorm_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_renorm" #.(swig-lispify "gsl_sf_hyperg_2F1_renorm" 'function)) :double
  (a :double)
  (b :double)
  (c :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_renorm" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_conj_renorm_e" #.(swig-lispify "gsl_sf_hyperg_2F1_conj_renorm_e" 'function)) :int
  (aR :double)
  (aI :double)
  (c :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_conj_renorm_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F1_conj_renorm" #.(swig-lispify "gsl_sf_hyperg_2F1_conj_renorm" 'function)) :double
  (aR :double)
  (aI :double)
  (c :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F1_conj_renorm" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F0_e" #.(swig-lispify "gsl_sf_hyperg_2F0_e" 'function)) :int
  (a :double)
  (b :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F0_e" 'function))

(cffi:defcfun ("gsl_sf_hyperg_2F0" #.(swig-lispify "gsl_sf_hyperg_2F0" 'function)) :double
  (a :double)
  (b :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_hyperg_2F0" 'function))

(cffi:defcfun ("gsl_sf_laguerre_1_e" #.(swig-lispify "gsl_sf_laguerre_1_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_1_e" 'function))

(cffi:defcfun ("gsl_sf_laguerre_2_e" #.(swig-lispify "gsl_sf_laguerre_2_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_2_e" 'function))

(cffi:defcfun ("gsl_sf_laguerre_3_e" #.(swig-lispify "gsl_sf_laguerre_3_e" 'function)) :int
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_3_e" 'function))

(cffi:defcfun ("gsl_sf_laguerre_1" #.(swig-lispify "gsl_sf_laguerre_1" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_1" 'function))

(cffi:defcfun ("gsl_sf_laguerre_2" #.(swig-lispify "gsl_sf_laguerre_2" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_2" 'function))

(cffi:defcfun ("gsl_sf_laguerre_3" #.(swig-lispify "gsl_sf_laguerre_3" 'function)) :double
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_3" 'function))

(cffi:defcfun ("gsl_sf_laguerre_n_e" #.(swig-lispify "gsl_sf_laguerre_n_e" 'function)) :int
  (n :int)
  (a :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_n_e" 'function))

(cffi:defcfun ("gsl_sf_laguerre_n" #.(swig-lispify "gsl_sf_laguerre_n" 'function)) :double
  (n :int)
  (a :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_laguerre_n" 'function))

(cffi:defcfun ("gsl_sf_lambert_W0_e" #.(swig-lispify "gsl_sf_lambert_W0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lambert_W0_e" 'function))

(cffi:defcfun ("gsl_sf_lambert_W0" #.(swig-lispify "gsl_sf_lambert_W0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_lambert_W0" 'function))

(cffi:defcfun ("gsl_sf_lambert_Wm1_e" #.(swig-lispify "gsl_sf_lambert_Wm1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lambert_Wm1_e" 'function))

(cffi:defcfun ("gsl_sf_lambert_Wm1" #.(swig-lispify "gsl_sf_lambert_Wm1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_lambert_Wm1" 'function))

(cffi:defcfun ("gsl_sf_legendre_Pl_e" #.(swig-lispify "gsl_sf_legendre_Pl_e" 'function)) :int
  (l :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Pl_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_Pl" #.(swig-lispify "gsl_sf_legendre_Pl" 'function)) :double
  (l :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Pl" 'function))

(cffi:defcfun ("gsl_sf_legendre_Pl_array" #.(swig-lispify "gsl_sf_legendre_Pl_array" 'function)) :int
  (lmax :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Pl_array" 'function))

(cffi:defcfun ("gsl_sf_legendre_Pl_deriv_array" #.(swig-lispify "gsl_sf_legendre_Pl_deriv_array" 'function)) :int
  (lmax :int)
  (x :double)
  (result_array :pointer)
  (result_deriv_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Pl_deriv_array" 'function))

(cffi:defcfun ("gsl_sf_legendre_P1_e" #.(swig-lispify "gsl_sf_legendre_P1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_P1_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_P2_e" #.(swig-lispify "gsl_sf_legendre_P2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_P2_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_P3_e" #.(swig-lispify "gsl_sf_legendre_P3_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_P3_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_P1" #.(swig-lispify "gsl_sf_legendre_P1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_P1" 'function))

(cffi:defcfun ("gsl_sf_legendre_P2" #.(swig-lispify "gsl_sf_legendre_P2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_P2" 'function))

(cffi:defcfun ("gsl_sf_legendre_P3" #.(swig-lispify "gsl_sf_legendre_P3" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_P3" 'function))

(cffi:defcfun ("gsl_sf_legendre_Q0_e" #.(swig-lispify "gsl_sf_legendre_Q0_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Q0_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_Q0" #.(swig-lispify "gsl_sf_legendre_Q0" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Q0" 'function))

(cffi:defcfun ("gsl_sf_legendre_Q1_e" #.(swig-lispify "gsl_sf_legendre_Q1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Q1_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_Q1" #.(swig-lispify "gsl_sf_legendre_Q1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Q1" 'function))

(cffi:defcfun ("gsl_sf_legendre_Ql_e" #.(swig-lispify "gsl_sf_legendre_Ql_e" 'function)) :int
  (l :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Ql_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_Ql" #.(swig-lispify "gsl_sf_legendre_Ql" 'function)) :double
  (l :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Ql" 'function))

(cffi:defcfun ("gsl_sf_legendre_Plm_e" #.(swig-lispify "gsl_sf_legendre_Plm_e" 'function)) :int
  (l :int)
  (m :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Plm_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_Plm" #.(swig-lispify "gsl_sf_legendre_Plm" 'function)) :double
  (l :int)
  (m :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Plm" 'function))

(cffi:defcfun ("gsl_sf_legendre_Plm_array" #.(swig-lispify "gsl_sf_legendre_Plm_array" 'function)) :int
  (lmax :int)
  (m :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Plm_array" 'function))

(cffi:defcfun ("gsl_sf_legendre_Plm_deriv_array" #.(swig-lispify "gsl_sf_legendre_Plm_deriv_array" 'function)) :int
  (lmax :int)
  (m :int)
  (x :double)
  (result_array :pointer)
  (result_deriv_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_Plm_deriv_array" 'function))

(cffi:defcfun ("gsl_sf_legendre_sphPlm_e" #.(swig-lispify "gsl_sf_legendre_sphPlm_e" 'function)) :int
  (l :int)
  (m :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_sphPlm_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_sphPlm" #.(swig-lispify "gsl_sf_legendre_sphPlm" 'function)) :double
  (l :int)
  (m :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_sphPlm" 'function))

(cffi:defcfun ("gsl_sf_legendre_sphPlm_array" #.(swig-lispify "gsl_sf_legendre_sphPlm_array" 'function)) :int
  (lmax :int)
  (m :int)
  (x :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_sphPlm_array" 'function))

(cffi:defcfun ("gsl_sf_legendre_sphPlm_deriv_array" #.(swig-lispify "gsl_sf_legendre_sphPlm_deriv_array" 'function)) :int
  (lmax :int)
  (m :int)
  (x :double)
  (result_array :pointer)
  (result_deriv_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_sphPlm_deriv_array" 'function))

(cffi:defcfun ("gsl_sf_legendre_array_size" #.(swig-lispify "gsl_sf_legendre_array_size" 'function)) :int
  (lmax :int)
  (m :int))

(cl:export '#.(swig-lispify "gsl_sf_legendre_array_size" 'function))

(cffi:defcfun ("gsl_sf_conicalP_half_e" #.(swig-lispify "gsl_sf_conicalP_half_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_half_e" 'function))

(cffi:defcfun ("gsl_sf_conicalP_half" #.(swig-lispify "gsl_sf_conicalP_half" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_half" 'function))

(cffi:defcfun ("gsl_sf_conicalP_mhalf_e" #.(swig-lispify "gsl_sf_conicalP_mhalf_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_mhalf_e" 'function))

(cffi:defcfun ("gsl_sf_conicalP_mhalf" #.(swig-lispify "gsl_sf_conicalP_mhalf" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_mhalf" 'function))

(cffi:defcfun ("gsl_sf_conicalP_0_e" #.(swig-lispify "gsl_sf_conicalP_0_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_0_e" 'function))

(cffi:defcfun ("gsl_sf_conicalP_0" #.(swig-lispify "gsl_sf_conicalP_0" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_0" 'function))

(cffi:defcfun ("gsl_sf_conicalP_1_e" #.(swig-lispify "gsl_sf_conicalP_1_e" 'function)) :int
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_1_e" 'function))

(cffi:defcfun ("gsl_sf_conicalP_1" #.(swig-lispify "gsl_sf_conicalP_1" 'function)) :double
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_1" 'function))

(cffi:defcfun ("gsl_sf_conicalP_sph_reg_e" #.(swig-lispify "gsl_sf_conicalP_sph_reg_e" 'function)) :int
  (l :int)
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_sph_reg_e" 'function))

(cffi:defcfun ("gsl_sf_conicalP_sph_reg" #.(swig-lispify "gsl_sf_conicalP_sph_reg" 'function)) :double
  (l :int)
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_sph_reg" 'function))

(cffi:defcfun ("gsl_sf_conicalP_cyl_reg_e" #.(swig-lispify "gsl_sf_conicalP_cyl_reg_e" 'function)) :int
  (m :int)
  (lambda :double)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_cyl_reg_e" 'function))

(cffi:defcfun ("gsl_sf_conicalP_cyl_reg" #.(swig-lispify "gsl_sf_conicalP_cyl_reg" 'function)) :double
  (m :int)
  (lambda :double)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_conicalP_cyl_reg" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d_0_e" #.(swig-lispify "gsl_sf_legendre_H3d_0_e" 'function)) :int
  (lambda :double)
  (eta :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d_0_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d_0" #.(swig-lispify "gsl_sf_legendre_H3d_0" 'function)) :double
  (lambda :double)
  (eta :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d_0" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d_1_e" #.(swig-lispify "gsl_sf_legendre_H3d_1_e" 'function)) :int
  (lambda :double)
  (eta :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d_1_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d_1" #.(swig-lispify "gsl_sf_legendre_H3d_1" 'function)) :double
  (lambda :double)
  (eta :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d_1" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d_e" #.(swig-lispify "gsl_sf_legendre_H3d_e" 'function)) :int
  (l :int)
  (lambda :double)
  (eta :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d_e" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d" #.(swig-lispify "gsl_sf_legendre_H3d" 'function)) :double
  (l :int)
  (lambda :double)
  (eta :double))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d" 'function))

(cffi:defcfun ("gsl_sf_legendre_H3d_array" #.(swig-lispify "gsl_sf_legendre_H3d_array" 'function)) :int
  (lmax :int)
  (lambda :double)
  (eta :double)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_legendre_H3d_array" 'function))

(cffi:defcfun ("gsl_sf_log_e" #.(swig-lispify "gsl_sf_log_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_log_e" 'function))

(cffi:defcfun ("gsl_sf_log" #.(swig-lispify "gsl_sf_log" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_log" 'function))

(cffi:defcfun ("gsl_sf_log_abs_e" #.(swig-lispify "gsl_sf_log_abs_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_log_abs_e" 'function))

(cffi:defcfun ("gsl_sf_log_abs" #.(swig-lispify "gsl_sf_log_abs" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_log_abs" 'function))

(cffi:defcfun ("gsl_sf_complex_log_e" #.(swig-lispify "gsl_sf_complex_log_e" 'function)) :int
  (zr :double)
  (zi :double)
  (lnr :pointer)
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_log_e" 'function))

(cffi:defcfun ("gsl_sf_log_1plusx_e" #.(swig-lispify "gsl_sf_log_1plusx_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_log_1plusx_e" 'function))

(cffi:defcfun ("gsl_sf_log_1plusx" #.(swig-lispify "gsl_sf_log_1plusx" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_log_1plusx" 'function))

(cffi:defcfun ("gsl_sf_log_1plusx_mx_e" #.(swig-lispify "gsl_sf_log_1plusx_mx_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_log_1plusx_mx_e" 'function))

(cffi:defcfun ("gsl_sf_log_1plusx_mx" #.(swig-lispify "gsl_sf_log_1plusx_mx" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_log_1plusx_mx" 'function))

(cl:defconstant #.(swig-lispify "GSL_SF_MATHIEU_COEFF" 'constant) 100)

(cl:export '#.(swig-lispify "GSL_SF_MATHIEU_COEFF" 'constant))

(cffi:defcstruct #.(swig-lispify "gsl_sf_mathieu_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "even_order" 'slotname) :pointer)
	(#.(swig-lispify "odd_order" 'slotname) :pointer)
	(#.(swig-lispify "extra_values" 'slotname) :int)
	(#.(swig-lispify "qa" 'slotname) :double)
	(#.(swig-lispify "qb" 'slotname) :double)
	(#.(swig-lispify "aa" 'slotname) :pointer)
	(#.(swig-lispify "bb" 'slotname) :pointer)
	(#.(swig-lispify "dd" 'slotname) :pointer)
	(#.(swig-lispify "ee" 'slotname) :pointer)
	(#.(swig-lispify "tt" 'slotname) :pointer)
	(#.(swig-lispify "e2" 'slotname) :pointer)
	(#.(swig-lispify "zz" 'slotname) :pointer)
	(#.(swig-lispify "eval" 'slotname) :pointer)
	(#.(swig-lispify "evec" 'slotname) :pointer)
	(#.(swig-lispify "wmat" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "even_order" 'slotname))

(cl:export '#.(swig-lispify "odd_order" 'slotname))

(cl:export '#.(swig-lispify "extra_values" 'slotname))

(cl:export '#.(swig-lispify "qa" 'slotname))

(cl:export '#.(swig-lispify "qb" 'slotname))

(cl:export '#.(swig-lispify "aa" 'slotname))

(cl:export '#.(swig-lispify "bb" 'slotname))

(cl:export '#.(swig-lispify "dd" 'slotname))

(cl:export '#.(swig-lispify "ee" 'slotname))

(cl:export '#.(swig-lispify "tt" 'slotname))

(cl:export '#.(swig-lispify "e2" 'slotname))

(cl:export '#.(swig-lispify "zz" 'slotname))

(cl:export '#.(swig-lispify "eval" 'slotname))

(cl:export '#.(swig-lispify "evec" 'slotname))

(cl:export '#.(swig-lispify "wmat" 'slotname))

(cffi:defcfun ("gsl_sf_mathieu_a_array" #.(swig-lispify "gsl_sf_mathieu_a_array" 'function)) :int
  (order_min :int)
  (order_max :int)
  (qq :double)
  (work :pointer)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_a_array" 'function))

(cffi:defcfun ("gsl_sf_mathieu_b_array" #.(swig-lispify "gsl_sf_mathieu_b_array" 'function)) :int
  (order_min :int)
  (order_max :int)
  (qq :double)
  (work :pointer)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_b_array" 'function))

(cffi:defcfun ("gsl_sf_mathieu_a" #.(swig-lispify "gsl_sf_mathieu_a" 'function)) :int
  (order :int)
  (qq :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_a" 'function))

(cffi:defcfun ("gsl_sf_mathieu_b" #.(swig-lispify "gsl_sf_mathieu_b" 'function)) :int
  (order :int)
  (qq :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_b" 'function))

(cffi:defcfun ("gsl_sf_mathieu_a_coeff" #.(swig-lispify "gsl_sf_mathieu_a_coeff" 'function)) :int
  (order :int)
  (qq :double)
  (aa :double)
  (coeff :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_a_coeff" 'function))

(cffi:defcfun ("gsl_sf_mathieu_b_coeff" #.(swig-lispify "gsl_sf_mathieu_b_coeff" 'function)) :int
  (order :int)
  (qq :double)
  (aa :double)
  (coeff :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_b_coeff" 'function))

(cffi:defcfun ("gsl_sf_mathieu_alloc" #.(swig-lispify "gsl_sf_mathieu_alloc" 'function)) :pointer
  (nn :pointer)
  (qq :double))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_alloc" 'function))

(cffi:defcfun ("gsl_sf_mathieu_free" #.(swig-lispify "gsl_sf_mathieu_free" 'function)) :void
  (workspace :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_free" 'function))

(cffi:defcfun ("gsl_sf_mathieu_ce" #.(swig-lispify "gsl_sf_mathieu_ce" 'function)) :int
  (order :int)
  (qq :double)
  (zz :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_ce" 'function))

(cffi:defcfun ("gsl_sf_mathieu_se" #.(swig-lispify "gsl_sf_mathieu_se" 'function)) :int
  (order :int)
  (qq :double)
  (zz :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_se" 'function))

(cffi:defcfun ("gsl_sf_mathieu_ce_array" #.(swig-lispify "gsl_sf_mathieu_ce_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (qq :double)
  (zz :double)
  (work :pointer)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_ce_array" 'function))

(cffi:defcfun ("gsl_sf_mathieu_se_array" #.(swig-lispify "gsl_sf_mathieu_se_array" 'function)) :int
  (nmin :int)
  (nmax :int)
  (qq :double)
  (zz :double)
  (work :pointer)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_se_array" 'function))

(cffi:defcfun ("gsl_sf_mathieu_Mc" #.(swig-lispify "gsl_sf_mathieu_Mc" 'function)) :int
  (kind :int)
  (order :int)
  (qq :double)
  (zz :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_Mc" 'function))

(cffi:defcfun ("gsl_sf_mathieu_Ms" #.(swig-lispify "gsl_sf_mathieu_Ms" 'function)) :int
  (kind :int)
  (order :int)
  (qq :double)
  (zz :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_Ms" 'function))

(cffi:defcfun ("gsl_sf_mathieu_Mc_array" #.(swig-lispify "gsl_sf_mathieu_Mc_array" 'function)) :int
  (kind :int)
  (nmin :int)
  (nmax :int)
  (qq :double)
  (zz :double)
  (work :pointer)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_Mc_array" 'function))

(cffi:defcfun ("gsl_sf_mathieu_Ms_array" #.(swig-lispify "gsl_sf_mathieu_Ms_array" 'function)) :int
  (kind :int)
  (nmin :int)
  (nmax :int)
  (qq :double)
  (zz :double)
  (work :pointer)
  (result_array :pointer))

(cl:export '#.(swig-lispify "gsl_sf_mathieu_Ms_array" 'function))

(cffi:defcfun ("gsl_sf_pow_int_e" #.(swig-lispify "gsl_sf_pow_int_e" 'function)) :int
  (x :double)
  (n :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_pow_int_e" 'function))

(cffi:defcfun ("gsl_sf_pow_int" #.(swig-lispify "gsl_sf_pow_int" 'function)) :double
  (x :double)
  (n :int))

(cl:export '#.(swig-lispify "gsl_sf_pow_int" 'function))

(cffi:defcfun ("gsl_sf_psi_int_e" #.(swig-lispify "gsl_sf_psi_int_e" 'function)) :int
  (n :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_psi_int_e" 'function))

(cffi:defcfun ("gsl_sf_psi_int" #.(swig-lispify "gsl_sf_psi_int" 'function)) :double
  (n :int))

(cl:export '#.(swig-lispify "gsl_sf_psi_int" 'function))

(cffi:defcfun ("gsl_sf_psi_e" #.(swig-lispify "gsl_sf_psi_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_psi_e" 'function))

(cffi:defcfun ("gsl_sf_psi" #.(swig-lispify "gsl_sf_psi" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_psi" 'function))

(cffi:defcfun ("gsl_sf_psi_1piy_e" #.(swig-lispify "gsl_sf_psi_1piy_e" 'function)) :int
  (y :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_psi_1piy_e" 'function))

(cffi:defcfun ("gsl_sf_psi_1piy" #.(swig-lispify "gsl_sf_psi_1piy" 'function)) :double
  (y :double))

(cl:export '#.(swig-lispify "gsl_sf_psi_1piy" 'function))

(cffi:defcfun ("gsl_sf_complex_psi_e" #.(swig-lispify "gsl_sf_complex_psi_e" 'function)) :int
  (x :double)
  (y :double)
  (result_re :pointer)
  (result_im :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_psi_e" 'function))

(cffi:defcfun ("gsl_sf_psi_1_int_e" #.(swig-lispify "gsl_sf_psi_1_int_e" 'function)) :int
  (n :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_psi_1_int_e" 'function))

(cffi:defcfun ("gsl_sf_psi_1_int" #.(swig-lispify "gsl_sf_psi_1_int" 'function)) :double
  (n :int))

(cl:export '#.(swig-lispify "gsl_sf_psi_1_int" 'function))

(cffi:defcfun ("gsl_sf_psi_1_e" #.(swig-lispify "gsl_sf_psi_1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_psi_1_e" 'function))

(cffi:defcfun ("gsl_sf_psi_1" #.(swig-lispify "gsl_sf_psi_1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_psi_1" 'function))

(cffi:defcfun ("gsl_sf_psi_n_e" #.(swig-lispify "gsl_sf_psi_n_e" 'function)) :int
  (n :int)
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_psi_n_e" 'function))

(cffi:defcfun ("gsl_sf_psi_n" #.(swig-lispify "gsl_sf_psi_n" 'function)) :double
  (n :int)
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_psi_n" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_sf_result_struct" 'classname)
	(#.(swig-lispify "val" 'slotname) :double)
	(#.(swig-lispify "err" 'slotname) :double))

(cl:export '#.(swig-lispify "gsl_sf_result_struct" 'classname))

(cl:export '#.(swig-lispify "val" 'slotname))

(cl:export '#.(swig-lispify "err" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_sf_result_e10_struct" 'classname)
	(#.(swig-lispify "val" 'slotname) :double)
	(#.(swig-lispify "err" 'slotname) :double)
	(#.(swig-lispify "e10" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_sf_result_e10_struct" 'classname))

(cl:export '#.(swig-lispify "val" 'slotname))

(cl:export '#.(swig-lispify "err" 'slotname))

(cl:export '#.(swig-lispify "e10" 'slotname))

(cffi:defcfun ("gsl_sf_result_smash_e" #.(swig-lispify "gsl_sf_result_smash_e" 'function)) :int
  (re :pointer)
  (r :pointer))

(cl:export '#.(swig-lispify "gsl_sf_result_smash_e" 'function))

(cffi:defcfun ("gsl_sf_synchrotron_1_e" #.(swig-lispify "gsl_sf_synchrotron_1_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_synchrotron_1_e" 'function))

(cffi:defcfun ("gsl_sf_synchrotron_1" #.(swig-lispify "gsl_sf_synchrotron_1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_synchrotron_1" 'function))

(cffi:defcfun ("gsl_sf_synchrotron_2_e" #.(swig-lispify "gsl_sf_synchrotron_2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_synchrotron_2_e" 'function))

(cffi:defcfun ("gsl_sf_synchrotron_2" #.(swig-lispify "gsl_sf_synchrotron_2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_synchrotron_2" 'function))

(cffi:defcfun ("gsl_sf_transport_2_e" #.(swig-lispify "gsl_sf_transport_2_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_transport_2_e" 'function))

(cffi:defcfun ("gsl_sf_transport_2" #.(swig-lispify "gsl_sf_transport_2" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_transport_2" 'function))

(cffi:defcfun ("gsl_sf_transport_3_e" #.(swig-lispify "gsl_sf_transport_3_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_transport_3_e" 'function))

(cffi:defcfun ("gsl_sf_transport_3" #.(swig-lispify "gsl_sf_transport_3" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_transport_3" 'function))

(cffi:defcfun ("gsl_sf_transport_4_e" #.(swig-lispify "gsl_sf_transport_4_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_transport_4_e" 'function))

(cffi:defcfun ("gsl_sf_transport_4" #.(swig-lispify "gsl_sf_transport_4" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_transport_4" 'function))

(cffi:defcfun ("gsl_sf_transport_5_e" #.(swig-lispify "gsl_sf_transport_5_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_transport_5_e" 'function))

(cffi:defcfun ("gsl_sf_transport_5" #.(swig-lispify "gsl_sf_transport_5" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_transport_5" 'function))

(cffi:defcfun ("gsl_sf_sin_e" #.(swig-lispify "gsl_sf_sin_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_sin_e" 'function))

(cffi:defcfun ("gsl_sf_sin" #.(swig-lispify "gsl_sf_sin" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_sin" 'function))

(cffi:defcfun ("gsl_sf_cos_e" #.(swig-lispify "gsl_sf_cos_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_cos_e" 'function))

(cffi:defcfun ("gsl_sf_cos" #.(swig-lispify "gsl_sf_cos" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_cos" 'function))

(cffi:defcfun ("gsl_sf_hypot_e" #.(swig-lispify "gsl_sf_hypot_e" 'function)) :int
  (x :double)
  (y :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hypot_e" 'function))

(cffi:defcfun ("gsl_sf_hypot" #.(swig-lispify "gsl_sf_hypot" 'function)) :double
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_sf_hypot" 'function))

(cffi:defcfun ("gsl_sf_complex_sin_e" #.(swig-lispify "gsl_sf_complex_sin_e" 'function)) :int
  (zr :double)
  (zi :double)
  (szr :pointer)
  (szi :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_sin_e" 'function))

(cffi:defcfun ("gsl_sf_complex_cos_e" #.(swig-lispify "gsl_sf_complex_cos_e" 'function)) :int
  (zr :double)
  (zi :double)
  (czr :pointer)
  (czi :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_cos_e" 'function))

(cffi:defcfun ("gsl_sf_complex_logsin_e" #.(swig-lispify "gsl_sf_complex_logsin_e" 'function)) :int
  (zr :double)
  (zi :double)
  (lszr :pointer)
  (lszi :pointer))

(cl:export '#.(swig-lispify "gsl_sf_complex_logsin_e" 'function))

(cffi:defcfun ("gsl_sf_sinc_e" #.(swig-lispify "gsl_sf_sinc_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_sinc_e" 'function))

(cffi:defcfun ("gsl_sf_sinc" #.(swig-lispify "gsl_sf_sinc" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_sinc" 'function))

(cffi:defcfun ("gsl_sf_lnsinh_e" #.(swig-lispify "gsl_sf_lnsinh_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lnsinh_e" 'function))

(cffi:defcfun ("gsl_sf_lnsinh" #.(swig-lispify "gsl_sf_lnsinh" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_lnsinh" 'function))

(cffi:defcfun ("gsl_sf_lncosh_e" #.(swig-lispify "gsl_sf_lncosh_e" 'function)) :int
  (x :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_lncosh_e" 'function))

(cffi:defcfun ("gsl_sf_lncosh" #.(swig-lispify "gsl_sf_lncosh" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_sf_lncosh" 'function))

(cffi:defcfun ("gsl_sf_polar_to_rect" #.(swig-lispify "gsl_sf_polar_to_rect" 'function)) :int
  (r :double)
  (theta :double)
  (x :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_sf_polar_to_rect" 'function))

(cffi:defcfun ("gsl_sf_rect_to_polar" #.(swig-lispify "gsl_sf_rect_to_polar" 'function)) :int
  (x :double)
  (y :double)
  (r :pointer)
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_sf_rect_to_polar" 'function))

(cffi:defcfun ("gsl_sf_sin_err_e" #.(swig-lispify "gsl_sf_sin_err_e" 'function)) :int
  (x :double)
  (dx :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_sin_err_e" 'function))

(cffi:defcfun ("gsl_sf_cos_err_e" #.(swig-lispify "gsl_sf_cos_err_e" 'function)) :int
  (x :double)
  (dx :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_cos_err_e" 'function))

(cffi:defcfun ("gsl_sf_angle_restrict_symm_e" #.(swig-lispify "gsl_sf_angle_restrict_symm_e" 'function)) :int
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_sf_angle_restrict_symm_e" 'function))

(cffi:defcfun ("gsl_sf_angle_restrict_symm" #.(swig-lispify "gsl_sf_angle_restrict_symm" 'function)) :double
  (theta :double))

(cl:export '#.(swig-lispify "gsl_sf_angle_restrict_symm" 'function))

(cffi:defcfun ("gsl_sf_angle_restrict_pos_e" #.(swig-lispify "gsl_sf_angle_restrict_pos_e" 'function)) :int
  (theta :pointer))

(cl:export '#.(swig-lispify "gsl_sf_angle_restrict_pos_e" 'function))

(cffi:defcfun ("gsl_sf_angle_restrict_pos" #.(swig-lispify "gsl_sf_angle_restrict_pos" 'function)) :double
  (theta :double))

(cl:export '#.(swig-lispify "gsl_sf_angle_restrict_pos" 'function))

(cffi:defcfun ("gsl_sf_angle_restrict_symm_err_e" #.(swig-lispify "gsl_sf_angle_restrict_symm_err_e" 'function)) :int
  (theta :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_angle_restrict_symm_err_e" 'function))

(cffi:defcfun ("gsl_sf_angle_restrict_pos_err_e" #.(swig-lispify "gsl_sf_angle_restrict_pos_err_e" 'function)) :int
  (theta :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_angle_restrict_pos_err_e" 'function))

(cffi:defcfun ("gsl_sf_zeta_int_e" #.(swig-lispify "gsl_sf_zeta_int_e" 'function)) :int
  (n :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_zeta_int_e" 'function))

(cffi:defcfun ("gsl_sf_zeta_int" #.(swig-lispify "gsl_sf_zeta_int" 'function)) :double
  (n :int))

(cl:export '#.(swig-lispify "gsl_sf_zeta_int" 'function))

(cffi:defcfun ("gsl_sf_zeta_e" #.(swig-lispify "gsl_sf_zeta_e" 'function)) :int
  (s :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_zeta_e" 'function))

(cffi:defcfun ("gsl_sf_zeta" #.(swig-lispify "gsl_sf_zeta" 'function)) :double
  (s :double))

(cl:export '#.(swig-lispify "gsl_sf_zeta" 'function))

(cffi:defcfun ("gsl_sf_zetam1_e" #.(swig-lispify "gsl_sf_zetam1_e" 'function)) :int
  (s :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_zetam1_e" 'function))

(cffi:defcfun ("gsl_sf_zetam1" #.(swig-lispify "gsl_sf_zetam1" 'function)) :double
  (s :double))

(cl:export '#.(swig-lispify "gsl_sf_zetam1" 'function))

(cffi:defcfun ("gsl_sf_zetam1_int_e" #.(swig-lispify "gsl_sf_zetam1_int_e" 'function)) :int
  (s :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_zetam1_int_e" 'function))

(cffi:defcfun ("gsl_sf_zetam1_int" #.(swig-lispify "gsl_sf_zetam1_int" 'function)) :double
  (s :int))

(cl:export '#.(swig-lispify "gsl_sf_zetam1_int" 'function))

(cffi:defcfun ("gsl_sf_hzeta_e" #.(swig-lispify "gsl_sf_hzeta_e" 'function)) :int
  (s :double)
  (q :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_hzeta_e" 'function))

(cffi:defcfun ("gsl_sf_hzeta" #.(swig-lispify "gsl_sf_hzeta" 'function)) :double
  (s :double)
  (q :double))

(cl:export '#.(swig-lispify "gsl_sf_hzeta" 'function))

(cffi:defcfun ("gsl_sf_eta_int_e" #.(swig-lispify "gsl_sf_eta_int_e" 'function)) :int
  (n :int)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_eta_int_e" 'function))

(cffi:defcfun ("gsl_sf_eta_int" #.(swig-lispify "gsl_sf_eta_int" 'function)) :double
  (n :int))

(cl:export '#.(swig-lispify "gsl_sf_eta_int" 'function))

(cffi:defcfun ("gsl_sf_eta_e" #.(swig-lispify "gsl_sf_eta_e" 'function)) :int
  (s :double)
  (result :pointer))

(cl:export '#.(swig-lispify "gsl_sf_eta_e" 'function))

(cffi:defcfun ("gsl_sf_eta" #.(swig-lispify "gsl_sf_eta" 'function)) :double
  (s :double))

(cl:export '#.(swig-lispify "gsl_sf_eta" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_siman_params_t" 'classname)
	(#.(swig-lispify "n_tries" 'slotname) :int)
	(#.(swig-lispify "iters_fixed_T" 'slotname) :int)
	(#.(swig-lispify "step_size" 'slotname) :double)
	(#.(swig-lispify "k" 'slotname) :double)
	(#.(swig-lispify "t_initial" 'slotname) :double)
	(#.(swig-lispify "mu_t" 'slotname) :double)
	(#.(swig-lispify "t_min" 'slotname) :double))

(cl:export '#.(swig-lispify "gsl_siman_params_t" 'classname))

(cl:export '#.(swig-lispify "n_tries" 'slotname))

(cl:export '#.(swig-lispify "iters_fixed_T" 'slotname))

(cl:export '#.(swig-lispify "step_size" 'slotname))

(cl:export '#.(swig-lispify "k" 'slotname))

(cl:export '#.(swig-lispify "t_initial" 'slotname))

(cl:export '#.(swig-lispify "mu_t" 'slotname))

(cl:export '#.(swig-lispify "t_min" 'slotname))

(cffi:defcfun ("gsl_siman_solve" #.(swig-lispify "gsl_siman_solve" 'function)) :void
  (r :pointer)
  (x0_p :pointer)
  (Ef :pointer)
  (take_step :pointer)
  (distance :pointer)
  (print_position :pointer)
  (copyfunc :pointer)
  (copy_constructor :pointer)
  (destructor :pointer)
  (element_size :pointer)
  (params #.(swig-lispify "gsl_siman_params_t" 'classname)))

(cl:export '#.(swig-lispify "gsl_siman_solve" 'function))

(cffi:defcfun ("gsl_siman_solve_many" #.(swig-lispify "gsl_siman_solve_many" 'function)) :void
  (r :pointer)
  (x0_p :pointer)
  (Ef :pointer)
  (take_step :pointer)
  (distance :pointer)
  (print_position :pointer)
  (element_size :pointer)
  (params #.(swig-lispify "gsl_siman_params_t" 'classname)))

(cl:export '#.(swig-lispify "gsl_siman_solve_many" 'function))

(cffi:defcfun ("gsl_sort_char" #.(swig-lispify "gsl_sort_char" 'function)) :void
  (data :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_char" 'function))

(cffi:defcfun ("gsl_sort2_char" #.(swig-lispify "gsl_sort2_char" 'function)) :void
  (data1 :string)
  (stride1 :pointer)
  (data2 :string)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_char" 'function))

(cffi:defcfun ("gsl_sort_char_index" #.(swig-lispify "gsl_sort_char_index" 'function)) :void
  (p :pointer)
  (data :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_char_index" 'function))

(cffi:defcfun ("gsl_sort_char_smallest" #.(swig-lispify "gsl_sort_char_smallest" 'function)) :int
  (dest :string)
  (k :pointer)
  (src :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_char_smallest" 'function))

(cffi:defcfun ("gsl_sort_char_smallest_index" #.(swig-lispify "gsl_sort_char_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_char_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_char_largest" #.(swig-lispify "gsl_sort_char_largest" 'function)) :int
  (dest :string)
  (k :pointer)
  (src :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_char_largest" 'function))

(cffi:defcfun ("gsl_sort_char_largest_index" #.(swig-lispify "gsl_sort_char_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_char_largest_index" 'function))

(cffi:defcfun ("gsl_sort" #.(swig-lispify "gsl_sort" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort" 'function))

(cffi:defcfun ("gsl_sort2" #.(swig-lispify "gsl_sort2" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2" 'function))

(cffi:defcfun ("gsl_sort_index" #.(swig-lispify "gsl_sort_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_index" 'function))

(cffi:defcfun ("gsl_sort_smallest" #.(swig-lispify "gsl_sort_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_smallest" 'function))

(cffi:defcfun ("gsl_sort_smallest_index" #.(swig-lispify "gsl_sort_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_largest" #.(swig-lispify "gsl_sort_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_largest" 'function))

(cffi:defcfun ("gsl_sort_largest_index" #.(swig-lispify "gsl_sort_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_largest_index" 'function))

(cffi:defcfun ("gsl_sort_float" #.(swig-lispify "gsl_sort_float" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_float" 'function))

(cffi:defcfun ("gsl_sort2_float" #.(swig-lispify "gsl_sort2_float" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_float" 'function))

(cffi:defcfun ("gsl_sort_float_index" #.(swig-lispify "gsl_sort_float_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_float_index" 'function))

(cffi:defcfun ("gsl_sort_float_smallest" #.(swig-lispify "gsl_sort_float_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_float_smallest" 'function))

(cffi:defcfun ("gsl_sort_float_smallest_index" #.(swig-lispify "gsl_sort_float_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_float_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_float_largest" #.(swig-lispify "gsl_sort_float_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_float_largest" 'function))

(cffi:defcfun ("gsl_sort_float_largest_index" #.(swig-lispify "gsl_sort_float_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_float_largest_index" 'function))

(cffi:defcfun ("gsl_sort_int" #.(swig-lispify "gsl_sort_int" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_int" 'function))

(cffi:defcfun ("gsl_sort2_int" #.(swig-lispify "gsl_sort2_int" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_int" 'function))

(cffi:defcfun ("gsl_sort_int_index" #.(swig-lispify "gsl_sort_int_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_int_index" 'function))

(cffi:defcfun ("gsl_sort_int_smallest" #.(swig-lispify "gsl_sort_int_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_int_smallest" 'function))

(cffi:defcfun ("gsl_sort_int_smallest_index" #.(swig-lispify "gsl_sort_int_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_int_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_int_largest" #.(swig-lispify "gsl_sort_int_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_int_largest" 'function))

(cffi:defcfun ("gsl_sort_int_largest_index" #.(swig-lispify "gsl_sort_int_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_int_largest_index" 'function))

(cffi:defcfun ("gsl_sort_long" #.(swig-lispify "gsl_sort_long" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long" 'function))

(cffi:defcfun ("gsl_sort2_long" #.(swig-lispify "gsl_sort2_long" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_long" 'function))

(cffi:defcfun ("gsl_sort_long_index" #.(swig-lispify "gsl_sort_long_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_index" 'function))

(cffi:defcfun ("gsl_sort_long_smallest" #.(swig-lispify "gsl_sort_long_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_smallest" 'function))

(cffi:defcfun ("gsl_sort_long_smallest_index" #.(swig-lispify "gsl_sort_long_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_long_largest" #.(swig-lispify "gsl_sort_long_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_largest" 'function))

(cffi:defcfun ("gsl_sort_long_largest_index" #.(swig-lispify "gsl_sort_long_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_largest_index" 'function))

(cffi:defcfun ("gsl_sort_long_double" #.(swig-lispify "gsl_sort_long_double" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_double" 'function))

(cffi:defcfun ("gsl_sort2_long_double" #.(swig-lispify "gsl_sort2_long_double" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_long_double" 'function))

(cffi:defcfun ("gsl_sort_long_double_index" #.(swig-lispify "gsl_sort_long_double_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_double_index" 'function))

(cffi:defcfun ("gsl_sort_long_double_smallest" #.(swig-lispify "gsl_sort_long_double_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_double_smallest" 'function))

(cffi:defcfun ("gsl_sort_long_double_smallest_index" #.(swig-lispify "gsl_sort_long_double_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_double_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_long_double_largest" #.(swig-lispify "gsl_sort_long_double_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_double_largest" 'function))

(cffi:defcfun ("gsl_sort_long_double_largest_index" #.(swig-lispify "gsl_sort_long_double_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_long_double_largest_index" 'function))

(cffi:defcfun ("gsl_sort_short" #.(swig-lispify "gsl_sort_short" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_short" 'function))

(cffi:defcfun ("gsl_sort2_short" #.(swig-lispify "gsl_sort2_short" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_short" 'function))

(cffi:defcfun ("gsl_sort_short_index" #.(swig-lispify "gsl_sort_short_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_short_index" 'function))

(cffi:defcfun ("gsl_sort_short_smallest" #.(swig-lispify "gsl_sort_short_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_short_smallest" 'function))

(cffi:defcfun ("gsl_sort_short_smallest_index" #.(swig-lispify "gsl_sort_short_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_short_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_short_largest" #.(swig-lispify "gsl_sort_short_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_short_largest" 'function))

(cffi:defcfun ("gsl_sort_short_largest_index" #.(swig-lispify "gsl_sort_short_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_short_largest_index" 'function))

(cffi:defcfun ("gsl_sort_uchar" #.(swig-lispify "gsl_sort_uchar" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uchar" 'function))

(cffi:defcfun ("gsl_sort2_uchar" #.(swig-lispify "gsl_sort2_uchar" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_uchar" 'function))

(cffi:defcfun ("gsl_sort_uchar_index" #.(swig-lispify "gsl_sort_uchar_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uchar_index" 'function))

(cffi:defcfun ("gsl_sort_uchar_smallest" #.(swig-lispify "gsl_sort_uchar_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uchar_smallest" 'function))

(cffi:defcfun ("gsl_sort_uchar_smallest_index" #.(swig-lispify "gsl_sort_uchar_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uchar_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_uchar_largest" #.(swig-lispify "gsl_sort_uchar_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uchar_largest" 'function))

(cffi:defcfun ("gsl_sort_uchar_largest_index" #.(swig-lispify "gsl_sort_uchar_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uchar_largest_index" 'function))

(cffi:defcfun ("gsl_sort_uint" #.(swig-lispify "gsl_sort_uint" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uint" 'function))

(cffi:defcfun ("gsl_sort2_uint" #.(swig-lispify "gsl_sort2_uint" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_uint" 'function))

(cffi:defcfun ("gsl_sort_uint_index" #.(swig-lispify "gsl_sort_uint_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uint_index" 'function))

(cffi:defcfun ("gsl_sort_uint_smallest" #.(swig-lispify "gsl_sort_uint_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uint_smallest" 'function))

(cffi:defcfun ("gsl_sort_uint_smallest_index" #.(swig-lispify "gsl_sort_uint_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uint_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_uint_largest" #.(swig-lispify "gsl_sort_uint_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uint_largest" 'function))

(cffi:defcfun ("gsl_sort_uint_largest_index" #.(swig-lispify "gsl_sort_uint_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_uint_largest_index" 'function))

(cffi:defcfun ("gsl_sort_ulong" #.(swig-lispify "gsl_sort_ulong" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ulong" 'function))

(cffi:defcfun ("gsl_sort2_ulong" #.(swig-lispify "gsl_sort2_ulong" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_ulong" 'function))

(cffi:defcfun ("gsl_sort_ulong_index" #.(swig-lispify "gsl_sort_ulong_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ulong_index" 'function))

(cffi:defcfun ("gsl_sort_ulong_smallest" #.(swig-lispify "gsl_sort_ulong_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ulong_smallest" 'function))

(cffi:defcfun ("gsl_sort_ulong_smallest_index" #.(swig-lispify "gsl_sort_ulong_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ulong_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_ulong_largest" #.(swig-lispify "gsl_sort_ulong_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ulong_largest" 'function))

(cffi:defcfun ("gsl_sort_ulong_largest_index" #.(swig-lispify "gsl_sort_ulong_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ulong_largest_index" 'function))

(cffi:defcfun ("gsl_sort_ushort" #.(swig-lispify "gsl_sort_ushort" 'function)) :void
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ushort" 'function))

(cffi:defcfun ("gsl_sort2_ushort" #.(swig-lispify "gsl_sort2_ushort" 'function)) :void
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort2_ushort" 'function))

(cffi:defcfun ("gsl_sort_ushort_index" #.(swig-lispify "gsl_sort_ushort_index" 'function)) :void
  (p :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ushort_index" 'function))

(cffi:defcfun ("gsl_sort_ushort_smallest" #.(swig-lispify "gsl_sort_ushort_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ushort_smallest" 'function))

(cffi:defcfun ("gsl_sort_ushort_smallest_index" #.(swig-lispify "gsl_sort_ushort_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ushort_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_ushort_largest" #.(swig-lispify "gsl_sort_ushort_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ushort_largest" 'function))

(cffi:defcfun ("gsl_sort_ushort_largest_index" #.(swig-lispify "gsl_sort_ushort_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (src :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sort_ushort_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_char" #.(swig-lispify "gsl_sort_vector_char" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_char" 'function))

(cffi:defcfun ("gsl_sort_vector2_char" #.(swig-lispify "gsl_sort_vector2_char" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_char" 'function))

(cffi:defcfun ("gsl_sort_vector_char_index" #.(swig-lispify "gsl_sort_vector_char_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_char_index" 'function))

(cffi:defcfun ("gsl_sort_vector_char_smallest" #.(swig-lispify "gsl_sort_vector_char_smallest" 'function)) :int
  (dest :string)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_char_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_char_largest" #.(swig-lispify "gsl_sort_vector_char_largest" 'function)) :int
  (dest :string)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_char_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_char_smallest_index" #.(swig-lispify "gsl_sort_vector_char_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_char_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_char_largest_index" #.(swig-lispify "gsl_sort_vector_char_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_char_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector" #.(swig-lispify "gsl_sort_vector" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector" 'function))

(cffi:defcfun ("gsl_sort_vector2" #.(swig-lispify "gsl_sort_vector2" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2" 'function))

(cffi:defcfun ("gsl_sort_vector_index" #.(swig-lispify "gsl_sort_vector_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_index" 'function))

(cffi:defcfun ("gsl_sort_vector_smallest" #.(swig-lispify "gsl_sort_vector_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_largest" #.(swig-lispify "gsl_sort_vector_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_smallest_index" #.(swig-lispify "gsl_sort_vector_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_largest_index" #.(swig-lispify "gsl_sort_vector_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_float" #.(swig-lispify "gsl_sort_vector_float" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_float" 'function))

(cffi:defcfun ("gsl_sort_vector2_float" #.(swig-lispify "gsl_sort_vector2_float" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_float" 'function))

(cffi:defcfun ("gsl_sort_vector_float_index" #.(swig-lispify "gsl_sort_vector_float_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_float_index" 'function))

(cffi:defcfun ("gsl_sort_vector_float_smallest" #.(swig-lispify "gsl_sort_vector_float_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_float_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_float_largest" #.(swig-lispify "gsl_sort_vector_float_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_float_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_float_smallest_index" #.(swig-lispify "gsl_sort_vector_float_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_float_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_float_largest_index" #.(swig-lispify "gsl_sort_vector_float_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_float_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_int" #.(swig-lispify "gsl_sort_vector_int" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_int" 'function))

(cffi:defcfun ("gsl_sort_vector2_int" #.(swig-lispify "gsl_sort_vector2_int" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_int" 'function))

(cffi:defcfun ("gsl_sort_vector_int_index" #.(swig-lispify "gsl_sort_vector_int_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_int_index" 'function))

(cffi:defcfun ("gsl_sort_vector_int_smallest" #.(swig-lispify "gsl_sort_vector_int_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_int_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_int_largest" #.(swig-lispify "gsl_sort_vector_int_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_int_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_int_smallest_index" #.(swig-lispify "gsl_sort_vector_int_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_int_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_int_largest_index" #.(swig-lispify "gsl_sort_vector_int_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_int_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_long" #.(swig-lispify "gsl_sort_vector_long" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long" 'function))

(cffi:defcfun ("gsl_sort_vector2_long" #.(swig-lispify "gsl_sort_vector2_long" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_long" 'function))

(cffi:defcfun ("gsl_sort_vector_long_index" #.(swig-lispify "gsl_sort_vector_long_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_index" 'function))

(cffi:defcfun ("gsl_sort_vector_long_smallest" #.(swig-lispify "gsl_sort_vector_long_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_long_largest" #.(swig-lispify "gsl_sort_vector_long_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_long_smallest_index" #.(swig-lispify "gsl_sort_vector_long_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_long_largest_index" #.(swig-lispify "gsl_sort_vector_long_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_long_double" #.(swig-lispify "gsl_sort_vector_long_double" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_double" 'function))

(cffi:defcfun ("gsl_sort_vector2_long_double" #.(swig-lispify "gsl_sort_vector2_long_double" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_long_double" 'function))

(cffi:defcfun ("gsl_sort_vector_long_double_index" #.(swig-lispify "gsl_sort_vector_long_double_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_double_index" 'function))

(cffi:defcfun ("gsl_sort_vector_long_double_smallest" #.(swig-lispify "gsl_sort_vector_long_double_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_double_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_long_double_largest" #.(swig-lispify "gsl_sort_vector_long_double_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_double_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_long_double_smallest_index" #.(swig-lispify "gsl_sort_vector_long_double_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_double_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_long_double_largest_index" #.(swig-lispify "gsl_sort_vector_long_double_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_long_double_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_short" #.(swig-lispify "gsl_sort_vector_short" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_short" 'function))

(cffi:defcfun ("gsl_sort_vector2_short" #.(swig-lispify "gsl_sort_vector2_short" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_short" 'function))

(cffi:defcfun ("gsl_sort_vector_short_index" #.(swig-lispify "gsl_sort_vector_short_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_short_index" 'function))

(cffi:defcfun ("gsl_sort_vector_short_smallest" #.(swig-lispify "gsl_sort_vector_short_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_short_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_short_largest" #.(swig-lispify "gsl_sort_vector_short_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_short_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_short_smallest_index" #.(swig-lispify "gsl_sort_vector_short_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_short_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_short_largest_index" #.(swig-lispify "gsl_sort_vector_short_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_short_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_uchar" #.(swig-lispify "gsl_sort_vector_uchar" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uchar" 'function))

(cffi:defcfun ("gsl_sort_vector2_uchar" #.(swig-lispify "gsl_sort_vector2_uchar" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_uchar" 'function))

(cffi:defcfun ("gsl_sort_vector_uchar_index" #.(swig-lispify "gsl_sort_vector_uchar_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uchar_index" 'function))

(cffi:defcfun ("gsl_sort_vector_uchar_smallest" #.(swig-lispify "gsl_sort_vector_uchar_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uchar_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_uchar_largest" #.(swig-lispify "gsl_sort_vector_uchar_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uchar_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_uchar_smallest_index" #.(swig-lispify "gsl_sort_vector_uchar_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uchar_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_uchar_largest_index" #.(swig-lispify "gsl_sort_vector_uchar_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uchar_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_uint" #.(swig-lispify "gsl_sort_vector_uint" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uint" 'function))

(cffi:defcfun ("gsl_sort_vector2_uint" #.(swig-lispify "gsl_sort_vector2_uint" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_uint" 'function))

(cffi:defcfun ("gsl_sort_vector_uint_index" #.(swig-lispify "gsl_sort_vector_uint_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uint_index" 'function))

(cffi:defcfun ("gsl_sort_vector_uint_smallest" #.(swig-lispify "gsl_sort_vector_uint_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uint_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_uint_largest" #.(swig-lispify "gsl_sort_vector_uint_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uint_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_uint_smallest_index" #.(swig-lispify "gsl_sort_vector_uint_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uint_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_uint_largest_index" #.(swig-lispify "gsl_sort_vector_uint_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_uint_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_ulong" #.(swig-lispify "gsl_sort_vector_ulong" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ulong" 'function))

(cffi:defcfun ("gsl_sort_vector2_ulong" #.(swig-lispify "gsl_sort_vector2_ulong" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_ulong" 'function))

(cffi:defcfun ("gsl_sort_vector_ulong_index" #.(swig-lispify "gsl_sort_vector_ulong_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ulong_index" 'function))

(cffi:defcfun ("gsl_sort_vector_ulong_smallest" #.(swig-lispify "gsl_sort_vector_ulong_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ulong_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_ulong_largest" #.(swig-lispify "gsl_sort_vector_ulong_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ulong_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_ulong_smallest_index" #.(swig-lispify "gsl_sort_vector_ulong_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ulong_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_ulong_largest_index" #.(swig-lispify "gsl_sort_vector_ulong_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ulong_largest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_ushort" #.(swig-lispify "gsl_sort_vector_ushort" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ushort" 'function))

(cffi:defcfun ("gsl_sort_vector2_ushort" #.(swig-lispify "gsl_sort_vector2_ushort" 'function)) :void
  (v1 :pointer)
  (v2 :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector2_ushort" 'function))

(cffi:defcfun ("gsl_sort_vector_ushort_index" #.(swig-lispify "gsl_sort_vector_ushort_index" 'function)) :int
  (p :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ushort_index" 'function))

(cffi:defcfun ("gsl_sort_vector_ushort_smallest" #.(swig-lispify "gsl_sort_vector_ushort_smallest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ushort_smallest" 'function))

(cffi:defcfun ("gsl_sort_vector_ushort_largest" #.(swig-lispify "gsl_sort_vector_ushort_largest" 'function)) :int
  (dest :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ushort_largest" 'function))

(cffi:defcfun ("gsl_sort_vector_ushort_smallest_index" #.(swig-lispify "gsl_sort_vector_ushort_smallest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ushort_smallest_index" 'function))

(cffi:defcfun ("gsl_sort_vector_ushort_largest_index" #.(swig-lispify "gsl_sort_vector_ushort_largest_index" 'function)) :int
  (p :pointer)
  (k :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_sort_vector_ushort_largest_index" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_spline" 'classname)
	(#.(swig-lispify "interp" 'slotname) :pointer)
	(#.(swig-lispify "x" 'slotname) :pointer)
	(#.(swig-lispify "y" 'slotname) :pointer)
	(#.(swig-lispify "size" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_spline" 'classname))

(cl:export '#.(swig-lispify "interp" 'slotname))

(cl:export '#.(swig-lispify "x" 'slotname))

(cl:export '#.(swig-lispify "y" 'slotname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cffi:defcfun ("gsl_spline_alloc" #.(swig-lispify "gsl_spline_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_spline_alloc" 'function))

(cffi:defcfun ("gsl_spline_init" #.(swig-lispify "gsl_spline_init" 'function)) :int
  (spline :pointer)
  (xa :pointer)
  (ya :pointer)
  (size :pointer))

(cl:export '#.(swig-lispify "gsl_spline_init" 'function))

(cffi:defcfun ("gsl_spline_name" #.(swig-lispify "gsl_spline_name" 'function)) :string
  (spline :pointer))

(cl:export '#.(swig-lispify "gsl_spline_name" 'function))

(cffi:defcfun ("gsl_spline_min_size" #.(swig-lispify "gsl_spline_min_size" 'function)) :unsigned-int
  (spline :pointer))

(cl:export '#.(swig-lispify "gsl_spline_min_size" 'function))

(cffi:defcfun ("gsl_spline_eval_e" #.(swig-lispify "gsl_spline_eval_e" 'function)) :int
  (spline :pointer)
  (x :double)
  (a :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_e" 'function))

(cffi:defcfun ("gsl_spline_eval" #.(swig-lispify "gsl_spline_eval" 'function)) :double
  (spline :pointer)
  (x :double)
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval" 'function))

(cffi:defcfun ("gsl_spline_eval_deriv_e" #.(swig-lispify "gsl_spline_eval_deriv_e" 'function)) :int
  (spline :pointer)
  (x :double)
  (a :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_deriv_e" 'function))

(cffi:defcfun ("gsl_spline_eval_deriv" #.(swig-lispify "gsl_spline_eval_deriv" 'function)) :double
  (spline :pointer)
  (x :double)
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_deriv" 'function))

(cffi:defcfun ("gsl_spline_eval_deriv2_e" #.(swig-lispify "gsl_spline_eval_deriv2_e" 'function)) :int
  (spline :pointer)
  (x :double)
  (a :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_deriv2_e" 'function))

(cffi:defcfun ("gsl_spline_eval_deriv2" #.(swig-lispify "gsl_spline_eval_deriv2" 'function)) :double
  (spline :pointer)
  (x :double)
  (a :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_deriv2" 'function))

(cffi:defcfun ("gsl_spline_eval_integ_e" #.(swig-lispify "gsl_spline_eval_integ_e" 'function)) :int
  (spline :pointer)
  (a :double)
  (b :double)
  (acc :pointer)
  (y :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_integ_e" 'function))

(cffi:defcfun ("gsl_spline_eval_integ" #.(swig-lispify "gsl_spline_eval_integ" 'function)) :double
  (spline :pointer)
  (a :double)
  (b :double)
  (acc :pointer))

(cl:export '#.(swig-lispify "gsl_spline_eval_integ" 'function))

(cffi:defcfun ("gsl_spline_free" #.(swig-lispify "gsl_spline_free" 'function)) :void
  (spline :pointer))

(cl:export '#.(swig-lispify "gsl_spline_free" 'function))

(cffi:defcfun ("gsl_stats_char_mean" #.(swig-lispify "gsl_stats_char_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_mean" 'function))

(cffi:defcfun ("gsl_stats_char_variance" #.(swig-lispify "gsl_stats_char_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_variance" 'function))

(cffi:defcfun ("gsl_stats_char_sd" #.(swig-lispify "gsl_stats_char_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_sd" 'function))

(cffi:defcfun ("gsl_stats_char_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_char_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_char_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_char_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_char_tss" #.(swig-lispify "gsl_stats_char_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_tss" 'function))

(cffi:defcfun ("gsl_stats_char_tss_m" #.(swig-lispify "gsl_stats_char_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_tss_m" 'function))

(cffi:defcfun ("gsl_stats_char_absdev" #.(swig-lispify "gsl_stats_char_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_absdev" 'function))

(cffi:defcfun ("gsl_stats_char_skew" #.(swig-lispify "gsl_stats_char_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_skew" 'function))

(cffi:defcfun ("gsl_stats_char_kurtosis" #.(swig-lispify "gsl_stats_char_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_char_lag1_autocorrelation" #.(swig-lispify "gsl_stats_char_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_char_covariance" #.(swig-lispify "gsl_stats_char_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_covariance" 'function))

(cffi:defcfun ("gsl_stats_char_correlation" #.(swig-lispify "gsl_stats_char_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_correlation" 'function))

(cffi:defcfun ("gsl_stats_char_spearman" #.(swig-lispify "gsl_stats_char_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_spearman" 'function))

(cffi:defcfun ("gsl_stats_char_variance_m" #.(swig-lispify "gsl_stats_char_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_variance_m" 'function))

(cffi:defcfun ("gsl_stats_char_sd_m" #.(swig-lispify "gsl_stats_char_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_sd_m" 'function))

(cffi:defcfun ("gsl_stats_char_absdev_m" #.(swig-lispify "gsl_stats_char_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_char_skew_m_sd" #.(swig-lispify "gsl_stats_char_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_char_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_char_kurtosis_m_sd" #.(swig-lispify "gsl_stats_char_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_char_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_char_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_char_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_char_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_char_covariance_m" #.(swig-lispify "gsl_stats_char_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_char_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_char_pvariance" #.(swig-lispify "gsl_stats_char_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_pvariance" 'function))

(cffi:defcfun ("gsl_stats_char_ttest" #.(swig-lispify "gsl_stats_char_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_ttest" 'function))

(cffi:defcfun ("gsl_stats_char_max" #.(swig-lispify "gsl_stats_char_max" 'function)) :char
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_max" 'function))

(cffi:defcfun ("gsl_stats_char_min" #.(swig-lispify "gsl_stats_char_min" 'function)) :char
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_min" 'function))

(cffi:defcfun ("gsl_stats_char_minmax" #.(swig-lispify "gsl_stats_char_minmax" 'function)) :void
  (min :string)
  (max :string)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_minmax" 'function))

(cffi:defcfun ("gsl_stats_char_max_index" #.(swig-lispify "gsl_stats_char_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_max_index" 'function))

(cffi:defcfun ("gsl_stats_char_min_index" #.(swig-lispify "gsl_stats_char_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_min_index" 'function))

(cffi:defcfun ("gsl_stats_char_minmax_index" #.(swig-lispify "gsl_stats_char_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_char_median_from_sorted_data" #.(swig-lispify "gsl_stats_char_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_char_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_char_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_char_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_char_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_mean" #.(swig-lispify "gsl_stats_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_mean" 'function))

(cffi:defcfun ("gsl_stats_variance" #.(swig-lispify "gsl_stats_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_variance" 'function))

(cffi:defcfun ("gsl_stats_sd" #.(swig-lispify "gsl_stats_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_sd" 'function))

(cffi:defcfun ("gsl_stats_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_tss" #.(swig-lispify "gsl_stats_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_tss" 'function))

(cffi:defcfun ("gsl_stats_tss_m" #.(swig-lispify "gsl_stats_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_tss_m" 'function))

(cffi:defcfun ("gsl_stats_absdev" #.(swig-lispify "gsl_stats_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_absdev" 'function))

(cffi:defcfun ("gsl_stats_skew" #.(swig-lispify "gsl_stats_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_skew" 'function))

(cffi:defcfun ("gsl_stats_kurtosis" #.(swig-lispify "gsl_stats_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_lag1_autocorrelation" #.(swig-lispify "gsl_stats_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_covariance" #.(swig-lispify "gsl_stats_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_covariance" 'function))

(cffi:defcfun ("gsl_stats_correlation" #.(swig-lispify "gsl_stats_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_correlation" 'function))

(cffi:defcfun ("gsl_stats_spearman" #.(swig-lispify "gsl_stats_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_spearman" 'function))

(cffi:defcfun ("gsl_stats_variance_m" #.(swig-lispify "gsl_stats_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_variance_m" 'function))

(cffi:defcfun ("gsl_stats_sd_m" #.(swig-lispify "gsl_stats_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_sd_m" 'function))

(cffi:defcfun ("gsl_stats_absdev_m" #.(swig-lispify "gsl_stats_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_skew_m_sd" #.(swig-lispify "gsl_stats_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_kurtosis_m_sd" #.(swig-lispify "gsl_stats_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_covariance_m" #.(swig-lispify "gsl_stats_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_wmean" #.(swig-lispify "gsl_stats_wmean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wmean" 'function))

(cffi:defcfun ("gsl_stats_wvariance" #.(swig-lispify "gsl_stats_wvariance" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wvariance" 'function))

(cffi:defcfun ("gsl_stats_wsd" #.(swig-lispify "gsl_stats_wsd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wsd" 'function))

(cffi:defcfun ("gsl_stats_wvariance_with_fixed_mean" #.(swig-lispify "gsl_stats_wvariance_with_fixed_mean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_wvariance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_wsd_with_fixed_mean" #.(swig-lispify "gsl_stats_wsd_with_fixed_mean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_wsd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_wtss" #.(swig-lispify "gsl_stats_wtss" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wtss" 'function))

(cffi:defcfun ("gsl_stats_wtss_m" #.(swig-lispify "gsl_stats_wtss_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_wtss_m" 'function))

(cffi:defcfun ("gsl_stats_wabsdev" #.(swig-lispify "gsl_stats_wabsdev" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wabsdev" 'function))

(cffi:defcfun ("gsl_stats_wskew" #.(swig-lispify "gsl_stats_wskew" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wskew" 'function))

(cffi:defcfun ("gsl_stats_wkurtosis" #.(swig-lispify "gsl_stats_wkurtosis" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_wkurtosis" 'function))

(cffi:defcfun ("gsl_stats_wvariance_m" #.(swig-lispify "gsl_stats_wvariance_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_wvariance_m" 'function))

(cffi:defcfun ("gsl_stats_wsd_m" #.(swig-lispify "gsl_stats_wsd_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_wsd_m" 'function))

(cffi:defcfun ("gsl_stats_wabsdev_m" #.(swig-lispify "gsl_stats_wabsdev_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_wabsdev_m" 'function))

(cffi:defcfun ("gsl_stats_wskew_m_sd" #.(swig-lispify "gsl_stats_wskew_m_sd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double)
  (wsd :double))

(cl:export '#.(swig-lispify "gsl_stats_wskew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_wkurtosis_m_sd" #.(swig-lispify "gsl_stats_wkurtosis_m_sd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double)
  (wsd :double))

(cl:export '#.(swig-lispify "gsl_stats_wkurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_pvariance" #.(swig-lispify "gsl_stats_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_pvariance" 'function))

(cffi:defcfun ("gsl_stats_ttest" #.(swig-lispify "gsl_stats_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ttest" 'function))

(cffi:defcfun ("gsl_stats_max" #.(swig-lispify "gsl_stats_max" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_max" 'function))

(cffi:defcfun ("gsl_stats_min" #.(swig-lispify "gsl_stats_min" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_min" 'function))

(cffi:defcfun ("gsl_stats_minmax" #.(swig-lispify "gsl_stats_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_minmax" 'function))

(cffi:defcfun ("gsl_stats_max_index" #.(swig-lispify "gsl_stats_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_max_index" 'function))

(cffi:defcfun ("gsl_stats_min_index" #.(swig-lispify "gsl_stats_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_min_index" 'function))

(cffi:defcfun ("gsl_stats_minmax_index" #.(swig-lispify "gsl_stats_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_median_from_sorted_data" #.(swig-lispify "gsl_stats_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_float_mean" #.(swig-lispify "gsl_stats_float_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_mean" 'function))

(cffi:defcfun ("gsl_stats_float_variance" #.(swig-lispify "gsl_stats_float_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_variance" 'function))

(cffi:defcfun ("gsl_stats_float_sd" #.(swig-lispify "gsl_stats_float_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_sd" 'function))

(cffi:defcfun ("gsl_stats_float_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_float_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_float_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_float_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_float_tss" #.(swig-lispify "gsl_stats_float_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_tss" 'function))

(cffi:defcfun ("gsl_stats_float_tss_m" #.(swig-lispify "gsl_stats_float_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_tss_m" 'function))

(cffi:defcfun ("gsl_stats_float_absdev" #.(swig-lispify "gsl_stats_float_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_absdev" 'function))

(cffi:defcfun ("gsl_stats_float_skew" #.(swig-lispify "gsl_stats_float_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_skew" 'function))

(cffi:defcfun ("gsl_stats_float_kurtosis" #.(swig-lispify "gsl_stats_float_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_float_lag1_autocorrelation" #.(swig-lispify "gsl_stats_float_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_float_covariance" #.(swig-lispify "gsl_stats_float_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_covariance" 'function))

(cffi:defcfun ("gsl_stats_float_correlation" #.(swig-lispify "gsl_stats_float_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_correlation" 'function))

(cffi:defcfun ("gsl_stats_float_spearman" #.(swig-lispify "gsl_stats_float_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_spearman" 'function))

(cffi:defcfun ("gsl_stats_float_variance_m" #.(swig-lispify "gsl_stats_float_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_variance_m" 'function))

(cffi:defcfun ("gsl_stats_float_sd_m" #.(swig-lispify "gsl_stats_float_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_sd_m" 'function))

(cffi:defcfun ("gsl_stats_float_absdev_m" #.(swig-lispify "gsl_stats_float_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_float_skew_m_sd" #.(swig-lispify "gsl_stats_float_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_float_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_float_kurtosis_m_sd" #.(swig-lispify "gsl_stats_float_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_float_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_float_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_float_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_float_covariance_m" #.(swig-lispify "gsl_stats_float_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_float_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_float_wmean" #.(swig-lispify "gsl_stats_float_wmean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wmean" 'function))

(cffi:defcfun ("gsl_stats_float_wvariance" #.(swig-lispify "gsl_stats_float_wvariance" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wvariance" 'function))

(cffi:defcfun ("gsl_stats_float_wsd" #.(swig-lispify "gsl_stats_float_wsd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wsd" 'function))

(cffi:defcfun ("gsl_stats_float_wvariance_with_fixed_mean" #.(swig-lispify "gsl_stats_float_wvariance_with_fixed_mean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wvariance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_float_wsd_with_fixed_mean" #.(swig-lispify "gsl_stats_float_wsd_with_fixed_mean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wsd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_float_wtss" #.(swig-lispify "gsl_stats_float_wtss" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wtss" 'function))

(cffi:defcfun ("gsl_stats_float_wtss_m" #.(swig-lispify "gsl_stats_float_wtss_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wtss_m" 'function))

(cffi:defcfun ("gsl_stats_float_wabsdev" #.(swig-lispify "gsl_stats_float_wabsdev" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wabsdev" 'function))

(cffi:defcfun ("gsl_stats_float_wskew" #.(swig-lispify "gsl_stats_float_wskew" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wskew" 'function))

(cffi:defcfun ("gsl_stats_float_wkurtosis" #.(swig-lispify "gsl_stats_float_wkurtosis" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_wkurtosis" 'function))

(cffi:defcfun ("gsl_stats_float_wvariance_m" #.(swig-lispify "gsl_stats_float_wvariance_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wvariance_m" 'function))

(cffi:defcfun ("gsl_stats_float_wsd_m" #.(swig-lispify "gsl_stats_float_wsd_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wsd_m" 'function))

(cffi:defcfun ("gsl_stats_float_wabsdev_m" #.(swig-lispify "gsl_stats_float_wabsdev_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wabsdev_m" 'function))

(cffi:defcfun ("gsl_stats_float_wskew_m_sd" #.(swig-lispify "gsl_stats_float_wskew_m_sd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double)
  (wsd :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wskew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_float_wkurtosis_m_sd" #.(swig-lispify "gsl_stats_float_wkurtosis_m_sd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double)
  (wsd :double))

(cl:export '#.(swig-lispify "gsl_stats_float_wkurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_float_pvariance" #.(swig-lispify "gsl_stats_float_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_pvariance" 'function))

(cffi:defcfun ("gsl_stats_float_ttest" #.(swig-lispify "gsl_stats_float_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_ttest" 'function))

(cffi:defcfun ("gsl_stats_float_max" #.(swig-lispify "gsl_stats_float_max" 'function)) :float
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_max" 'function))

(cffi:defcfun ("gsl_stats_float_min" #.(swig-lispify "gsl_stats_float_min" 'function)) :float
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_min" 'function))

(cffi:defcfun ("gsl_stats_float_minmax" #.(swig-lispify "gsl_stats_float_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_minmax" 'function))

(cffi:defcfun ("gsl_stats_float_max_index" #.(swig-lispify "gsl_stats_float_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_max_index" 'function))

(cffi:defcfun ("gsl_stats_float_min_index" #.(swig-lispify "gsl_stats_float_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_min_index" 'function))

(cffi:defcfun ("gsl_stats_float_minmax_index" #.(swig-lispify "gsl_stats_float_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_float_median_from_sorted_data" #.(swig-lispify "gsl_stats_float_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_float_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_float_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_float_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_float_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_int_mean" #.(swig-lispify "gsl_stats_int_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_mean" 'function))

(cffi:defcfun ("gsl_stats_int_variance" #.(swig-lispify "gsl_stats_int_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_variance" 'function))

(cffi:defcfun ("gsl_stats_int_sd" #.(swig-lispify "gsl_stats_int_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_sd" 'function))

(cffi:defcfun ("gsl_stats_int_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_int_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_int_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_int_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_int_tss" #.(swig-lispify "gsl_stats_int_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_tss" 'function))

(cffi:defcfun ("gsl_stats_int_tss_m" #.(swig-lispify "gsl_stats_int_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_tss_m" 'function))

(cffi:defcfun ("gsl_stats_int_absdev" #.(swig-lispify "gsl_stats_int_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_absdev" 'function))

(cffi:defcfun ("gsl_stats_int_skew" #.(swig-lispify "gsl_stats_int_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_skew" 'function))

(cffi:defcfun ("gsl_stats_int_kurtosis" #.(swig-lispify "gsl_stats_int_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_int_lag1_autocorrelation" #.(swig-lispify "gsl_stats_int_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_int_covariance" #.(swig-lispify "gsl_stats_int_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_covariance" 'function))

(cffi:defcfun ("gsl_stats_int_correlation" #.(swig-lispify "gsl_stats_int_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_correlation" 'function))

(cffi:defcfun ("gsl_stats_int_spearman" #.(swig-lispify "gsl_stats_int_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_spearman" 'function))

(cffi:defcfun ("gsl_stats_int_variance_m" #.(swig-lispify "gsl_stats_int_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_variance_m" 'function))

(cffi:defcfun ("gsl_stats_int_sd_m" #.(swig-lispify "gsl_stats_int_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_sd_m" 'function))

(cffi:defcfun ("gsl_stats_int_absdev_m" #.(swig-lispify "gsl_stats_int_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_int_skew_m_sd" #.(swig-lispify "gsl_stats_int_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_int_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_int_kurtosis_m_sd" #.(swig-lispify "gsl_stats_int_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_int_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_int_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_int_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_int_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_int_covariance_m" #.(swig-lispify "gsl_stats_int_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_int_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_int_pvariance" #.(swig-lispify "gsl_stats_int_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_pvariance" 'function))

(cffi:defcfun ("gsl_stats_int_ttest" #.(swig-lispify "gsl_stats_int_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_ttest" 'function))

(cffi:defcfun ("gsl_stats_int_max" #.(swig-lispify "gsl_stats_int_max" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_max" 'function))

(cffi:defcfun ("gsl_stats_int_min" #.(swig-lispify "gsl_stats_int_min" 'function)) :int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_min" 'function))

(cffi:defcfun ("gsl_stats_int_minmax" #.(swig-lispify "gsl_stats_int_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_minmax" 'function))

(cffi:defcfun ("gsl_stats_int_max_index" #.(swig-lispify "gsl_stats_int_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_max_index" 'function))

(cffi:defcfun ("gsl_stats_int_min_index" #.(swig-lispify "gsl_stats_int_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_min_index" 'function))

(cffi:defcfun ("gsl_stats_int_minmax_index" #.(swig-lispify "gsl_stats_int_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_int_median_from_sorted_data" #.(swig-lispify "gsl_stats_int_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_int_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_int_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_int_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_int_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_long_mean" #.(swig-lispify "gsl_stats_long_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_mean" 'function))

(cffi:defcfun ("gsl_stats_long_variance" #.(swig-lispify "gsl_stats_long_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_variance" 'function))

(cffi:defcfun ("gsl_stats_long_sd" #.(swig-lispify "gsl_stats_long_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_sd" 'function))

(cffi:defcfun ("gsl_stats_long_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_long_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_long_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_long_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_long_tss" #.(swig-lispify "gsl_stats_long_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_tss" 'function))

(cffi:defcfun ("gsl_stats_long_tss_m" #.(swig-lispify "gsl_stats_long_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_tss_m" 'function))

(cffi:defcfun ("gsl_stats_long_absdev" #.(swig-lispify "gsl_stats_long_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_absdev" 'function))

(cffi:defcfun ("gsl_stats_long_skew" #.(swig-lispify "gsl_stats_long_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_skew" 'function))

(cffi:defcfun ("gsl_stats_long_kurtosis" #.(swig-lispify "gsl_stats_long_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_long_lag1_autocorrelation" #.(swig-lispify "gsl_stats_long_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_long_covariance" #.(swig-lispify "gsl_stats_long_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_covariance" 'function))

(cffi:defcfun ("gsl_stats_long_correlation" #.(swig-lispify "gsl_stats_long_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_correlation" 'function))

(cffi:defcfun ("gsl_stats_long_spearman" #.(swig-lispify "gsl_stats_long_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_spearman" 'function))

(cffi:defcfun ("gsl_stats_long_variance_m" #.(swig-lispify "gsl_stats_long_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_variance_m" 'function))

(cffi:defcfun ("gsl_stats_long_sd_m" #.(swig-lispify "gsl_stats_long_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_sd_m" 'function))

(cffi:defcfun ("gsl_stats_long_absdev_m" #.(swig-lispify "gsl_stats_long_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_long_skew_m_sd" #.(swig-lispify "gsl_stats_long_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_long_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_long_kurtosis_m_sd" #.(swig-lispify "gsl_stats_long_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_long_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_long_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_long_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_long_covariance_m" #.(swig-lispify "gsl_stats_long_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_long_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_long_pvariance" #.(swig-lispify "gsl_stats_long_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_pvariance" 'function))

(cffi:defcfun ("gsl_stats_long_ttest" #.(swig-lispify "gsl_stats_long_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_ttest" 'function))

(cffi:defcfun ("gsl_stats_long_max" #.(swig-lispify "gsl_stats_long_max" 'function)) :long
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_max" 'function))

(cffi:defcfun ("gsl_stats_long_min" #.(swig-lispify "gsl_stats_long_min" 'function)) :long
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_min" 'function))

(cffi:defcfun ("gsl_stats_long_minmax" #.(swig-lispify "gsl_stats_long_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_minmax" 'function))

(cffi:defcfun ("gsl_stats_long_max_index" #.(swig-lispify "gsl_stats_long_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_max_index" 'function))

(cffi:defcfun ("gsl_stats_long_min_index" #.(swig-lispify "gsl_stats_long_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_min_index" 'function))

(cffi:defcfun ("gsl_stats_long_minmax_index" #.(swig-lispify "gsl_stats_long_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_long_median_from_sorted_data" #.(swig-lispify "gsl_stats_long_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_long_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_long_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_long_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_long_double_mean" #.(swig-lispify "gsl_stats_long_double_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_mean" 'function))

(cffi:defcfun ("gsl_stats_long_double_variance" #.(swig-lispify "gsl_stats_long_double_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_variance" 'function))

(cffi:defcfun ("gsl_stats_long_double_sd" #.(swig-lispify "gsl_stats_long_double_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_sd" 'function))

(cffi:defcfun ("gsl_stats_long_double_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_long_double_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_long_double_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_long_double_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_long_double_tss" #.(swig-lispify "gsl_stats_long_double_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_tss" 'function))

(cffi:defcfun ("gsl_stats_long_double_tss_m" #.(swig-lispify "gsl_stats_long_double_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_tss_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_absdev" #.(swig-lispify "gsl_stats_long_double_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_absdev" 'function))

(cffi:defcfun ("gsl_stats_long_double_skew" #.(swig-lispify "gsl_stats_long_double_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_skew" 'function))

(cffi:defcfun ("gsl_stats_long_double_kurtosis" #.(swig-lispify "gsl_stats_long_double_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_long_double_lag1_autocorrelation" #.(swig-lispify "gsl_stats_long_double_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_long_double_covariance" #.(swig-lispify "gsl_stats_long_double_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_covariance" 'function))

(cffi:defcfun ("gsl_stats_long_double_correlation" #.(swig-lispify "gsl_stats_long_double_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_correlation" 'function))

(cffi:defcfun ("gsl_stats_long_double_spearman" #.(swig-lispify "gsl_stats_long_double_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_spearman" 'function))

(cffi:defcfun ("gsl_stats_long_double_variance_m" #.(swig-lispify "gsl_stats_long_double_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_variance_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_sd_m" #.(swig-lispify "gsl_stats_long_double_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_sd_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_absdev_m" #.(swig-lispify "gsl_stats_long_double_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_skew_m_sd" #.(swig-lispify "gsl_stats_long_double_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_long_double_kurtosis_m_sd" #.(swig-lispify "gsl_stats_long_double_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_long_double_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_long_double_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_covariance_m" #.(swig-lispify "gsl_stats_long_double_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_wmean" #.(swig-lispify "gsl_stats_long_double_wmean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wmean" 'function))

(cffi:defcfun ("gsl_stats_long_double_wvariance" #.(swig-lispify "gsl_stats_long_double_wvariance" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wvariance" 'function))

(cffi:defcfun ("gsl_stats_long_double_wsd" #.(swig-lispify "gsl_stats_long_double_wsd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wsd" 'function))

(cffi:defcfun ("gsl_stats_long_double_wvariance_with_fixed_mean" #.(swig-lispify "gsl_stats_long_double_wvariance_with_fixed_mean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wvariance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_long_double_wsd_with_fixed_mean" #.(swig-lispify "gsl_stats_long_double_wsd_with_fixed_mean" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wsd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_long_double_wtss" #.(swig-lispify "gsl_stats_long_double_wtss" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wtss" 'function))

(cffi:defcfun ("gsl_stats_long_double_wtss_m" #.(swig-lispify "gsl_stats_long_double_wtss_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wtss_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_wabsdev" #.(swig-lispify "gsl_stats_long_double_wabsdev" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wabsdev" 'function))

(cffi:defcfun ("gsl_stats_long_double_wskew" #.(swig-lispify "gsl_stats_long_double_wskew" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wskew" 'function))

(cffi:defcfun ("gsl_stats_long_double_wkurtosis" #.(swig-lispify "gsl_stats_long_double_wkurtosis" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wkurtosis" 'function))

(cffi:defcfun ("gsl_stats_long_double_wvariance_m" #.(swig-lispify "gsl_stats_long_double_wvariance_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wvariance_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_wsd_m" #.(swig-lispify "gsl_stats_long_double_wsd_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wsd_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_wabsdev_m" #.(swig-lispify "gsl_stats_long_double_wabsdev_m" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wabsdev_m" 'function))

(cffi:defcfun ("gsl_stats_long_double_wskew_m_sd" #.(swig-lispify "gsl_stats_long_double_wskew_m_sd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double)
  (wsd :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wskew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_long_double_wkurtosis_m_sd" #.(swig-lispify "gsl_stats_long_double_wkurtosis_m_sd" 'function)) :double
  (w :pointer)
  (wstride :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (wmean :double)
  (wsd :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_wkurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_long_double_pvariance" #.(swig-lispify "gsl_stats_long_double_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_pvariance" 'function))

(cffi:defcfun ("gsl_stats_long_double_ttest" #.(swig-lispify "gsl_stats_long_double_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_ttest" 'function))

(cffi:defcfun ("gsl_stats_long_double_max" #.(swig-lispify "gsl_stats_long_double_max" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_max" 'function))

(cffi:defcfun ("gsl_stats_long_double_min" #.(swig-lispify "gsl_stats_long_double_min" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_min" 'function))

(cffi:defcfun ("gsl_stats_long_double_minmax" #.(swig-lispify "gsl_stats_long_double_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_minmax" 'function))

(cffi:defcfun ("gsl_stats_long_double_max_index" #.(swig-lispify "gsl_stats_long_double_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_max_index" 'function))

(cffi:defcfun ("gsl_stats_long_double_min_index" #.(swig-lispify "gsl_stats_long_double_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_min_index" 'function))

(cffi:defcfun ("gsl_stats_long_double_minmax_index" #.(swig-lispify "gsl_stats_long_double_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_long_double_median_from_sorted_data" #.(swig-lispify "gsl_stats_long_double_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_long_double_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_long_double_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_long_double_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_long_double_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_short_mean" #.(swig-lispify "gsl_stats_short_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_mean" 'function))

(cffi:defcfun ("gsl_stats_short_variance" #.(swig-lispify "gsl_stats_short_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_variance" 'function))

(cffi:defcfun ("gsl_stats_short_sd" #.(swig-lispify "gsl_stats_short_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_sd" 'function))

(cffi:defcfun ("gsl_stats_short_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_short_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_short_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_short_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_short_tss" #.(swig-lispify "gsl_stats_short_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_tss" 'function))

(cffi:defcfun ("gsl_stats_short_tss_m" #.(swig-lispify "gsl_stats_short_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_tss_m" 'function))

(cffi:defcfun ("gsl_stats_short_absdev" #.(swig-lispify "gsl_stats_short_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_absdev" 'function))

(cffi:defcfun ("gsl_stats_short_skew" #.(swig-lispify "gsl_stats_short_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_skew" 'function))

(cffi:defcfun ("gsl_stats_short_kurtosis" #.(swig-lispify "gsl_stats_short_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_short_lag1_autocorrelation" #.(swig-lispify "gsl_stats_short_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_short_covariance" #.(swig-lispify "gsl_stats_short_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_covariance" 'function))

(cffi:defcfun ("gsl_stats_short_correlation" #.(swig-lispify "gsl_stats_short_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_correlation" 'function))

(cffi:defcfun ("gsl_stats_short_spearman" #.(swig-lispify "gsl_stats_short_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_spearman" 'function))

(cffi:defcfun ("gsl_stats_short_variance_m" #.(swig-lispify "gsl_stats_short_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_variance_m" 'function))

(cffi:defcfun ("gsl_stats_short_sd_m" #.(swig-lispify "gsl_stats_short_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_sd_m" 'function))

(cffi:defcfun ("gsl_stats_short_absdev_m" #.(swig-lispify "gsl_stats_short_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_short_skew_m_sd" #.(swig-lispify "gsl_stats_short_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_short_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_short_kurtosis_m_sd" #.(swig-lispify "gsl_stats_short_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_short_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_short_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_short_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_short_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_short_covariance_m" #.(swig-lispify "gsl_stats_short_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_short_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_short_pvariance" #.(swig-lispify "gsl_stats_short_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_pvariance" 'function))

(cffi:defcfun ("gsl_stats_short_ttest" #.(swig-lispify "gsl_stats_short_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_ttest" 'function))

(cffi:defcfun ("gsl_stats_short_max" #.(swig-lispify "gsl_stats_short_max" 'function)) :short
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_max" 'function))

(cffi:defcfun ("gsl_stats_short_min" #.(swig-lispify "gsl_stats_short_min" 'function)) :short
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_min" 'function))

(cffi:defcfun ("gsl_stats_short_minmax" #.(swig-lispify "gsl_stats_short_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_minmax" 'function))

(cffi:defcfun ("gsl_stats_short_max_index" #.(swig-lispify "gsl_stats_short_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_max_index" 'function))

(cffi:defcfun ("gsl_stats_short_min_index" #.(swig-lispify "gsl_stats_short_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_min_index" 'function))

(cffi:defcfun ("gsl_stats_short_minmax_index" #.(swig-lispify "gsl_stats_short_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_short_median_from_sorted_data" #.(swig-lispify "gsl_stats_short_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_short_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_short_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_short_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_short_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_uchar_mean" #.(swig-lispify "gsl_stats_uchar_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_mean" 'function))

(cffi:defcfun ("gsl_stats_uchar_variance" #.(swig-lispify "gsl_stats_uchar_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_variance" 'function))

(cffi:defcfun ("gsl_stats_uchar_sd" #.(swig-lispify "gsl_stats_uchar_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_sd" 'function))

(cffi:defcfun ("gsl_stats_uchar_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_uchar_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_uchar_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_uchar_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_uchar_tss" #.(swig-lispify "gsl_stats_uchar_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_tss" 'function))

(cffi:defcfun ("gsl_stats_uchar_tss_m" #.(swig-lispify "gsl_stats_uchar_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_tss_m" 'function))

(cffi:defcfun ("gsl_stats_uchar_absdev" #.(swig-lispify "gsl_stats_uchar_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_absdev" 'function))

(cffi:defcfun ("gsl_stats_uchar_skew" #.(swig-lispify "gsl_stats_uchar_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_skew" 'function))

(cffi:defcfun ("gsl_stats_uchar_kurtosis" #.(swig-lispify "gsl_stats_uchar_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_uchar_lag1_autocorrelation" #.(swig-lispify "gsl_stats_uchar_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_uchar_covariance" #.(swig-lispify "gsl_stats_uchar_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_covariance" 'function))

(cffi:defcfun ("gsl_stats_uchar_correlation" #.(swig-lispify "gsl_stats_uchar_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_correlation" 'function))

(cffi:defcfun ("gsl_stats_uchar_spearman" #.(swig-lispify "gsl_stats_uchar_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_spearman" 'function))

(cffi:defcfun ("gsl_stats_uchar_variance_m" #.(swig-lispify "gsl_stats_uchar_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_variance_m" 'function))

(cffi:defcfun ("gsl_stats_uchar_sd_m" #.(swig-lispify "gsl_stats_uchar_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_sd_m" 'function))

(cffi:defcfun ("gsl_stats_uchar_absdev_m" #.(swig-lispify "gsl_stats_uchar_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_uchar_skew_m_sd" #.(swig-lispify "gsl_stats_uchar_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_uchar_kurtosis_m_sd" #.(swig-lispify "gsl_stats_uchar_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_uchar_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_uchar_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_uchar_covariance_m" #.(swig-lispify "gsl_stats_uchar_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_uchar_pvariance" #.(swig-lispify "gsl_stats_uchar_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_pvariance" 'function))

(cffi:defcfun ("gsl_stats_uchar_ttest" #.(swig-lispify "gsl_stats_uchar_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_ttest" 'function))

(cffi:defcfun ("gsl_stats_uchar_max" #.(swig-lispify "gsl_stats_uchar_max" 'function)) :unsigned-char
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_max" 'function))

(cffi:defcfun ("gsl_stats_uchar_min" #.(swig-lispify "gsl_stats_uchar_min" 'function)) :unsigned-char
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_min" 'function))

(cffi:defcfun ("gsl_stats_uchar_minmax" #.(swig-lispify "gsl_stats_uchar_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_minmax" 'function))

(cffi:defcfun ("gsl_stats_uchar_max_index" #.(swig-lispify "gsl_stats_uchar_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_max_index" 'function))

(cffi:defcfun ("gsl_stats_uchar_min_index" #.(swig-lispify "gsl_stats_uchar_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_min_index" 'function))

(cffi:defcfun ("gsl_stats_uchar_minmax_index" #.(swig-lispify "gsl_stats_uchar_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_uchar_median_from_sorted_data" #.(swig-lispify "gsl_stats_uchar_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uchar_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_uchar_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_uchar_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_uchar_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_uint_mean" #.(swig-lispify "gsl_stats_uint_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_mean" 'function))

(cffi:defcfun ("gsl_stats_uint_variance" #.(swig-lispify "gsl_stats_uint_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_variance" 'function))

(cffi:defcfun ("gsl_stats_uint_sd" #.(swig-lispify "gsl_stats_uint_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_sd" 'function))

(cffi:defcfun ("gsl_stats_uint_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_uint_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_uint_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_uint_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_uint_tss" #.(swig-lispify "gsl_stats_uint_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_tss" 'function))

(cffi:defcfun ("gsl_stats_uint_tss_m" #.(swig-lispify "gsl_stats_uint_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_tss_m" 'function))

(cffi:defcfun ("gsl_stats_uint_absdev" #.(swig-lispify "gsl_stats_uint_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_absdev" 'function))

(cffi:defcfun ("gsl_stats_uint_skew" #.(swig-lispify "gsl_stats_uint_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_skew" 'function))

(cffi:defcfun ("gsl_stats_uint_kurtosis" #.(swig-lispify "gsl_stats_uint_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_uint_lag1_autocorrelation" #.(swig-lispify "gsl_stats_uint_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_uint_covariance" #.(swig-lispify "gsl_stats_uint_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_covariance" 'function))

(cffi:defcfun ("gsl_stats_uint_correlation" #.(swig-lispify "gsl_stats_uint_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_correlation" 'function))

(cffi:defcfun ("gsl_stats_uint_spearman" #.(swig-lispify "gsl_stats_uint_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_spearman" 'function))

(cffi:defcfun ("gsl_stats_uint_variance_m" #.(swig-lispify "gsl_stats_uint_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_variance_m" 'function))

(cffi:defcfun ("gsl_stats_uint_sd_m" #.(swig-lispify "gsl_stats_uint_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_sd_m" 'function))

(cffi:defcfun ("gsl_stats_uint_absdev_m" #.(swig-lispify "gsl_stats_uint_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_uint_skew_m_sd" #.(swig-lispify "gsl_stats_uint_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_uint_kurtosis_m_sd" #.(swig-lispify "gsl_stats_uint_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_uint_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_uint_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_uint_covariance_m" #.(swig-lispify "gsl_stats_uint_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_uint_pvariance" #.(swig-lispify "gsl_stats_uint_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_pvariance" 'function))

(cffi:defcfun ("gsl_stats_uint_ttest" #.(swig-lispify "gsl_stats_uint_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_ttest" 'function))

(cffi:defcfun ("gsl_stats_uint_max" #.(swig-lispify "gsl_stats_uint_max" 'function)) :unsigned-int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_max" 'function))

(cffi:defcfun ("gsl_stats_uint_min" #.(swig-lispify "gsl_stats_uint_min" 'function)) :unsigned-int
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_min" 'function))

(cffi:defcfun ("gsl_stats_uint_minmax" #.(swig-lispify "gsl_stats_uint_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_minmax" 'function))

(cffi:defcfun ("gsl_stats_uint_max_index" #.(swig-lispify "gsl_stats_uint_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_max_index" 'function))

(cffi:defcfun ("gsl_stats_uint_min_index" #.(swig-lispify "gsl_stats_uint_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_min_index" 'function))

(cffi:defcfun ("gsl_stats_uint_minmax_index" #.(swig-lispify "gsl_stats_uint_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_uint_median_from_sorted_data" #.(swig-lispify "gsl_stats_uint_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_uint_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_uint_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_uint_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_uint_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_ulong_mean" #.(swig-lispify "gsl_stats_ulong_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_mean" 'function))

(cffi:defcfun ("gsl_stats_ulong_variance" #.(swig-lispify "gsl_stats_ulong_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_variance" 'function))

(cffi:defcfun ("gsl_stats_ulong_sd" #.(swig-lispify "gsl_stats_ulong_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_sd" 'function))

(cffi:defcfun ("gsl_stats_ulong_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_ulong_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_ulong_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_ulong_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_ulong_tss" #.(swig-lispify "gsl_stats_ulong_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_tss" 'function))

(cffi:defcfun ("gsl_stats_ulong_tss_m" #.(swig-lispify "gsl_stats_ulong_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_tss_m" 'function))

(cffi:defcfun ("gsl_stats_ulong_absdev" #.(swig-lispify "gsl_stats_ulong_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_absdev" 'function))

(cffi:defcfun ("gsl_stats_ulong_skew" #.(swig-lispify "gsl_stats_ulong_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_skew" 'function))

(cffi:defcfun ("gsl_stats_ulong_kurtosis" #.(swig-lispify "gsl_stats_ulong_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_ulong_lag1_autocorrelation" #.(swig-lispify "gsl_stats_ulong_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_ulong_covariance" #.(swig-lispify "gsl_stats_ulong_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_covariance" 'function))

(cffi:defcfun ("gsl_stats_ulong_correlation" #.(swig-lispify "gsl_stats_ulong_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_correlation" 'function))

(cffi:defcfun ("gsl_stats_ulong_spearman" #.(swig-lispify "gsl_stats_ulong_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_spearman" 'function))

(cffi:defcfun ("gsl_stats_ulong_variance_m" #.(swig-lispify "gsl_stats_ulong_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_variance_m" 'function))

(cffi:defcfun ("gsl_stats_ulong_sd_m" #.(swig-lispify "gsl_stats_ulong_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_sd_m" 'function))

(cffi:defcfun ("gsl_stats_ulong_absdev_m" #.(swig-lispify "gsl_stats_ulong_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_ulong_skew_m_sd" #.(swig-lispify "gsl_stats_ulong_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_ulong_kurtosis_m_sd" #.(swig-lispify "gsl_stats_ulong_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_ulong_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_ulong_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_ulong_covariance_m" #.(swig-lispify "gsl_stats_ulong_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_ulong_pvariance" #.(swig-lispify "gsl_stats_ulong_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_pvariance" 'function))

(cffi:defcfun ("gsl_stats_ulong_ttest" #.(swig-lispify "gsl_stats_ulong_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_ttest" 'function))

(cffi:defcfun ("gsl_stats_ulong_max" #.(swig-lispify "gsl_stats_ulong_max" 'function)) :unsigned-long
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_max" 'function))

(cffi:defcfun ("gsl_stats_ulong_min" #.(swig-lispify "gsl_stats_ulong_min" 'function)) :unsigned-long
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_min" 'function))

(cffi:defcfun ("gsl_stats_ulong_minmax" #.(swig-lispify "gsl_stats_ulong_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_minmax" 'function))

(cffi:defcfun ("gsl_stats_ulong_max_index" #.(swig-lispify "gsl_stats_ulong_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_max_index" 'function))

(cffi:defcfun ("gsl_stats_ulong_min_index" #.(swig-lispify "gsl_stats_ulong_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_min_index" 'function))

(cffi:defcfun ("gsl_stats_ulong_minmax_index" #.(swig-lispify "gsl_stats_ulong_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_ulong_median_from_sorted_data" #.(swig-lispify "gsl_stats_ulong_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ulong_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_ulong_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_ulong_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_ulong_quantile_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_ushort_mean" #.(swig-lispify "gsl_stats_ushort_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_mean" 'function))

(cffi:defcfun ("gsl_stats_ushort_variance" #.(swig-lispify "gsl_stats_ushort_variance" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_variance" 'function))

(cffi:defcfun ("gsl_stats_ushort_sd" #.(swig-lispify "gsl_stats_ushort_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_sd" 'function))

(cffi:defcfun ("gsl_stats_ushort_variance_with_fixed_mean" #.(swig-lispify "gsl_stats_ushort_variance_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_variance_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_ushort_sd_with_fixed_mean" #.(swig-lispify "gsl_stats_ushort_sd_with_fixed_mean" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_sd_with_fixed_mean" 'function))

(cffi:defcfun ("gsl_stats_ushort_tss" #.(swig-lispify "gsl_stats_ushort_tss" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_tss" 'function))

(cffi:defcfun ("gsl_stats_ushort_tss_m" #.(swig-lispify "gsl_stats_ushort_tss_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_tss_m" 'function))

(cffi:defcfun ("gsl_stats_ushort_absdev" #.(swig-lispify "gsl_stats_ushort_absdev" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_absdev" 'function))

(cffi:defcfun ("gsl_stats_ushort_skew" #.(swig-lispify "gsl_stats_ushort_skew" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_skew" 'function))

(cffi:defcfun ("gsl_stats_ushort_kurtosis" #.(swig-lispify "gsl_stats_ushort_kurtosis" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_kurtosis" 'function))

(cffi:defcfun ("gsl_stats_ushort_lag1_autocorrelation" #.(swig-lispify "gsl_stats_ushort_lag1_autocorrelation" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_lag1_autocorrelation" 'function))

(cffi:defcfun ("gsl_stats_ushort_covariance" #.(swig-lispify "gsl_stats_ushort_covariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_covariance" 'function))

(cffi:defcfun ("gsl_stats_ushort_correlation" #.(swig-lispify "gsl_stats_ushort_correlation" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_correlation" 'function))

(cffi:defcfun ("gsl_stats_ushort_spearman" #.(swig-lispify "gsl_stats_ushort_spearman" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_spearman" 'function))

(cffi:defcfun ("gsl_stats_ushort_variance_m" #.(swig-lispify "gsl_stats_ushort_variance_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_variance_m" 'function))

(cffi:defcfun ("gsl_stats_ushort_sd_m" #.(swig-lispify "gsl_stats_ushort_sd_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_sd_m" 'function))

(cffi:defcfun ("gsl_stats_ushort_absdev_m" #.(swig-lispify "gsl_stats_ushort_absdev_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_absdev_m" 'function))

(cffi:defcfun ("gsl_stats_ushort_skew_m_sd" #.(swig-lispify "gsl_stats_ushort_skew_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_skew_m_sd" 'function))

(cffi:defcfun ("gsl_stats_ushort_kurtosis_m_sd" #.(swig-lispify "gsl_stats_ushort_kurtosis_m_sd" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double)
  (sd :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_kurtosis_m_sd" 'function))

(cffi:defcfun ("gsl_stats_ushort_lag1_autocorrelation_m" #.(swig-lispify "gsl_stats_ushort_lag1_autocorrelation_m" 'function)) :double
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (mean :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_lag1_autocorrelation_m" 'function))

(cffi:defcfun ("gsl_stats_ushort_covariance_m" #.(swig-lispify "gsl_stats_ushort_covariance_m" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n :pointer)
  (mean1 :double)
  (mean2 :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_covariance_m" 'function))

(cffi:defcfun ("gsl_stats_ushort_pvariance" #.(swig-lispify "gsl_stats_ushort_pvariance" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_pvariance" 'function))

(cffi:defcfun ("gsl_stats_ushort_ttest" #.(swig-lispify "gsl_stats_ushort_ttest" 'function)) :double
  (data1 :pointer)
  (stride1 :pointer)
  (n1 :pointer)
  (data2 :pointer)
  (stride2 :pointer)
  (n2 :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_ttest" 'function))

(cffi:defcfun ("gsl_stats_ushort_max" #.(swig-lispify "gsl_stats_ushort_max" 'function)) :unsigned-short
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_max" 'function))

(cffi:defcfun ("gsl_stats_ushort_min" #.(swig-lispify "gsl_stats_ushort_min" 'function)) :unsigned-short
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_min" 'function))

(cffi:defcfun ("gsl_stats_ushort_minmax" #.(swig-lispify "gsl_stats_ushort_minmax" 'function)) :void
  (min :pointer)
  (max :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_minmax" 'function))

(cffi:defcfun ("gsl_stats_ushort_max_index" #.(swig-lispify "gsl_stats_ushort_max_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_max_index" 'function))

(cffi:defcfun ("gsl_stats_ushort_min_index" #.(swig-lispify "gsl_stats_ushort_min_index" 'function)) :pointer
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_min_index" 'function))

(cffi:defcfun ("gsl_stats_ushort_minmax_index" #.(swig-lispify "gsl_stats_ushort_minmax_index" 'function)) :void
  (min_index :pointer)
  (max_index :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_minmax_index" 'function))

(cffi:defcfun ("gsl_stats_ushort_median_from_sorted_data" #.(swig-lispify "gsl_stats_ushort_median_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_stats_ushort_median_from_sorted_data" 'function))

(cffi:defcfun ("gsl_stats_ushort_quantile_from_sorted_data" #.(swig-lispify "gsl_stats_ushort_quantile_from_sorted_data" 'function)) :double
  (sorted_data :pointer)
  (stride :pointer)
  (n :pointer)
  (f :double))

(cl:export '#.(swig-lispify "gsl_stats_ushort_quantile_from_sorted_data" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_sum_levin_u_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "i" 'slotname) :pointer)
	(#.(swig-lispify "terms_used" 'slotname) :pointer)
	(#.(swig-lispify "sum_plain" 'slotname) :double)
	(#.(swig-lispify "q_num" 'slotname) :pointer)
	(#.(swig-lispify "q_den" 'slotname) :pointer)
	(#.(swig-lispify "dq_num" 'slotname) :pointer)
	(#.(swig-lispify "dq_den" 'slotname) :pointer)
	(#.(swig-lispify "dsum" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_u_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "i" 'slotname))

(cl:export '#.(swig-lispify "terms_used" 'slotname))

(cl:export '#.(swig-lispify "sum_plain" 'slotname))

(cl:export '#.(swig-lispify "q_num" 'slotname))

(cl:export '#.(swig-lispify "q_den" 'slotname))

(cl:export '#.(swig-lispify "dq_num" 'slotname))

(cl:export '#.(swig-lispify "dq_den" 'slotname))

(cl:export '#.(swig-lispify "dsum" 'slotname))

(cffi:defcfun ("gsl_sum_levin_u_alloc" #.(swig-lispify "gsl_sum_levin_u_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_u_alloc" 'function))

(cffi:defcfun ("gsl_sum_levin_u_free" #.(swig-lispify "gsl_sum_levin_u_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_u_free" 'function))

(cffi:defcfun ("gsl_sum_levin_u_accel" #.(swig-lispify "gsl_sum_levin_u_accel" 'function)) :int
  (array :pointer)
  (n :pointer)
  (w :pointer)
  (sum_accel :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_u_accel" 'function))

(cffi:defcfun ("gsl_sum_levin_u_minmax" #.(swig-lispify "gsl_sum_levin_u_minmax" 'function)) :int
  (array :pointer)
  (n :pointer)
  (min_terms :pointer)
  (max_terms :pointer)
  (w :pointer)
  (sum_accel :pointer)
  (abserr :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_u_minmax" 'function))

(cffi:defcfun ("gsl_sum_levin_u_step" #.(swig-lispify "gsl_sum_levin_u_step" 'function)) :int
  (term :double)
  (n :pointer)
  (nmax :pointer)
  (w :pointer)
  (sum_accel :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_u_step" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_sum_levin_utrunc_workspace" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "i" 'slotname) :pointer)
	(#.(swig-lispify "terms_used" 'slotname) :pointer)
	(#.(swig-lispify "sum_plain" 'slotname) :double)
	(#.(swig-lispify "q_num" 'slotname) :pointer)
	(#.(swig-lispify "q_den" 'slotname) :pointer)
	(#.(swig-lispify "dsum" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_utrunc_workspace" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "i" 'slotname))

(cl:export '#.(swig-lispify "terms_used" 'slotname))

(cl:export '#.(swig-lispify "sum_plain" 'slotname))

(cl:export '#.(swig-lispify "q_num" 'slotname))

(cl:export '#.(swig-lispify "q_den" 'slotname))

(cl:export '#.(swig-lispify "dsum" 'slotname))

(cffi:defcfun ("gsl_sum_levin_utrunc_alloc" #.(swig-lispify "gsl_sum_levin_utrunc_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_utrunc_alloc" 'function))

(cffi:defcfun ("gsl_sum_levin_utrunc_free" #.(swig-lispify "gsl_sum_levin_utrunc_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_utrunc_free" 'function))

(cffi:defcfun ("gsl_sum_levin_utrunc_accel" #.(swig-lispify "gsl_sum_levin_utrunc_accel" 'function)) :int
  (array :pointer)
  (n :pointer)
  (w :pointer)
  (sum_accel :pointer)
  (abserr_trunc :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_utrunc_accel" 'function))

(cffi:defcfun ("gsl_sum_levin_utrunc_minmax" #.(swig-lispify "gsl_sum_levin_utrunc_minmax" 'function)) :int
  (array :pointer)
  (n :pointer)
  (min_terms :pointer)
  (max_terms :pointer)
  (w :pointer)
  (sum_accel :pointer)
  (abserr_trunc :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_utrunc_minmax" 'function))

(cffi:defcfun ("gsl_sum_levin_utrunc_step" #.(swig-lispify "gsl_sum_levin_utrunc_step" 'function)) :int
  (term :double)
  (n :pointer)
  (w :pointer)
  (sum_accel :pointer))

(cl:export '#.(swig-lispify "gsl_sum_levin_utrunc_step" 'function))

(cffi:defcfun ("gsl_log1p" #.(swig-lispify "gsl_log1p" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_log1p" 'function))

(cffi:defcfun ("gsl_expm1" #.(swig-lispify "gsl_expm1" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_expm1" 'function))

(cffi:defcfun ("gsl_hypot" #.(swig-lispify "gsl_hypot" 'function)) :double
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_hypot" 'function))

(cffi:defcfun ("gsl_hypot3" #.(swig-lispify "gsl_hypot3" 'function)) :double
  (x :double)
  (y :double)
  (z :double))

(cl:export '#.(swig-lispify "gsl_hypot3" 'function))

(cffi:defcfun ("gsl_acosh" #.(swig-lispify "gsl_acosh" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_acosh" 'function))

(cffi:defcfun ("gsl_asinh" #.(swig-lispify "gsl_asinh" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_asinh" 'function))

(cffi:defcfun ("gsl_atanh" #.(swig-lispify "gsl_atanh" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_atanh" 'function))

(cffi:defcfun ("gsl_isnan" #.(swig-lispify "gsl_isnan" 'function)) :int
  (x :double))

(cl:export '#.(swig-lispify "gsl_isnan" 'function))

(cffi:defcfun ("gsl_isinf" #.(swig-lispify "gsl_isinf" 'function)) :int
  (x :double))

(cl:export '#.(swig-lispify "gsl_isinf" 'function))

(cffi:defcfun ("gsl_finite" #.(swig-lispify "gsl_finite" 'function)) :int
  (x :double))

(cl:export '#.(swig-lispify "gsl_finite" 'function))

(cffi:defcfun ("gsl_nan" #.(swig-lispify "gsl_nan" 'function)) :double)

(cl:export '#.(swig-lispify "gsl_nan" 'function))

(cffi:defcfun ("gsl_posinf" #.(swig-lispify "gsl_posinf" 'function)) :double)

(cl:export '#.(swig-lispify "gsl_posinf" 'function))

(cffi:defcfun ("gsl_neginf" #.(swig-lispify "gsl_neginf" 'function)) :double)

(cl:export '#.(swig-lispify "gsl_neginf" 'function))

(cffi:defcfun ("gsl_fdiv" #.(swig-lispify "gsl_fdiv" 'function)) :double
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gsl_fdiv" 'function))

(cffi:defcfun ("gsl_coerce_double" #.(swig-lispify "gsl_coerce_double" 'function)) :double
  (x :double))

(cl:export '#.(swig-lispify "gsl_coerce_double" 'function))

(cffi:defcfun ("gsl_coerce_float" #.(swig-lispify "gsl_coerce_float" 'function)) :float
  (x :float))

(cl:export '#.(swig-lispify "gsl_coerce_float" 'function))

(cffi:defcfun ("gsl_coerce_long_double" #.(swig-lispify "gsl_coerce_long_double" 'function)) :pointer
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_coerce_long_double" 'function))

(cffi:defcfun ("gsl_ldexp" #.(swig-lispify "gsl_ldexp" 'function)) :double
  (x :double)
  (e :int))

(cl:export '#.(swig-lispify "gsl_ldexp" 'function))

(cffi:defcfun ("gsl_frexp" #.(swig-lispify "gsl_frexp" 'function)) :double
  (x :double)
  (e :pointer))

(cl:export '#.(swig-lispify "gsl_frexp" 'function))

(cffi:defcfun ("gsl_fcmp" #.(swig-lispify "gsl_fcmp" 'function)) :int
  (x1 :double)
  (x2 :double)
  (epsilon :double))

(cl:export '#.(swig-lispify "gsl_fcmp" 'function))

(cffi:defcfun ("gsl_test" #.(swig-lispify "gsl_test" 'function)) :void
  (status :int)
  (test_description :string)
  &rest)

(cl:export '#.(swig-lispify "gsl_test" 'function))

(cffi:defcfun ("gsl_test_rel" #.(swig-lispify "gsl_test_rel" 'function)) :void
  (result :double)
  (expected :double)
  (relative_error :double)
  (test_description :string)
  &rest)

(cl:export '#.(swig-lispify "gsl_test_rel" 'function))

(cffi:defcfun ("gsl_test_abs" #.(swig-lispify "gsl_test_abs" 'function)) :void
  (result :double)
  (expected :double)
  (absolute_error :double)
  (test_description :string)
  &rest)

(cl:export '#.(swig-lispify "gsl_test_abs" 'function))

(cffi:defcfun ("gsl_test_factor" #.(swig-lispify "gsl_test_factor" 'function)) :void
  (result :double)
  (expected :double)
  (factor :double)
  (test_description :string)
  &rest)

(cl:export '#.(swig-lispify "gsl_test_factor" 'function))

(cffi:defcfun ("gsl_test_int" #.(swig-lispify "gsl_test_int" 'function)) :void
  (result :int)
  (expected :int)
  (test_description :string)
  &rest)

(cl:export '#.(swig-lispify "gsl_test_int" 'function))

(cffi:defcfun ("gsl_test_str" #.(swig-lispify "gsl_test_str" 'function)) :void
  (result :string)
  (expected :string)
  (test_description :string)
  &rest)

(cl:export '#.(swig-lispify "gsl_test_str" 'function))

(cffi:defcfun ("gsl_test_verbose" #.(swig-lispify "gsl_test_verbose" 'function)) :void
  (verbose :int))

(cl:export '#.(swig-lispify "gsl_test_verbose" 'function))

(cffi:defcfun ("gsl_test_summary" #.(swig-lispify "gsl_test_summary" 'function)) :int)

(cl:export '#.(swig-lispify "gsl_test_summary" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_char" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :string)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_char" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_char_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_char" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_char_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_char_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_char" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_char_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_char_alloc" #.(swig-lispify "gsl_vector_char_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_alloc" 'function))

(cffi:defcfun ("gsl_vector_char_calloc" #.(swig-lispify "gsl_vector_char_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_calloc" 'function))

(cffi:defcfun ("gsl_vector_char_alloc_from_block" #.(swig-lispify "gsl_vector_char_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_char_alloc_from_vector" #.(swig-lispify "gsl_vector_char_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_char_free" #.(swig-lispify "gsl_vector_char_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_free" 'function))

(cffi:defcfun ("gsl_vector_char_view_array" #.(swig-lispify "gsl_vector_char_view_array" 'function)) #.(swig-lispify "_gsl_vector_char_view" 'classname)
  (v :string)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_view_array" 'function))

(cffi:defcfun ("gsl_vector_char_view_array_with_stride" #.(swig-lispify "gsl_vector_char_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_char_view" 'classname)
  (base :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_char_const_view_array" #.(swig-lispify "gsl_vector_char_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_char_const_view" 'classname)
  (v :string)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_char_const_view_array_with_stride" #.(swig-lispify "gsl_vector_char_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_char_const_view" 'classname)
  (base :string)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_char_subvector" #.(swig-lispify "gsl_vector_char_subvector" 'function)) #.(swig-lispify "_gsl_vector_char_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_subvector" 'function))

(cffi:defcfun ("gsl_vector_char_subvector_with_stride" #.(swig-lispify "gsl_vector_char_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_char_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_char_const_subvector" #.(swig-lispify "gsl_vector_char_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_char_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_char_const_subvector_with_stride" #.(swig-lispify "gsl_vector_char_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_char_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_char_set_zero" #.(swig-lispify "gsl_vector_char_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_set_zero" 'function))

(cffi:defcfun ("gsl_vector_char_set_all" #.(swig-lispify "gsl_vector_char_set_all" 'function)) :void
  (v :pointer)
  (x :char))

(cl:export '#.(swig-lispify "gsl_vector_char_set_all" 'function))

(cffi:defcfun ("gsl_vector_char_set_basis" #.(swig-lispify "gsl_vector_char_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_set_basis" 'function))

(cffi:defcfun ("gsl_vector_char_fread" #.(swig-lispify "gsl_vector_char_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_fread" 'function))

(cffi:defcfun ("gsl_vector_char_fwrite" #.(swig-lispify "gsl_vector_char_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_fwrite" 'function))

(cffi:defcfun ("gsl_vector_char_fscanf" #.(swig-lispify "gsl_vector_char_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_fscanf" 'function))

(cffi:defcfun ("gsl_vector_char_fprintf" #.(swig-lispify "gsl_vector_char_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_char_fprintf" 'function))

(cffi:defcfun ("gsl_vector_char_memcpy" #.(swig-lispify "gsl_vector_char_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_memcpy" 'function))

(cffi:defcfun ("gsl_vector_char_reverse" #.(swig-lispify "gsl_vector_char_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_reverse" 'function))

(cffi:defcfun ("gsl_vector_char_swap" #.(swig-lispify "gsl_vector_char_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_swap" 'function))

(cffi:defcfun ("gsl_vector_char_swap_elements" #.(swig-lispify "gsl_vector_char_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_char_max" #.(swig-lispify "gsl_vector_char_max" 'function)) :char
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_max" 'function))

(cffi:defcfun ("gsl_vector_char_min" #.(swig-lispify "gsl_vector_char_min" 'function)) :char
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_min" 'function))

(cffi:defcfun ("gsl_vector_char_minmax" #.(swig-lispify "gsl_vector_char_minmax" 'function)) :void
  (v :pointer)
  (min_out :string)
  (max_out :string))

(cl:export '#.(swig-lispify "gsl_vector_char_minmax" 'function))

(cffi:defcfun ("gsl_vector_char_max_index" #.(swig-lispify "gsl_vector_char_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_max_index" 'function))

(cffi:defcfun ("gsl_vector_char_min_index" #.(swig-lispify "gsl_vector_char_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_min_index" 'function))

(cffi:defcfun ("gsl_vector_char_minmax_index" #.(swig-lispify "gsl_vector_char_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_char_add" #.(swig-lispify "gsl_vector_char_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_add" 'function))

(cffi:defcfun ("gsl_vector_char_sub" #.(swig-lispify "gsl_vector_char_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_sub" 'function))

(cffi:defcfun ("gsl_vector_char_mul" #.(swig-lispify "gsl_vector_char_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_mul" 'function))

(cffi:defcfun ("gsl_vector_char_div" #.(swig-lispify "gsl_vector_char_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_div" 'function))

(cffi:defcfun ("gsl_vector_char_scale" #.(swig-lispify "gsl_vector_char_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_char_scale" 'function))

(cffi:defcfun ("gsl_vector_char_add_constant" #.(swig-lispify "gsl_vector_char_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_char_add_constant" 'function))

(cffi:defcfun ("gsl_vector_char_equal" #.(swig-lispify "gsl_vector_char_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_equal" 'function))

(cffi:defcfun ("gsl_vector_char_isnull" #.(swig-lispify "gsl_vector_char_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_isnull" 'function))

(cffi:defcfun ("gsl_vector_char_ispos" #.(swig-lispify "gsl_vector_char_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_ispos" 'function))

(cffi:defcfun ("gsl_vector_char_isneg" #.(swig-lispify "gsl_vector_char_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_isneg" 'function))

(cffi:defcfun ("gsl_vector_char_isnonneg" #.(swig-lispify "gsl_vector_char_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_char_get" #.(swig-lispify "gsl_vector_char_get" 'function)) :char
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_get" 'function))

(cffi:defcfun ("gsl_vector_char_set" #.(swig-lispify "gsl_vector_char_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :char))

(cl:export '#.(swig-lispify "gsl_vector_char_set" 'function))

(cffi:defcfun ("gsl_vector_char_ptr" #.(swig-lispify "gsl_vector_char_ptr" 'function)) :string
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_ptr" 'function))

(cffi:defcfun ("gsl_vector_char_const_ptr" #.(swig-lispify "gsl_vector_char_const_ptr" 'function)) :string
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_char_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_complex" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_complex" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_complex_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_complex" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_complex_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_complex_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_complex" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_complex_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_complex_alloc" #.(swig-lispify "gsl_vector_complex_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_alloc" 'function))

(cffi:defcfun ("gsl_vector_complex_calloc" #.(swig-lispify "gsl_vector_complex_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_calloc" 'function))

(cffi:defcfun ("gsl_vector_complex_alloc_from_block" #.(swig-lispify "gsl_vector_complex_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_complex_alloc_from_vector" #.(swig-lispify "gsl_vector_complex_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_complex_free" #.(swig-lispify "gsl_vector_complex_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_free" 'function))

(cffi:defcfun ("gsl_vector_complex_view_array" #.(swig-lispify "gsl_vector_complex_view_array" 'function)) #.(swig-lispify "_gsl_vector_complex_view" 'classname)
  (base :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_view_array" 'function))

(cffi:defcfun ("gsl_vector_complex_view_array_with_stride" #.(swig-lispify "gsl_vector_complex_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_const_view_array" #.(swig-lispify "gsl_vector_complex_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_complex_const_view" 'classname)
  (base :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_complex_const_view_array_with_stride" #.(swig-lispify "gsl_vector_complex_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_subvector" #.(swig-lispify "gsl_vector_complex_subvector" 'function)) #.(swig-lispify "_gsl_vector_complex_view" 'classname)
  (base :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_subvector" 'function))

(cffi:defcfun ("gsl_vector_complex_subvector_with_stride" #.(swig-lispify "gsl_vector_complex_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_const_subvector" #.(swig-lispify "gsl_vector_complex_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_complex_const_view" 'classname)
  (base :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_complex_const_subvector_with_stride" #.(swig-lispify "gsl_vector_complex_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_real" #.(swig-lispify "gsl_vector_complex_real" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_real" 'function))

(cffi:defcfun ("gsl_vector_complex_imag" #.(swig-lispify "gsl_vector_complex_imag" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_imag" 'function))

(cffi:defcfun ("gsl_vector_complex_const_real" #.(swig-lispify "gsl_vector_complex_const_real" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_real" 'function))

(cffi:defcfun ("gsl_vector_complex_const_imag" #.(swig-lispify "gsl_vector_complex_const_imag" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_imag" 'function))

(cffi:defcfun ("gsl_vector_complex_set_zero" #.(swig-lispify "gsl_vector_complex_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_set_zero" 'function))

(cffi:defcfun ("gsl_vector_complex_set_all" #.(swig-lispify "gsl_vector_complex_set_all" 'function)) :void
  (v :pointer)
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_set_all" 'function))

(cffi:defcfun ("gsl_vector_complex_set_basis" #.(swig-lispify "gsl_vector_complex_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_set_basis" 'function))

(cffi:defcfun ("gsl_vector_complex_fread" #.(swig-lispify "gsl_vector_complex_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_fread" 'function))

(cffi:defcfun ("gsl_vector_complex_fwrite" #.(swig-lispify "gsl_vector_complex_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_fwrite" 'function))

(cffi:defcfun ("gsl_vector_complex_fscanf" #.(swig-lispify "gsl_vector_complex_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_fscanf" 'function))

(cffi:defcfun ("gsl_vector_complex_fprintf" #.(swig-lispify "gsl_vector_complex_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_complex_fprintf" 'function))

(cffi:defcfun ("gsl_vector_complex_memcpy" #.(swig-lispify "gsl_vector_complex_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_memcpy" 'function))

(cffi:defcfun ("gsl_vector_complex_reverse" #.(swig-lispify "gsl_vector_complex_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_reverse" 'function))

(cffi:defcfun ("gsl_vector_complex_swap" #.(swig-lispify "gsl_vector_complex_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_swap" 'function))

(cffi:defcfun ("gsl_vector_complex_swap_elements" #.(swig-lispify "gsl_vector_complex_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_complex_equal" #.(swig-lispify "gsl_vector_complex_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_equal" 'function))

(cffi:defcfun ("gsl_vector_complex_isnull" #.(swig-lispify "gsl_vector_complex_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_isnull" 'function))

(cffi:defcfun ("gsl_vector_complex_ispos" #.(swig-lispify "gsl_vector_complex_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_ispos" 'function))

(cffi:defcfun ("gsl_vector_complex_isneg" #.(swig-lispify "gsl_vector_complex_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_isneg" 'function))

(cffi:defcfun ("gsl_vector_complex_isnonneg" #.(swig-lispify "gsl_vector_complex_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_complex_add" #.(swig-lispify "gsl_vector_complex_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_add" 'function))

(cffi:defcfun ("gsl_vector_complex_sub" #.(swig-lispify "gsl_vector_complex_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_sub" 'function))

(cffi:defcfun ("gsl_vector_complex_mul" #.(swig-lispify "gsl_vector_complex_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_mul" 'function))

(cffi:defcfun ("gsl_vector_complex_div" #.(swig-lispify "gsl_vector_complex_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_div" 'function))

(cffi:defcfun ("gsl_vector_complex_scale" #.(swig-lispify "gsl_vector_complex_scale" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_scale" 'function))

(cffi:defcfun ("gsl_vector_complex_add_constant" #.(swig-lispify "gsl_vector_complex_add_constant" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_add_constant" 'function))

(cffi:defcfun ("gsl_vector_complex_get" #.(swig-lispify "gsl_vector_complex_get" 'function)) #.(swig-lispify "gsl_complex" 'classname)
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_get" 'function))

(cffi:defcfun ("gsl_vector_complex_set" #.(swig-lispify "gsl_vector_complex_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (z #.(swig-lispify "gsl_complex" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_set" 'function))

(cffi:defcfun ("gsl_vector_complex_ptr" #.(swig-lispify "gsl_vector_complex_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_ptr" 'function))

(cffi:defcfun ("gsl_vector_complex_const_ptr" #.(swig-lispify "gsl_vector_complex_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_complex_float" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_complex_float" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_complex_float_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_complex_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_complex_float_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_complex_float_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_complex_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_complex_float_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_complex_float_alloc" #.(swig-lispify "gsl_vector_complex_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_alloc" 'function))

(cffi:defcfun ("gsl_vector_complex_float_calloc" #.(swig-lispify "gsl_vector_complex_float_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_calloc" 'function))

(cffi:defcfun ("gsl_vector_complex_float_alloc_from_block" #.(swig-lispify "gsl_vector_complex_float_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_complex_float_alloc_from_vector" #.(swig-lispify "gsl_vector_complex_float_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_complex_float_free" #.(swig-lispify "gsl_vector_complex_float_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_free" 'function))

(cffi:defcfun ("gsl_vector_complex_float_view_array" #.(swig-lispify "gsl_vector_complex_float_view_array" 'function)) #.(swig-lispify "_gsl_vector_complex_float_view" 'classname)
  (base :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_view_array" 'function))

(cffi:defcfun ("gsl_vector_complex_float_view_array_with_stride" #.(swig-lispify "gsl_vector_complex_float_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_float_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_view_array" #.(swig-lispify "gsl_vector_complex_float_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_complex_float_const_view" 'classname)
  (base :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_view_array_with_stride" #.(swig-lispify "gsl_vector_complex_float_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_float_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_float_subvector" #.(swig-lispify "gsl_vector_complex_float_subvector" 'function)) #.(swig-lispify "_gsl_vector_complex_float_view" 'classname)
  (base :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_subvector" 'function))

(cffi:defcfun ("gsl_vector_complex_float_subvector_with_stride" #.(swig-lispify "gsl_vector_complex_float_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_float_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_subvector" #.(swig-lispify "gsl_vector_complex_float_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_complex_float_const_view" 'classname)
  (base :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_subvector_with_stride" #.(swig-lispify "gsl_vector_complex_float_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_float_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_float_real" #.(swig-lispify "gsl_vector_complex_float_real" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_real" 'function))

(cffi:defcfun ("gsl_vector_complex_float_imag" #.(swig-lispify "gsl_vector_complex_float_imag" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_imag" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_real" #.(swig-lispify "gsl_vector_complex_float_const_real" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_real" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_imag" #.(swig-lispify "gsl_vector_complex_float_const_imag" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_imag" 'function))

(cffi:defcfun ("gsl_vector_complex_float_set_zero" #.(swig-lispify "gsl_vector_complex_float_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_set_zero" 'function))

(cffi:defcfun ("gsl_vector_complex_float_set_all" #.(swig-lispify "gsl_vector_complex_float_set_all" 'function)) :void
  (v :pointer)
  (z #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_set_all" 'function))

(cffi:defcfun ("gsl_vector_complex_float_set_basis" #.(swig-lispify "gsl_vector_complex_float_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_set_basis" 'function))

(cffi:defcfun ("gsl_vector_complex_float_fread" #.(swig-lispify "gsl_vector_complex_float_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_fread" 'function))

(cffi:defcfun ("gsl_vector_complex_float_fwrite" #.(swig-lispify "gsl_vector_complex_float_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_fwrite" 'function))

(cffi:defcfun ("gsl_vector_complex_float_fscanf" #.(swig-lispify "gsl_vector_complex_float_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_fscanf" 'function))

(cffi:defcfun ("gsl_vector_complex_float_fprintf" #.(swig-lispify "gsl_vector_complex_float_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_fprintf" 'function))

(cffi:defcfun ("gsl_vector_complex_float_memcpy" #.(swig-lispify "gsl_vector_complex_float_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_memcpy" 'function))

(cffi:defcfun ("gsl_vector_complex_float_reverse" #.(swig-lispify "gsl_vector_complex_float_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_reverse" 'function))

(cffi:defcfun ("gsl_vector_complex_float_swap" #.(swig-lispify "gsl_vector_complex_float_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_swap" 'function))

(cffi:defcfun ("gsl_vector_complex_float_swap_elements" #.(swig-lispify "gsl_vector_complex_float_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_complex_float_equal" #.(swig-lispify "gsl_vector_complex_float_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_equal" 'function))

(cffi:defcfun ("gsl_vector_complex_float_isnull" #.(swig-lispify "gsl_vector_complex_float_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_isnull" 'function))

(cffi:defcfun ("gsl_vector_complex_float_ispos" #.(swig-lispify "gsl_vector_complex_float_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_ispos" 'function))

(cffi:defcfun ("gsl_vector_complex_float_isneg" #.(swig-lispify "gsl_vector_complex_float_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_isneg" 'function))

(cffi:defcfun ("gsl_vector_complex_float_isnonneg" #.(swig-lispify "gsl_vector_complex_float_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_complex_float_add" #.(swig-lispify "gsl_vector_complex_float_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_add" 'function))

(cffi:defcfun ("gsl_vector_complex_float_sub" #.(swig-lispify "gsl_vector_complex_float_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_sub" 'function))

(cffi:defcfun ("gsl_vector_complex_float_mul" #.(swig-lispify "gsl_vector_complex_float_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_mul" 'function))

(cffi:defcfun ("gsl_vector_complex_float_div" #.(swig-lispify "gsl_vector_complex_float_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_div" 'function))

(cffi:defcfun ("gsl_vector_complex_float_scale" #.(swig-lispify "gsl_vector_complex_float_scale" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_scale" 'function))

(cffi:defcfun ("gsl_vector_complex_float_add_constant" #.(swig-lispify "gsl_vector_complex_float_add_constant" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_add_constant" 'function))

(cffi:defcfun ("gsl_vector_complex_float_get" #.(swig-lispify "gsl_vector_complex_float_get" 'function)) #.(swig-lispify "gsl_complex_float" 'classname)
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_get" 'function))

(cffi:defcfun ("gsl_vector_complex_float_set" #.(swig-lispify "gsl_vector_complex_float_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (z #.(swig-lispify "gsl_complex_float" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_set" 'function))

(cffi:defcfun ("gsl_vector_complex_float_ptr" #.(swig-lispify "gsl_vector_complex_float_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_ptr" 'function))

(cffi:defcfun ("gsl_vector_complex_float_const_ptr" #.(swig-lispify "gsl_vector_complex_float_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_float_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_complex_long_double" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_complex_long_double_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_complex_long_double_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_complex_long_double_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_complex_long_double_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_complex_long_double_alloc" #.(swig-lispify "gsl_vector_complex_long_double_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_alloc" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_calloc" #.(swig-lispify "gsl_vector_complex_long_double_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_calloc" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_alloc_from_block" #.(swig-lispify "gsl_vector_complex_long_double_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_alloc_from_vector" #.(swig-lispify "gsl_vector_complex_long_double_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_free" #.(swig-lispify "gsl_vector_complex_long_double_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_free" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_view_array" #.(swig-lispify "gsl_vector_complex_long_double_view_array" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_view" 'classname)
  (base :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_view_array" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_view_array_with_stride" #.(swig-lispify "gsl_vector_complex_long_double_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_view_array" #.(swig-lispify "gsl_vector_complex_long_double_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_const_view" 'classname)
  (base :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_view_array_with_stride" #.(swig-lispify "gsl_vector_complex_long_double_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_subvector" #.(swig-lispify "gsl_vector_complex_long_double_subvector" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_view" 'classname)
  (base :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_subvector" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_subvector_with_stride" #.(swig-lispify "gsl_vector_complex_long_double_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_subvector" #.(swig-lispify "gsl_vector_complex_long_double_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_const_view" 'classname)
  (base :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_subvector_with_stride" #.(swig-lispify "gsl_vector_complex_long_double_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_complex_long_double_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_real" #.(swig-lispify "gsl_vector_complex_long_double_real" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_real" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_imag" #.(swig-lispify "gsl_vector_complex_long_double_imag" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_imag" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_real" #.(swig-lispify "gsl_vector_complex_long_double_const_real" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_real" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_imag" #.(swig-lispify "gsl_vector_complex_long_double_const_imag" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_imag" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_set_zero" #.(swig-lispify "gsl_vector_complex_long_double_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_set_zero" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_set_all" #.(swig-lispify "gsl_vector_complex_long_double_set_all" 'function)) :void
  (v :pointer)
  (z #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_set_all" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_set_basis" #.(swig-lispify "gsl_vector_complex_long_double_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_set_basis" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_fread" #.(swig-lispify "gsl_vector_complex_long_double_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_fread" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_fwrite" #.(swig-lispify "gsl_vector_complex_long_double_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_fwrite" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_fscanf" #.(swig-lispify "gsl_vector_complex_long_double_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_fscanf" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_fprintf" #.(swig-lispify "gsl_vector_complex_long_double_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_fprintf" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_memcpy" #.(swig-lispify "gsl_vector_complex_long_double_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_memcpy" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_reverse" #.(swig-lispify "gsl_vector_complex_long_double_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_reverse" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_swap" #.(swig-lispify "gsl_vector_complex_long_double_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_swap" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_swap_elements" #.(swig-lispify "gsl_vector_complex_long_double_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_equal" #.(swig-lispify "gsl_vector_complex_long_double_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_equal" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_isnull" #.(swig-lispify "gsl_vector_complex_long_double_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_isnull" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_ispos" #.(swig-lispify "gsl_vector_complex_long_double_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_ispos" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_isneg" #.(swig-lispify "gsl_vector_complex_long_double_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_isneg" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_isnonneg" #.(swig-lispify "gsl_vector_complex_long_double_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_add" #.(swig-lispify "gsl_vector_complex_long_double_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_add" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_sub" #.(swig-lispify "gsl_vector_complex_long_double_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_sub" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_mul" #.(swig-lispify "gsl_vector_complex_long_double_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_mul" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_div" #.(swig-lispify "gsl_vector_complex_long_double_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_div" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_scale" #.(swig-lispify "gsl_vector_complex_long_double_scale" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_scale" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_add_constant" #.(swig-lispify "gsl_vector_complex_long_double_add_constant" 'function)) :int
  (a :pointer)
  (x #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_add_constant" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_get" #.(swig-lispify "gsl_vector_complex_long_double_get" 'function)) #.(swig-lispify "gsl_complex_long_double" 'classname)
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_get" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_set" #.(swig-lispify "gsl_vector_complex_long_double_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (z #.(swig-lispify "gsl_complex_long_double" 'classname)))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_set" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_ptr" #.(swig-lispify "gsl_vector_complex_long_double_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_ptr" 'function))

(cffi:defcfun ("gsl_vector_complex_long_double_const_ptr" #.(swig-lispify "gsl_vector_complex_long_double_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_complex_long_double_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_alloc" #.(swig-lispify "gsl_vector_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_alloc" 'function))

(cffi:defcfun ("gsl_vector_calloc" #.(swig-lispify "gsl_vector_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_calloc" 'function))

(cffi:defcfun ("gsl_vector_alloc_from_block" #.(swig-lispify "gsl_vector_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_alloc_from_vector" #.(swig-lispify "gsl_vector_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_free" #.(swig-lispify "gsl_vector_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_free" 'function))

(cffi:defcfun ("gsl_vector_view_array" #.(swig-lispify "gsl_vector_view_array" 'function)) #.(swig-lispify "_gsl_vector_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_view_array" 'function))

(cffi:defcfun ("gsl_vector_view_array_with_stride" #.(swig-lispify "gsl_vector_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_const_view_array" #.(swig-lispify "gsl_vector_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_const_view_array_with_stride" #.(swig-lispify "gsl_vector_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_subvector" #.(swig-lispify "gsl_vector_subvector" 'function)) #.(swig-lispify "_gsl_vector_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_subvector" 'function))

(cffi:defcfun ("gsl_vector_subvector_with_stride" #.(swig-lispify "gsl_vector_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_const_subvector" #.(swig-lispify "gsl_vector_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_const_subvector_with_stride" #.(swig-lispify "gsl_vector_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_set_zero" #.(swig-lispify "gsl_vector_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_set_zero" 'function))

(cffi:defcfun ("gsl_vector_set_all" #.(swig-lispify "gsl_vector_set_all" 'function)) :void
  (v :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_set_all" 'function))

(cffi:defcfun ("gsl_vector_set_basis" #.(swig-lispify "gsl_vector_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_set_basis" 'function))

(cffi:defcfun ("gsl_vector_fread" #.(swig-lispify "gsl_vector_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_fread" 'function))

(cffi:defcfun ("gsl_vector_fwrite" #.(swig-lispify "gsl_vector_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_fwrite" 'function))

(cffi:defcfun ("gsl_vector_fscanf" #.(swig-lispify "gsl_vector_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_fscanf" 'function))

(cffi:defcfun ("gsl_vector_fprintf" #.(swig-lispify "gsl_vector_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_fprintf" 'function))

(cffi:defcfun ("gsl_vector_memcpy" #.(swig-lispify "gsl_vector_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_memcpy" 'function))

(cffi:defcfun ("gsl_vector_reverse" #.(swig-lispify "gsl_vector_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_reverse" 'function))

(cffi:defcfun ("gsl_vector_swap" #.(swig-lispify "gsl_vector_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_swap" 'function))

(cffi:defcfun ("gsl_vector_swap_elements" #.(swig-lispify "gsl_vector_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_max" #.(swig-lispify "gsl_vector_max" 'function)) :double
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_max" 'function))

(cffi:defcfun ("gsl_vector_min" #.(swig-lispify "gsl_vector_min" 'function)) :double
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_min" 'function))

(cffi:defcfun ("gsl_vector_minmax" #.(swig-lispify "gsl_vector_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_minmax" 'function))

(cffi:defcfun ("gsl_vector_max_index" #.(swig-lispify "gsl_vector_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_max_index" 'function))

(cffi:defcfun ("gsl_vector_min_index" #.(swig-lispify "gsl_vector_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_min_index" 'function))

(cffi:defcfun ("gsl_vector_minmax_index" #.(swig-lispify "gsl_vector_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_add" #.(swig-lispify "gsl_vector_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_add" 'function))

(cffi:defcfun ("gsl_vector_sub" #.(swig-lispify "gsl_vector_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_sub" 'function))

(cffi:defcfun ("gsl_vector_mul" #.(swig-lispify "gsl_vector_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_mul" 'function))

(cffi:defcfun ("gsl_vector_div" #.(swig-lispify "gsl_vector_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_div" 'function))

(cffi:defcfun ("gsl_vector_scale" #.(swig-lispify "gsl_vector_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_scale" 'function))

(cffi:defcfun ("gsl_vector_add_constant" #.(swig-lispify "gsl_vector_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_add_constant" 'function))

(cffi:defcfun ("gsl_vector_equal" #.(swig-lispify "gsl_vector_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_equal" 'function))

(cffi:defcfun ("gsl_vector_isnull" #.(swig-lispify "gsl_vector_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_isnull" 'function))

(cffi:defcfun ("gsl_vector_ispos" #.(swig-lispify "gsl_vector_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ispos" 'function))

(cffi:defcfun ("gsl_vector_isneg" #.(swig-lispify "gsl_vector_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_isneg" 'function))

(cffi:defcfun ("gsl_vector_isnonneg" #.(swig-lispify "gsl_vector_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_get" #.(swig-lispify "gsl_vector_get" 'function)) :double
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_get" 'function))

(cffi:defcfun ("gsl_vector_set" #.(swig-lispify "gsl_vector_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_set" 'function))

(cffi:defcfun ("gsl_vector_ptr" #.(swig-lispify "gsl_vector_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ptr" 'function))

(cffi:defcfun ("gsl_vector_const_ptr" #.(swig-lispify "gsl_vector_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_float" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_float" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_float_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_float_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_float_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_float" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_float_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_float_alloc" #.(swig-lispify "gsl_vector_float_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_alloc" 'function))

(cffi:defcfun ("gsl_vector_float_calloc" #.(swig-lispify "gsl_vector_float_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_calloc" 'function))

(cffi:defcfun ("gsl_vector_float_alloc_from_block" #.(swig-lispify "gsl_vector_float_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_float_alloc_from_vector" #.(swig-lispify "gsl_vector_float_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_float_free" #.(swig-lispify "gsl_vector_float_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_free" 'function))

(cffi:defcfun ("gsl_vector_float_view_array" #.(swig-lispify "gsl_vector_float_view_array" 'function)) #.(swig-lispify "_gsl_vector_float_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_view_array" 'function))

(cffi:defcfun ("gsl_vector_float_view_array_with_stride" #.(swig-lispify "gsl_vector_float_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_float_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_float_const_view_array" #.(swig-lispify "gsl_vector_float_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_float_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_float_const_view_array_with_stride" #.(swig-lispify "gsl_vector_float_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_float_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_float_subvector" #.(swig-lispify "gsl_vector_float_subvector" 'function)) #.(swig-lispify "_gsl_vector_float_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_subvector" 'function))

(cffi:defcfun ("gsl_vector_float_subvector_with_stride" #.(swig-lispify "gsl_vector_float_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_float_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_float_const_subvector" #.(swig-lispify "gsl_vector_float_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_float_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_float_const_subvector_with_stride" #.(swig-lispify "gsl_vector_float_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_float_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_float_set_zero" #.(swig-lispify "gsl_vector_float_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_set_zero" 'function))

(cffi:defcfun ("gsl_vector_float_set_all" #.(swig-lispify "gsl_vector_float_set_all" 'function)) :void
  (v :pointer)
  (x :float))

(cl:export '#.(swig-lispify "gsl_vector_float_set_all" 'function))

(cffi:defcfun ("gsl_vector_float_set_basis" #.(swig-lispify "gsl_vector_float_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_set_basis" 'function))

(cffi:defcfun ("gsl_vector_float_fread" #.(swig-lispify "gsl_vector_float_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_fread" 'function))

(cffi:defcfun ("gsl_vector_float_fwrite" #.(swig-lispify "gsl_vector_float_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_fwrite" 'function))

(cffi:defcfun ("gsl_vector_float_fscanf" #.(swig-lispify "gsl_vector_float_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_fscanf" 'function))

(cffi:defcfun ("gsl_vector_float_fprintf" #.(swig-lispify "gsl_vector_float_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_float_fprintf" 'function))

(cffi:defcfun ("gsl_vector_float_memcpy" #.(swig-lispify "gsl_vector_float_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_memcpy" 'function))

(cffi:defcfun ("gsl_vector_float_reverse" #.(swig-lispify "gsl_vector_float_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_reverse" 'function))

(cffi:defcfun ("gsl_vector_float_swap" #.(swig-lispify "gsl_vector_float_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_swap" 'function))

(cffi:defcfun ("gsl_vector_float_swap_elements" #.(swig-lispify "gsl_vector_float_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_float_max" #.(swig-lispify "gsl_vector_float_max" 'function)) :float
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_max" 'function))

(cffi:defcfun ("gsl_vector_float_min" #.(swig-lispify "gsl_vector_float_min" 'function)) :float
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_min" 'function))

(cffi:defcfun ("gsl_vector_float_minmax" #.(swig-lispify "gsl_vector_float_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_minmax" 'function))

(cffi:defcfun ("gsl_vector_float_max_index" #.(swig-lispify "gsl_vector_float_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_max_index" 'function))

(cffi:defcfun ("gsl_vector_float_min_index" #.(swig-lispify "gsl_vector_float_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_min_index" 'function))

(cffi:defcfun ("gsl_vector_float_minmax_index" #.(swig-lispify "gsl_vector_float_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_float_add" #.(swig-lispify "gsl_vector_float_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_add" 'function))

(cffi:defcfun ("gsl_vector_float_sub" #.(swig-lispify "gsl_vector_float_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_sub" 'function))

(cffi:defcfun ("gsl_vector_float_mul" #.(swig-lispify "gsl_vector_float_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_mul" 'function))

(cffi:defcfun ("gsl_vector_float_div" #.(swig-lispify "gsl_vector_float_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_div" 'function))

(cffi:defcfun ("gsl_vector_float_scale" #.(swig-lispify "gsl_vector_float_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_float_scale" 'function))

(cffi:defcfun ("gsl_vector_float_add_constant" #.(swig-lispify "gsl_vector_float_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_float_add_constant" 'function))

(cffi:defcfun ("gsl_vector_float_equal" #.(swig-lispify "gsl_vector_float_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_equal" 'function))

(cffi:defcfun ("gsl_vector_float_isnull" #.(swig-lispify "gsl_vector_float_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_isnull" 'function))

(cffi:defcfun ("gsl_vector_float_ispos" #.(swig-lispify "gsl_vector_float_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_ispos" 'function))

(cffi:defcfun ("gsl_vector_float_isneg" #.(swig-lispify "gsl_vector_float_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_isneg" 'function))

(cffi:defcfun ("gsl_vector_float_isnonneg" #.(swig-lispify "gsl_vector_float_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_float_get" #.(swig-lispify "gsl_vector_float_get" 'function)) :float
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_get" 'function))

(cffi:defcfun ("gsl_vector_float_set" #.(swig-lispify "gsl_vector_float_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :float))

(cl:export '#.(swig-lispify "gsl_vector_float_set" 'function))

(cffi:defcfun ("gsl_vector_float_ptr" #.(swig-lispify "gsl_vector_float_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_ptr" 'function))

(cffi:defcfun ("gsl_vector_float_const_ptr" #.(swig-lispify "gsl_vector_float_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_float_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_int" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_int" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_int_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_int" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_int_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_int_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_int" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_int_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_int_alloc" #.(swig-lispify "gsl_vector_int_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_alloc" 'function))

(cffi:defcfun ("gsl_vector_int_calloc" #.(swig-lispify "gsl_vector_int_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_calloc" 'function))

(cffi:defcfun ("gsl_vector_int_alloc_from_block" #.(swig-lispify "gsl_vector_int_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_int_alloc_from_vector" #.(swig-lispify "gsl_vector_int_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_int_free" #.(swig-lispify "gsl_vector_int_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_free" 'function))

(cffi:defcfun ("gsl_vector_int_view_array" #.(swig-lispify "gsl_vector_int_view_array" 'function)) #.(swig-lispify "_gsl_vector_int_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_view_array" 'function))

(cffi:defcfun ("gsl_vector_int_view_array_with_stride" #.(swig-lispify "gsl_vector_int_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_int_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_int_const_view_array" #.(swig-lispify "gsl_vector_int_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_int_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_int_const_view_array_with_stride" #.(swig-lispify "gsl_vector_int_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_int_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_int_subvector" #.(swig-lispify "gsl_vector_int_subvector" 'function)) #.(swig-lispify "_gsl_vector_int_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_subvector" 'function))

(cffi:defcfun ("gsl_vector_int_subvector_with_stride" #.(swig-lispify "gsl_vector_int_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_int_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_int_const_subvector" #.(swig-lispify "gsl_vector_int_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_int_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_int_const_subvector_with_stride" #.(swig-lispify "gsl_vector_int_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_int_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_int_set_zero" #.(swig-lispify "gsl_vector_int_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_set_zero" 'function))

(cffi:defcfun ("gsl_vector_int_set_all" #.(swig-lispify "gsl_vector_int_set_all" 'function)) :void
  (v :pointer)
  (x :int))

(cl:export '#.(swig-lispify "gsl_vector_int_set_all" 'function))

(cffi:defcfun ("gsl_vector_int_set_basis" #.(swig-lispify "gsl_vector_int_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_set_basis" 'function))

(cffi:defcfun ("gsl_vector_int_fread" #.(swig-lispify "gsl_vector_int_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_fread" 'function))

(cffi:defcfun ("gsl_vector_int_fwrite" #.(swig-lispify "gsl_vector_int_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_fwrite" 'function))

(cffi:defcfun ("gsl_vector_int_fscanf" #.(swig-lispify "gsl_vector_int_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_fscanf" 'function))

(cffi:defcfun ("gsl_vector_int_fprintf" #.(swig-lispify "gsl_vector_int_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_int_fprintf" 'function))

(cffi:defcfun ("gsl_vector_int_memcpy" #.(swig-lispify "gsl_vector_int_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_memcpy" 'function))

(cffi:defcfun ("gsl_vector_int_reverse" #.(swig-lispify "gsl_vector_int_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_reverse" 'function))

(cffi:defcfun ("gsl_vector_int_swap" #.(swig-lispify "gsl_vector_int_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_swap" 'function))

(cffi:defcfun ("gsl_vector_int_swap_elements" #.(swig-lispify "gsl_vector_int_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_int_max" #.(swig-lispify "gsl_vector_int_max" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_max" 'function))

(cffi:defcfun ("gsl_vector_int_min" #.(swig-lispify "gsl_vector_int_min" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_min" 'function))

(cffi:defcfun ("gsl_vector_int_minmax" #.(swig-lispify "gsl_vector_int_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_minmax" 'function))

(cffi:defcfun ("gsl_vector_int_max_index" #.(swig-lispify "gsl_vector_int_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_max_index" 'function))

(cffi:defcfun ("gsl_vector_int_min_index" #.(swig-lispify "gsl_vector_int_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_min_index" 'function))

(cffi:defcfun ("gsl_vector_int_minmax_index" #.(swig-lispify "gsl_vector_int_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_int_add" #.(swig-lispify "gsl_vector_int_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_add" 'function))

(cffi:defcfun ("gsl_vector_int_sub" #.(swig-lispify "gsl_vector_int_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_sub" 'function))

(cffi:defcfun ("gsl_vector_int_mul" #.(swig-lispify "gsl_vector_int_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_mul" 'function))

(cffi:defcfun ("gsl_vector_int_div" #.(swig-lispify "gsl_vector_int_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_div" 'function))

(cffi:defcfun ("gsl_vector_int_scale" #.(swig-lispify "gsl_vector_int_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_int_scale" 'function))

(cffi:defcfun ("gsl_vector_int_add_constant" #.(swig-lispify "gsl_vector_int_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_int_add_constant" 'function))

(cffi:defcfun ("gsl_vector_int_equal" #.(swig-lispify "gsl_vector_int_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_equal" 'function))

(cffi:defcfun ("gsl_vector_int_isnull" #.(swig-lispify "gsl_vector_int_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_isnull" 'function))

(cffi:defcfun ("gsl_vector_int_ispos" #.(swig-lispify "gsl_vector_int_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_ispos" 'function))

(cffi:defcfun ("gsl_vector_int_isneg" #.(swig-lispify "gsl_vector_int_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_isneg" 'function))

(cffi:defcfun ("gsl_vector_int_isnonneg" #.(swig-lispify "gsl_vector_int_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_int_get" #.(swig-lispify "gsl_vector_int_get" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_get" 'function))

(cffi:defcfun ("gsl_vector_int_set" #.(swig-lispify "gsl_vector_int_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :int))

(cl:export '#.(swig-lispify "gsl_vector_int_set" 'function))

(cffi:defcfun ("gsl_vector_int_ptr" #.(swig-lispify "gsl_vector_int_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_ptr" 'function))

(cffi:defcfun ("gsl_vector_int_const_ptr" #.(swig-lispify "gsl_vector_int_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_int_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_long" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_long" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_long_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_long" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_long_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_long_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_long" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_long_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_long_alloc" #.(swig-lispify "gsl_vector_long_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_alloc" 'function))

(cffi:defcfun ("gsl_vector_long_calloc" #.(swig-lispify "gsl_vector_long_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_calloc" 'function))

(cffi:defcfun ("gsl_vector_long_alloc_from_block" #.(swig-lispify "gsl_vector_long_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_long_alloc_from_vector" #.(swig-lispify "gsl_vector_long_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_long_free" #.(swig-lispify "gsl_vector_long_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_free" 'function))

(cffi:defcfun ("gsl_vector_long_view_array" #.(swig-lispify "gsl_vector_long_view_array" 'function)) #.(swig-lispify "_gsl_vector_long_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_view_array" 'function))

(cffi:defcfun ("gsl_vector_long_view_array_with_stride" #.(swig-lispify "gsl_vector_long_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_const_view_array" #.(swig-lispify "gsl_vector_long_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_long_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_long_const_view_array_with_stride" #.(swig-lispify "gsl_vector_long_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_subvector" #.(swig-lispify "gsl_vector_long_subvector" 'function)) #.(swig-lispify "_gsl_vector_long_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_subvector" 'function))

(cffi:defcfun ("gsl_vector_long_subvector_with_stride" #.(swig-lispify "gsl_vector_long_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_const_subvector" #.(swig-lispify "gsl_vector_long_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_long_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_long_const_subvector_with_stride" #.(swig-lispify "gsl_vector_long_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_set_zero" #.(swig-lispify "gsl_vector_long_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_set_zero" 'function))

(cffi:defcfun ("gsl_vector_long_set_all" #.(swig-lispify "gsl_vector_long_set_all" 'function)) :void
  (v :pointer)
  (x :long))

(cl:export '#.(swig-lispify "gsl_vector_long_set_all" 'function))

(cffi:defcfun ("gsl_vector_long_set_basis" #.(swig-lispify "gsl_vector_long_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_set_basis" 'function))

(cffi:defcfun ("gsl_vector_long_fread" #.(swig-lispify "gsl_vector_long_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_fread" 'function))

(cffi:defcfun ("gsl_vector_long_fwrite" #.(swig-lispify "gsl_vector_long_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_fwrite" 'function))

(cffi:defcfun ("gsl_vector_long_fscanf" #.(swig-lispify "gsl_vector_long_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_fscanf" 'function))

(cffi:defcfun ("gsl_vector_long_fprintf" #.(swig-lispify "gsl_vector_long_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_long_fprintf" 'function))

(cffi:defcfun ("gsl_vector_long_memcpy" #.(swig-lispify "gsl_vector_long_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_memcpy" 'function))

(cffi:defcfun ("gsl_vector_long_reverse" #.(swig-lispify "gsl_vector_long_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_reverse" 'function))

(cffi:defcfun ("gsl_vector_long_swap" #.(swig-lispify "gsl_vector_long_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_swap" 'function))

(cffi:defcfun ("gsl_vector_long_swap_elements" #.(swig-lispify "gsl_vector_long_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_long_max" #.(swig-lispify "gsl_vector_long_max" 'function)) :long
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_max" 'function))

(cffi:defcfun ("gsl_vector_long_min" #.(swig-lispify "gsl_vector_long_min" 'function)) :long
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_min" 'function))

(cffi:defcfun ("gsl_vector_long_minmax" #.(swig-lispify "gsl_vector_long_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_minmax" 'function))

(cffi:defcfun ("gsl_vector_long_max_index" #.(swig-lispify "gsl_vector_long_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_max_index" 'function))

(cffi:defcfun ("gsl_vector_long_min_index" #.(swig-lispify "gsl_vector_long_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_min_index" 'function))

(cffi:defcfun ("gsl_vector_long_minmax_index" #.(swig-lispify "gsl_vector_long_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_long_add" #.(swig-lispify "gsl_vector_long_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_add" 'function))

(cffi:defcfun ("gsl_vector_long_sub" #.(swig-lispify "gsl_vector_long_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_sub" 'function))

(cffi:defcfun ("gsl_vector_long_mul" #.(swig-lispify "gsl_vector_long_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_mul" 'function))

(cffi:defcfun ("gsl_vector_long_div" #.(swig-lispify "gsl_vector_long_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_div" 'function))

(cffi:defcfun ("gsl_vector_long_scale" #.(swig-lispify "gsl_vector_long_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_long_scale" 'function))

(cffi:defcfun ("gsl_vector_long_add_constant" #.(swig-lispify "gsl_vector_long_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_long_add_constant" 'function))

(cffi:defcfun ("gsl_vector_long_equal" #.(swig-lispify "gsl_vector_long_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_equal" 'function))

(cffi:defcfun ("gsl_vector_long_isnull" #.(swig-lispify "gsl_vector_long_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_isnull" 'function))

(cffi:defcfun ("gsl_vector_long_ispos" #.(swig-lispify "gsl_vector_long_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_ispos" 'function))

(cffi:defcfun ("gsl_vector_long_isneg" #.(swig-lispify "gsl_vector_long_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_isneg" 'function))

(cffi:defcfun ("gsl_vector_long_isnonneg" #.(swig-lispify "gsl_vector_long_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_long_get" #.(swig-lispify "gsl_vector_long_get" 'function)) :long
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_get" 'function))

(cffi:defcfun ("gsl_vector_long_set" #.(swig-lispify "gsl_vector_long_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :long))

(cl:export '#.(swig-lispify "gsl_vector_long_set" 'function))

(cffi:defcfun ("gsl_vector_long_ptr" #.(swig-lispify "gsl_vector_long_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_ptr" 'function))

(cffi:defcfun ("gsl_vector_long_const_ptr" #.(swig-lispify "gsl_vector_long_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_long_double" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_long_double" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_long_double_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_long_double_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_long_double_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_long_double" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_long_double_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_long_double_alloc" #.(swig-lispify "gsl_vector_long_double_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_alloc" 'function))

(cffi:defcfun ("gsl_vector_long_double_calloc" #.(swig-lispify "gsl_vector_long_double_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_calloc" 'function))

(cffi:defcfun ("gsl_vector_long_double_alloc_from_block" #.(swig-lispify "gsl_vector_long_double_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_long_double_alloc_from_vector" #.(swig-lispify "gsl_vector_long_double_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_long_double_free" #.(swig-lispify "gsl_vector_long_double_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_free" 'function))

(cffi:defcfun ("gsl_vector_long_double_view_array" #.(swig-lispify "gsl_vector_long_double_view_array" 'function)) #.(swig-lispify "_gsl_vector_long_double_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_view_array" 'function))

(cffi:defcfun ("gsl_vector_long_double_view_array_with_stride" #.(swig-lispify "gsl_vector_long_double_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_double_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_double_const_view_array" #.(swig-lispify "gsl_vector_long_double_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_long_double_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_long_double_const_view_array_with_stride" #.(swig-lispify "gsl_vector_long_double_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_double_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_double_subvector" #.(swig-lispify "gsl_vector_long_double_subvector" 'function)) #.(swig-lispify "_gsl_vector_long_double_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_subvector" 'function))

(cffi:defcfun ("gsl_vector_long_double_subvector_with_stride" #.(swig-lispify "gsl_vector_long_double_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_double_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_double_const_subvector" #.(swig-lispify "gsl_vector_long_double_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_long_double_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_long_double_const_subvector_with_stride" #.(swig-lispify "gsl_vector_long_double_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_long_double_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_long_double_set_zero" #.(swig-lispify "gsl_vector_long_double_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_set_zero" 'function))

(cffi:defcfun ("gsl_vector_long_double_set_all" #.(swig-lispify "gsl_vector_long_double_set_all" 'function)) :void
  (v :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_set_all" 'function))

(cffi:defcfun ("gsl_vector_long_double_set_basis" #.(swig-lispify "gsl_vector_long_double_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_set_basis" 'function))

(cffi:defcfun ("gsl_vector_long_double_fread" #.(swig-lispify "gsl_vector_long_double_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_fread" 'function))

(cffi:defcfun ("gsl_vector_long_double_fwrite" #.(swig-lispify "gsl_vector_long_double_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_fwrite" 'function))

(cffi:defcfun ("gsl_vector_long_double_fscanf" #.(swig-lispify "gsl_vector_long_double_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_fscanf" 'function))

(cffi:defcfun ("gsl_vector_long_double_fprintf" #.(swig-lispify "gsl_vector_long_double_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_long_double_fprintf" 'function))

(cffi:defcfun ("gsl_vector_long_double_memcpy" #.(swig-lispify "gsl_vector_long_double_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_memcpy" 'function))

(cffi:defcfun ("gsl_vector_long_double_reverse" #.(swig-lispify "gsl_vector_long_double_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_reverse" 'function))

(cffi:defcfun ("gsl_vector_long_double_swap" #.(swig-lispify "gsl_vector_long_double_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_swap" 'function))

(cffi:defcfun ("gsl_vector_long_double_swap_elements" #.(swig-lispify "gsl_vector_long_double_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_long_double_max" #.(swig-lispify "gsl_vector_long_double_max" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_max" 'function))

(cffi:defcfun ("gsl_vector_long_double_min" #.(swig-lispify "gsl_vector_long_double_min" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_min" 'function))

(cffi:defcfun ("gsl_vector_long_double_minmax" #.(swig-lispify "gsl_vector_long_double_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_minmax" 'function))

(cffi:defcfun ("gsl_vector_long_double_max_index" #.(swig-lispify "gsl_vector_long_double_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_max_index" 'function))

(cffi:defcfun ("gsl_vector_long_double_min_index" #.(swig-lispify "gsl_vector_long_double_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_min_index" 'function))

(cffi:defcfun ("gsl_vector_long_double_minmax_index" #.(swig-lispify "gsl_vector_long_double_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_long_double_add" #.(swig-lispify "gsl_vector_long_double_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_add" 'function))

(cffi:defcfun ("gsl_vector_long_double_sub" #.(swig-lispify "gsl_vector_long_double_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_sub" 'function))

(cffi:defcfun ("gsl_vector_long_double_mul" #.(swig-lispify "gsl_vector_long_double_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_mul" 'function))

(cffi:defcfun ("gsl_vector_long_double_div" #.(swig-lispify "gsl_vector_long_double_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_div" 'function))

(cffi:defcfun ("gsl_vector_long_double_scale" #.(swig-lispify "gsl_vector_long_double_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_long_double_scale" 'function))

(cffi:defcfun ("gsl_vector_long_double_add_constant" #.(swig-lispify "gsl_vector_long_double_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_long_double_add_constant" 'function))

(cffi:defcfun ("gsl_vector_long_double_equal" #.(swig-lispify "gsl_vector_long_double_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_equal" 'function))

(cffi:defcfun ("gsl_vector_long_double_isnull" #.(swig-lispify "gsl_vector_long_double_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_isnull" 'function))

(cffi:defcfun ("gsl_vector_long_double_ispos" #.(swig-lispify "gsl_vector_long_double_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_ispos" 'function))

(cffi:defcfun ("gsl_vector_long_double_isneg" #.(swig-lispify "gsl_vector_long_double_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_isneg" 'function))

(cffi:defcfun ("gsl_vector_long_double_isnonneg" #.(swig-lispify "gsl_vector_long_double_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_long_double_get" #.(swig-lispify "gsl_vector_long_double_get" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_get" 'function))

(cffi:defcfun ("gsl_vector_long_double_set" #.(swig-lispify "gsl_vector_long_double_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_set" 'function))

(cffi:defcfun ("gsl_vector_long_double_ptr" #.(swig-lispify "gsl_vector_long_double_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_ptr" 'function))

(cffi:defcfun ("gsl_vector_long_double_const_ptr" #.(swig-lispify "gsl_vector_long_double_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_long_double_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_short" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_short" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_short_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_short" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_short_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_short_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_short" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_short_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_short_alloc" #.(swig-lispify "gsl_vector_short_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_alloc" 'function))

(cffi:defcfun ("gsl_vector_short_calloc" #.(swig-lispify "gsl_vector_short_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_calloc" 'function))

(cffi:defcfun ("gsl_vector_short_alloc_from_block" #.(swig-lispify "gsl_vector_short_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_short_alloc_from_vector" #.(swig-lispify "gsl_vector_short_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_short_free" #.(swig-lispify "gsl_vector_short_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_free" 'function))

(cffi:defcfun ("gsl_vector_short_view_array" #.(swig-lispify "gsl_vector_short_view_array" 'function)) #.(swig-lispify "_gsl_vector_short_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_view_array" 'function))

(cffi:defcfun ("gsl_vector_short_view_array_with_stride" #.(swig-lispify "gsl_vector_short_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_short_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_short_const_view_array" #.(swig-lispify "gsl_vector_short_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_short_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_short_const_view_array_with_stride" #.(swig-lispify "gsl_vector_short_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_short_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_short_subvector" #.(swig-lispify "gsl_vector_short_subvector" 'function)) #.(swig-lispify "_gsl_vector_short_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_subvector" 'function))

(cffi:defcfun ("gsl_vector_short_subvector_with_stride" #.(swig-lispify "gsl_vector_short_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_short_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_short_const_subvector" #.(swig-lispify "gsl_vector_short_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_short_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_short_const_subvector_with_stride" #.(swig-lispify "gsl_vector_short_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_short_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_short_set_zero" #.(swig-lispify "gsl_vector_short_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_set_zero" 'function))

(cffi:defcfun ("gsl_vector_short_set_all" #.(swig-lispify "gsl_vector_short_set_all" 'function)) :void
  (v :pointer)
  (x :short))

(cl:export '#.(swig-lispify "gsl_vector_short_set_all" 'function))

(cffi:defcfun ("gsl_vector_short_set_basis" #.(swig-lispify "gsl_vector_short_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_set_basis" 'function))

(cffi:defcfun ("gsl_vector_short_fread" #.(swig-lispify "gsl_vector_short_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_fread" 'function))

(cffi:defcfun ("gsl_vector_short_fwrite" #.(swig-lispify "gsl_vector_short_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_fwrite" 'function))

(cffi:defcfun ("gsl_vector_short_fscanf" #.(swig-lispify "gsl_vector_short_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_fscanf" 'function))

(cffi:defcfun ("gsl_vector_short_fprintf" #.(swig-lispify "gsl_vector_short_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_short_fprintf" 'function))

(cffi:defcfun ("gsl_vector_short_memcpy" #.(swig-lispify "gsl_vector_short_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_memcpy" 'function))

(cffi:defcfun ("gsl_vector_short_reverse" #.(swig-lispify "gsl_vector_short_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_reverse" 'function))

(cffi:defcfun ("gsl_vector_short_swap" #.(swig-lispify "gsl_vector_short_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_swap" 'function))

(cffi:defcfun ("gsl_vector_short_swap_elements" #.(swig-lispify "gsl_vector_short_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_short_max" #.(swig-lispify "gsl_vector_short_max" 'function)) :short
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_max" 'function))

(cffi:defcfun ("gsl_vector_short_min" #.(swig-lispify "gsl_vector_short_min" 'function)) :short
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_min" 'function))

(cffi:defcfun ("gsl_vector_short_minmax" #.(swig-lispify "gsl_vector_short_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_minmax" 'function))

(cffi:defcfun ("gsl_vector_short_max_index" #.(swig-lispify "gsl_vector_short_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_max_index" 'function))

(cffi:defcfun ("gsl_vector_short_min_index" #.(swig-lispify "gsl_vector_short_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_min_index" 'function))

(cffi:defcfun ("gsl_vector_short_minmax_index" #.(swig-lispify "gsl_vector_short_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_short_add" #.(swig-lispify "gsl_vector_short_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_add" 'function))

(cffi:defcfun ("gsl_vector_short_sub" #.(swig-lispify "gsl_vector_short_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_sub" 'function))

(cffi:defcfun ("gsl_vector_short_mul" #.(swig-lispify "gsl_vector_short_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_mul" 'function))

(cffi:defcfun ("gsl_vector_short_div" #.(swig-lispify "gsl_vector_short_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_div" 'function))

(cffi:defcfun ("gsl_vector_short_scale" #.(swig-lispify "gsl_vector_short_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_short_scale" 'function))

(cffi:defcfun ("gsl_vector_short_add_constant" #.(swig-lispify "gsl_vector_short_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_short_add_constant" 'function))

(cffi:defcfun ("gsl_vector_short_equal" #.(swig-lispify "gsl_vector_short_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_equal" 'function))

(cffi:defcfun ("gsl_vector_short_isnull" #.(swig-lispify "gsl_vector_short_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_isnull" 'function))

(cffi:defcfun ("gsl_vector_short_ispos" #.(swig-lispify "gsl_vector_short_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_ispos" 'function))

(cffi:defcfun ("gsl_vector_short_isneg" #.(swig-lispify "gsl_vector_short_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_isneg" 'function))

(cffi:defcfun ("gsl_vector_short_isnonneg" #.(swig-lispify "gsl_vector_short_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_short_get" #.(swig-lispify "gsl_vector_short_get" 'function)) :short
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_get" 'function))

(cffi:defcfun ("gsl_vector_short_set" #.(swig-lispify "gsl_vector_short_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :short))

(cl:export '#.(swig-lispify "gsl_vector_short_set" 'function))

(cffi:defcfun ("gsl_vector_short_ptr" #.(swig-lispify "gsl_vector_short_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_ptr" 'function))

(cffi:defcfun ("gsl_vector_short_const_ptr" #.(swig-lispify "gsl_vector_short_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_short_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_uchar" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_uchar" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_uchar_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_uchar" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_uchar_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_uchar_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_uchar" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_uchar_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_uchar_alloc" #.(swig-lispify "gsl_vector_uchar_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_alloc" 'function))

(cffi:defcfun ("gsl_vector_uchar_calloc" #.(swig-lispify "gsl_vector_uchar_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_calloc" 'function))

(cffi:defcfun ("gsl_vector_uchar_alloc_from_block" #.(swig-lispify "gsl_vector_uchar_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_uchar_alloc_from_vector" #.(swig-lispify "gsl_vector_uchar_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_uchar_free" #.(swig-lispify "gsl_vector_uchar_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_free" 'function))

(cffi:defcfun ("gsl_vector_uchar_view_array" #.(swig-lispify "gsl_vector_uchar_view_array" 'function)) #.(swig-lispify "_gsl_vector_uchar_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_view_array" 'function))

(cffi:defcfun ("gsl_vector_uchar_view_array_with_stride" #.(swig-lispify "gsl_vector_uchar_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uchar_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uchar_const_view_array" #.(swig-lispify "gsl_vector_uchar_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_uchar_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_uchar_const_view_array_with_stride" #.(swig-lispify "gsl_vector_uchar_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uchar_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uchar_subvector" #.(swig-lispify "gsl_vector_uchar_subvector" 'function)) #.(swig-lispify "_gsl_vector_uchar_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_subvector" 'function))

(cffi:defcfun ("gsl_vector_uchar_subvector_with_stride" #.(swig-lispify "gsl_vector_uchar_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uchar_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uchar_const_subvector" #.(swig-lispify "gsl_vector_uchar_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_uchar_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_uchar_const_subvector_with_stride" #.(swig-lispify "gsl_vector_uchar_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uchar_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uchar_set_zero" #.(swig-lispify "gsl_vector_uchar_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_set_zero" 'function))

(cffi:defcfun ("gsl_vector_uchar_set_all" #.(swig-lispify "gsl_vector_uchar_set_all" 'function)) :void
  (v :pointer)
  (x :unsigned-char))

(cl:export '#.(swig-lispify "gsl_vector_uchar_set_all" 'function))

(cffi:defcfun ("gsl_vector_uchar_set_basis" #.(swig-lispify "gsl_vector_uchar_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_set_basis" 'function))

(cffi:defcfun ("gsl_vector_uchar_fread" #.(swig-lispify "gsl_vector_uchar_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_fread" 'function))

(cffi:defcfun ("gsl_vector_uchar_fwrite" #.(swig-lispify "gsl_vector_uchar_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_fwrite" 'function))

(cffi:defcfun ("gsl_vector_uchar_fscanf" #.(swig-lispify "gsl_vector_uchar_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_fscanf" 'function))

(cffi:defcfun ("gsl_vector_uchar_fprintf" #.(swig-lispify "gsl_vector_uchar_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_uchar_fprintf" 'function))

(cffi:defcfun ("gsl_vector_uchar_memcpy" #.(swig-lispify "gsl_vector_uchar_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_memcpy" 'function))

(cffi:defcfun ("gsl_vector_uchar_reverse" #.(swig-lispify "gsl_vector_uchar_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_reverse" 'function))

(cffi:defcfun ("gsl_vector_uchar_swap" #.(swig-lispify "gsl_vector_uchar_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_swap" 'function))

(cffi:defcfun ("gsl_vector_uchar_swap_elements" #.(swig-lispify "gsl_vector_uchar_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_uchar_max" #.(swig-lispify "gsl_vector_uchar_max" 'function)) :unsigned-char
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_max" 'function))

(cffi:defcfun ("gsl_vector_uchar_min" #.(swig-lispify "gsl_vector_uchar_min" 'function)) :unsigned-char
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_min" 'function))

(cffi:defcfun ("gsl_vector_uchar_minmax" #.(swig-lispify "gsl_vector_uchar_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_minmax" 'function))

(cffi:defcfun ("gsl_vector_uchar_max_index" #.(swig-lispify "gsl_vector_uchar_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_max_index" 'function))

(cffi:defcfun ("gsl_vector_uchar_min_index" #.(swig-lispify "gsl_vector_uchar_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_min_index" 'function))

(cffi:defcfun ("gsl_vector_uchar_minmax_index" #.(swig-lispify "gsl_vector_uchar_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_uchar_add" #.(swig-lispify "gsl_vector_uchar_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_add" 'function))

(cffi:defcfun ("gsl_vector_uchar_sub" #.(swig-lispify "gsl_vector_uchar_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_sub" 'function))

(cffi:defcfun ("gsl_vector_uchar_mul" #.(swig-lispify "gsl_vector_uchar_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_mul" 'function))

(cffi:defcfun ("gsl_vector_uchar_div" #.(swig-lispify "gsl_vector_uchar_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_div" 'function))

(cffi:defcfun ("gsl_vector_uchar_scale" #.(swig-lispify "gsl_vector_uchar_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_uchar_scale" 'function))

(cffi:defcfun ("gsl_vector_uchar_add_constant" #.(swig-lispify "gsl_vector_uchar_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_uchar_add_constant" 'function))

(cffi:defcfun ("gsl_vector_uchar_equal" #.(swig-lispify "gsl_vector_uchar_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_equal" 'function))

(cffi:defcfun ("gsl_vector_uchar_isnull" #.(swig-lispify "gsl_vector_uchar_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_isnull" 'function))

(cffi:defcfun ("gsl_vector_uchar_ispos" #.(swig-lispify "gsl_vector_uchar_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_ispos" 'function))

(cffi:defcfun ("gsl_vector_uchar_isneg" #.(swig-lispify "gsl_vector_uchar_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_isneg" 'function))

(cffi:defcfun ("gsl_vector_uchar_isnonneg" #.(swig-lispify "gsl_vector_uchar_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_uchar_get" #.(swig-lispify "gsl_vector_uchar_get" 'function)) :unsigned-char
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_get" 'function))

(cffi:defcfun ("gsl_vector_uchar_set" #.(swig-lispify "gsl_vector_uchar_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :unsigned-char))

(cl:export '#.(swig-lispify "gsl_vector_uchar_set" 'function))

(cffi:defcfun ("gsl_vector_uchar_ptr" #.(swig-lispify "gsl_vector_uchar_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_ptr" 'function))

(cffi:defcfun ("gsl_vector_uchar_const_ptr" #.(swig-lispify "gsl_vector_uchar_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uchar_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_uint" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_uint" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_uint_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_uint" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_uint_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_uint_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_uint" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_uint_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_uint_alloc" #.(swig-lispify "gsl_vector_uint_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_alloc" 'function))

(cffi:defcfun ("gsl_vector_uint_calloc" #.(swig-lispify "gsl_vector_uint_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_calloc" 'function))

(cffi:defcfun ("gsl_vector_uint_alloc_from_block" #.(swig-lispify "gsl_vector_uint_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_uint_alloc_from_vector" #.(swig-lispify "gsl_vector_uint_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_uint_free" #.(swig-lispify "gsl_vector_uint_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_free" 'function))

(cffi:defcfun ("gsl_vector_uint_view_array" #.(swig-lispify "gsl_vector_uint_view_array" 'function)) #.(swig-lispify "_gsl_vector_uint_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_view_array" 'function))

(cffi:defcfun ("gsl_vector_uint_view_array_with_stride" #.(swig-lispify "gsl_vector_uint_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uint_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uint_const_view_array" #.(swig-lispify "gsl_vector_uint_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_uint_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_uint_const_view_array_with_stride" #.(swig-lispify "gsl_vector_uint_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uint_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uint_subvector" #.(swig-lispify "gsl_vector_uint_subvector" 'function)) #.(swig-lispify "_gsl_vector_uint_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_subvector" 'function))

(cffi:defcfun ("gsl_vector_uint_subvector_with_stride" #.(swig-lispify "gsl_vector_uint_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uint_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uint_const_subvector" #.(swig-lispify "gsl_vector_uint_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_uint_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_uint_const_subvector_with_stride" #.(swig-lispify "gsl_vector_uint_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_uint_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_uint_set_zero" #.(swig-lispify "gsl_vector_uint_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_set_zero" 'function))

(cffi:defcfun ("gsl_vector_uint_set_all" #.(swig-lispify "gsl_vector_uint_set_all" 'function)) :void
  (v :pointer)
  (x :unsigned-int))

(cl:export '#.(swig-lispify "gsl_vector_uint_set_all" 'function))

(cffi:defcfun ("gsl_vector_uint_set_basis" #.(swig-lispify "gsl_vector_uint_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_set_basis" 'function))

(cffi:defcfun ("gsl_vector_uint_fread" #.(swig-lispify "gsl_vector_uint_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_fread" 'function))

(cffi:defcfun ("gsl_vector_uint_fwrite" #.(swig-lispify "gsl_vector_uint_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_fwrite" 'function))

(cffi:defcfun ("gsl_vector_uint_fscanf" #.(swig-lispify "gsl_vector_uint_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_fscanf" 'function))

(cffi:defcfun ("gsl_vector_uint_fprintf" #.(swig-lispify "gsl_vector_uint_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_uint_fprintf" 'function))

(cffi:defcfun ("gsl_vector_uint_memcpy" #.(swig-lispify "gsl_vector_uint_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_memcpy" 'function))

(cffi:defcfun ("gsl_vector_uint_reverse" #.(swig-lispify "gsl_vector_uint_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_reverse" 'function))

(cffi:defcfun ("gsl_vector_uint_swap" #.(swig-lispify "gsl_vector_uint_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_swap" 'function))

(cffi:defcfun ("gsl_vector_uint_swap_elements" #.(swig-lispify "gsl_vector_uint_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_uint_max" #.(swig-lispify "gsl_vector_uint_max" 'function)) :unsigned-int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_max" 'function))

(cffi:defcfun ("gsl_vector_uint_min" #.(swig-lispify "gsl_vector_uint_min" 'function)) :unsigned-int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_min" 'function))

(cffi:defcfun ("gsl_vector_uint_minmax" #.(swig-lispify "gsl_vector_uint_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_minmax" 'function))

(cffi:defcfun ("gsl_vector_uint_max_index" #.(swig-lispify "gsl_vector_uint_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_max_index" 'function))

(cffi:defcfun ("gsl_vector_uint_min_index" #.(swig-lispify "gsl_vector_uint_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_min_index" 'function))

(cffi:defcfun ("gsl_vector_uint_minmax_index" #.(swig-lispify "gsl_vector_uint_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_uint_add" #.(swig-lispify "gsl_vector_uint_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_add" 'function))

(cffi:defcfun ("gsl_vector_uint_sub" #.(swig-lispify "gsl_vector_uint_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_sub" 'function))

(cffi:defcfun ("gsl_vector_uint_mul" #.(swig-lispify "gsl_vector_uint_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_mul" 'function))

(cffi:defcfun ("gsl_vector_uint_div" #.(swig-lispify "gsl_vector_uint_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_div" 'function))

(cffi:defcfun ("gsl_vector_uint_scale" #.(swig-lispify "gsl_vector_uint_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_uint_scale" 'function))

(cffi:defcfun ("gsl_vector_uint_add_constant" #.(swig-lispify "gsl_vector_uint_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_uint_add_constant" 'function))

(cffi:defcfun ("gsl_vector_uint_equal" #.(swig-lispify "gsl_vector_uint_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_equal" 'function))

(cffi:defcfun ("gsl_vector_uint_isnull" #.(swig-lispify "gsl_vector_uint_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_isnull" 'function))

(cffi:defcfun ("gsl_vector_uint_ispos" #.(swig-lispify "gsl_vector_uint_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_ispos" 'function))

(cffi:defcfun ("gsl_vector_uint_isneg" #.(swig-lispify "gsl_vector_uint_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_isneg" 'function))

(cffi:defcfun ("gsl_vector_uint_isnonneg" #.(swig-lispify "gsl_vector_uint_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_uint_get" #.(swig-lispify "gsl_vector_uint_get" 'function)) :unsigned-int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_get" 'function))

(cffi:defcfun ("gsl_vector_uint_set" #.(swig-lispify "gsl_vector_uint_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :unsigned-int))

(cl:export '#.(swig-lispify "gsl_vector_uint_set" 'function))

(cffi:defcfun ("gsl_vector_uint_ptr" #.(swig-lispify "gsl_vector_uint_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_ptr" 'function))

(cffi:defcfun ("gsl_vector_uint_const_ptr" #.(swig-lispify "gsl_vector_uint_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_uint_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_ulong" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_ulong" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_ulong_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_ulong" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_ulong_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_ulong_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_ulong" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_ulong_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_ulong_alloc" #.(swig-lispify "gsl_vector_ulong_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_alloc" 'function))

(cffi:defcfun ("gsl_vector_ulong_calloc" #.(swig-lispify "gsl_vector_ulong_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_calloc" 'function))

(cffi:defcfun ("gsl_vector_ulong_alloc_from_block" #.(swig-lispify "gsl_vector_ulong_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_ulong_alloc_from_vector" #.(swig-lispify "gsl_vector_ulong_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_ulong_free" #.(swig-lispify "gsl_vector_ulong_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_free" 'function))

(cffi:defcfun ("gsl_vector_ulong_view_array" #.(swig-lispify "gsl_vector_ulong_view_array" 'function)) #.(swig-lispify "_gsl_vector_ulong_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_view_array" 'function))

(cffi:defcfun ("gsl_vector_ulong_view_array_with_stride" #.(swig-lispify "gsl_vector_ulong_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ulong_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ulong_const_view_array" #.(swig-lispify "gsl_vector_ulong_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_ulong_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_ulong_const_view_array_with_stride" #.(swig-lispify "gsl_vector_ulong_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ulong_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ulong_subvector" #.(swig-lispify "gsl_vector_ulong_subvector" 'function)) #.(swig-lispify "_gsl_vector_ulong_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_subvector" 'function))

(cffi:defcfun ("gsl_vector_ulong_subvector_with_stride" #.(swig-lispify "gsl_vector_ulong_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ulong_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ulong_const_subvector" #.(swig-lispify "gsl_vector_ulong_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_ulong_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_ulong_const_subvector_with_stride" #.(swig-lispify "gsl_vector_ulong_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ulong_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ulong_set_zero" #.(swig-lispify "gsl_vector_ulong_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_set_zero" 'function))

(cffi:defcfun ("gsl_vector_ulong_set_all" #.(swig-lispify "gsl_vector_ulong_set_all" 'function)) :void
  (v :pointer)
  (x :unsigned-long))

(cl:export '#.(swig-lispify "gsl_vector_ulong_set_all" 'function))

(cffi:defcfun ("gsl_vector_ulong_set_basis" #.(swig-lispify "gsl_vector_ulong_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_set_basis" 'function))

(cffi:defcfun ("gsl_vector_ulong_fread" #.(swig-lispify "gsl_vector_ulong_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_fread" 'function))

(cffi:defcfun ("gsl_vector_ulong_fwrite" #.(swig-lispify "gsl_vector_ulong_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_fwrite" 'function))

(cffi:defcfun ("gsl_vector_ulong_fscanf" #.(swig-lispify "gsl_vector_ulong_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_fscanf" 'function))

(cffi:defcfun ("gsl_vector_ulong_fprintf" #.(swig-lispify "gsl_vector_ulong_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_ulong_fprintf" 'function))

(cffi:defcfun ("gsl_vector_ulong_memcpy" #.(swig-lispify "gsl_vector_ulong_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_memcpy" 'function))

(cffi:defcfun ("gsl_vector_ulong_reverse" #.(swig-lispify "gsl_vector_ulong_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_reverse" 'function))

(cffi:defcfun ("gsl_vector_ulong_swap" #.(swig-lispify "gsl_vector_ulong_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_swap" 'function))

(cffi:defcfun ("gsl_vector_ulong_swap_elements" #.(swig-lispify "gsl_vector_ulong_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_ulong_max" #.(swig-lispify "gsl_vector_ulong_max" 'function)) :unsigned-long
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_max" 'function))

(cffi:defcfun ("gsl_vector_ulong_min" #.(swig-lispify "gsl_vector_ulong_min" 'function)) :unsigned-long
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_min" 'function))

(cffi:defcfun ("gsl_vector_ulong_minmax" #.(swig-lispify "gsl_vector_ulong_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_minmax" 'function))

(cffi:defcfun ("gsl_vector_ulong_max_index" #.(swig-lispify "gsl_vector_ulong_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_max_index" 'function))

(cffi:defcfun ("gsl_vector_ulong_min_index" #.(swig-lispify "gsl_vector_ulong_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_min_index" 'function))

(cffi:defcfun ("gsl_vector_ulong_minmax_index" #.(swig-lispify "gsl_vector_ulong_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_ulong_add" #.(swig-lispify "gsl_vector_ulong_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_add" 'function))

(cffi:defcfun ("gsl_vector_ulong_sub" #.(swig-lispify "gsl_vector_ulong_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_sub" 'function))

(cffi:defcfun ("gsl_vector_ulong_mul" #.(swig-lispify "gsl_vector_ulong_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_mul" 'function))

(cffi:defcfun ("gsl_vector_ulong_div" #.(swig-lispify "gsl_vector_ulong_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_div" 'function))

(cffi:defcfun ("gsl_vector_ulong_scale" #.(swig-lispify "gsl_vector_ulong_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_ulong_scale" 'function))

(cffi:defcfun ("gsl_vector_ulong_add_constant" #.(swig-lispify "gsl_vector_ulong_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_ulong_add_constant" 'function))

(cffi:defcfun ("gsl_vector_ulong_equal" #.(swig-lispify "gsl_vector_ulong_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_equal" 'function))

(cffi:defcfun ("gsl_vector_ulong_isnull" #.(swig-lispify "gsl_vector_ulong_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_isnull" 'function))

(cffi:defcfun ("gsl_vector_ulong_ispos" #.(swig-lispify "gsl_vector_ulong_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_ispos" 'function))

(cffi:defcfun ("gsl_vector_ulong_isneg" #.(swig-lispify "gsl_vector_ulong_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_isneg" 'function))

(cffi:defcfun ("gsl_vector_ulong_isnonneg" #.(swig-lispify "gsl_vector_ulong_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_ulong_get" #.(swig-lispify "gsl_vector_ulong_get" 'function)) :unsigned-long
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_get" 'function))

(cffi:defcfun ("gsl_vector_ulong_set" #.(swig-lispify "gsl_vector_ulong_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :unsigned-long))

(cl:export '#.(swig-lispify "gsl_vector_ulong_set" 'function))

(cffi:defcfun ("gsl_vector_ulong_ptr" #.(swig-lispify "gsl_vector_ulong_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_ptr" 'function))

(cffi:defcfun ("gsl_vector_ulong_const_ptr" #.(swig-lispify "gsl_vector_ulong_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ulong_const_ptr" 'function))

(cffi:defcstruct #.(swig-lispify "gsl_vector_ushort" 'classname)
	(#.(swig-lispify "size" 'slotname) :pointer)
	(#.(swig-lispify "stride" 'slotname) :pointer)
	(#.(swig-lispify "data" 'slotname) :pointer)
	(#.(swig-lispify "block" 'slotname) :pointer)
	(#.(swig-lispify "owner" 'slotname) :int))

(cl:export '#.(swig-lispify "gsl_vector_ushort" 'classname))

(cl:export '#.(swig-lispify "size" 'slotname))

(cl:export '#.(swig-lispify "stride" 'slotname))

(cl:export '#.(swig-lispify "data" 'slotname))

(cl:export '#.(swig-lispify "block" 'slotname))

(cl:export '#.(swig-lispify "owner" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_ushort_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_ushort" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_ushort_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcstruct #.(swig-lispify "_gsl_vector_ushort_const_view" 'classname)
	(#.(swig-lispify "vector" 'slotname) #.(swig-lispify "gsl_vector_ushort" 'classname)))

(cl:export '#.(swig-lispify "_gsl_vector_ushort_const_view" 'classname))

(cl:export '#.(swig-lispify "vector" 'slotname))

(cffi:defcfun ("gsl_vector_ushort_alloc" #.(swig-lispify "gsl_vector_ushort_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_alloc" 'function))

(cffi:defcfun ("gsl_vector_ushort_calloc" #.(swig-lispify "gsl_vector_ushort_calloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_calloc" 'function))

(cffi:defcfun ("gsl_vector_ushort_alloc_from_block" #.(swig-lispify "gsl_vector_ushort_alloc_from_block" 'function)) :pointer
  (b :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_alloc_from_block" 'function))

(cffi:defcfun ("gsl_vector_ushort_alloc_from_vector" #.(swig-lispify "gsl_vector_ushort_alloc_from_vector" 'function)) :pointer
  (v :pointer)
  (offset :pointer)
  (n :pointer)
  (stride :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_alloc_from_vector" 'function))

(cffi:defcfun ("gsl_vector_ushort_free" #.(swig-lispify "gsl_vector_ushort_free" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_free" 'function))

(cffi:defcfun ("gsl_vector_ushort_view_array" #.(swig-lispify "gsl_vector_ushort_view_array" 'function)) #.(swig-lispify "_gsl_vector_ushort_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_view_array" 'function))

(cffi:defcfun ("gsl_vector_ushort_view_array_with_stride" #.(swig-lispify "gsl_vector_ushort_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ushort_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ushort_const_view_array" #.(swig-lispify "gsl_vector_ushort_const_view_array" 'function)) #.(swig-lispify "_gsl_vector_ushort_const_view" 'classname)
  (v :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_const_view_array" 'function))

(cffi:defcfun ("gsl_vector_ushort_const_view_array_with_stride" #.(swig-lispify "gsl_vector_ushort_const_view_array_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ushort_const_view" 'classname)
  (base :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_const_view_array_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ushort_subvector" #.(swig-lispify "gsl_vector_ushort_subvector" 'function)) #.(swig-lispify "_gsl_vector_ushort_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_subvector" 'function))

(cffi:defcfun ("gsl_vector_ushort_subvector_with_stride" #.(swig-lispify "gsl_vector_ushort_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ushort_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ushort_const_subvector" #.(swig-lispify "gsl_vector_ushort_const_subvector" 'function)) #.(swig-lispify "_gsl_vector_ushort_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_const_subvector" 'function))

(cffi:defcfun ("gsl_vector_ushort_const_subvector_with_stride" #.(swig-lispify "gsl_vector_ushort_const_subvector_with_stride" 'function)) #.(swig-lispify "_gsl_vector_ushort_const_view" 'classname)
  (v :pointer)
  (i :pointer)
  (stride :pointer)
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_const_subvector_with_stride" 'function))

(cffi:defcfun ("gsl_vector_ushort_set_zero" #.(swig-lispify "gsl_vector_ushort_set_zero" 'function)) :void
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_set_zero" 'function))

(cffi:defcfun ("gsl_vector_ushort_set_all" #.(swig-lispify "gsl_vector_ushort_set_all" 'function)) :void
  (v :pointer)
  (x :unsigned-short))

(cl:export '#.(swig-lispify "gsl_vector_ushort_set_all" 'function))

(cffi:defcfun ("gsl_vector_ushort_set_basis" #.(swig-lispify "gsl_vector_ushort_set_basis" 'function)) :int
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_set_basis" 'function))

(cffi:defcfun ("gsl_vector_ushort_fread" #.(swig-lispify "gsl_vector_ushort_fread" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_fread" 'function))

(cffi:defcfun ("gsl_vector_ushort_fwrite" #.(swig-lispify "gsl_vector_ushort_fwrite" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_fwrite" 'function))

(cffi:defcfun ("gsl_vector_ushort_fscanf" #.(swig-lispify "gsl_vector_ushort_fscanf" 'function)) :int
  (stream :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_fscanf" 'function))

(cffi:defcfun ("gsl_vector_ushort_fprintf" #.(swig-lispify "gsl_vector_ushort_fprintf" 'function)) :int
  (stream :pointer)
  (v :pointer)
  (format :string))

(cl:export '#.(swig-lispify "gsl_vector_ushort_fprintf" 'function))

(cffi:defcfun ("gsl_vector_ushort_memcpy" #.(swig-lispify "gsl_vector_ushort_memcpy" 'function)) :int
  (dest :pointer)
  (src :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_memcpy" 'function))

(cffi:defcfun ("gsl_vector_ushort_reverse" #.(swig-lispify "gsl_vector_ushort_reverse" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_reverse" 'function))

(cffi:defcfun ("gsl_vector_ushort_swap" #.(swig-lispify "gsl_vector_ushort_swap" 'function)) :int
  (v :pointer)
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_swap" 'function))

(cffi:defcfun ("gsl_vector_ushort_swap_elements" #.(swig-lispify "gsl_vector_ushort_swap_elements" 'function)) :int
  (v :pointer)
  (i :pointer)
  (j :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_swap_elements" 'function))

(cffi:defcfun ("gsl_vector_ushort_max" #.(swig-lispify "gsl_vector_ushort_max" 'function)) :unsigned-short
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_max" 'function))

(cffi:defcfun ("gsl_vector_ushort_min" #.(swig-lispify "gsl_vector_ushort_min" 'function)) :unsigned-short
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_min" 'function))

(cffi:defcfun ("gsl_vector_ushort_minmax" #.(swig-lispify "gsl_vector_ushort_minmax" 'function)) :void
  (v :pointer)
  (min_out :pointer)
  (max_out :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_minmax" 'function))

(cffi:defcfun ("gsl_vector_ushort_max_index" #.(swig-lispify "gsl_vector_ushort_max_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_max_index" 'function))

(cffi:defcfun ("gsl_vector_ushort_min_index" #.(swig-lispify "gsl_vector_ushort_min_index" 'function)) :pointer
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_min_index" 'function))

(cffi:defcfun ("gsl_vector_ushort_minmax_index" #.(swig-lispify "gsl_vector_ushort_minmax_index" 'function)) :void
  (v :pointer)
  (imin :pointer)
  (imax :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_minmax_index" 'function))

(cffi:defcfun ("gsl_vector_ushort_add" #.(swig-lispify "gsl_vector_ushort_add" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_add" 'function))

(cffi:defcfun ("gsl_vector_ushort_sub" #.(swig-lispify "gsl_vector_ushort_sub" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_sub" 'function))

(cffi:defcfun ("gsl_vector_ushort_mul" #.(swig-lispify "gsl_vector_ushort_mul" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_mul" 'function))

(cffi:defcfun ("gsl_vector_ushort_div" #.(swig-lispify "gsl_vector_ushort_div" 'function)) :int
  (a :pointer)
  (b :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_div" 'function))

(cffi:defcfun ("gsl_vector_ushort_scale" #.(swig-lispify "gsl_vector_ushort_scale" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_ushort_scale" 'function))

(cffi:defcfun ("gsl_vector_ushort_add_constant" #.(swig-lispify "gsl_vector_ushort_add_constant" 'function)) :int
  (a :pointer)
  (x :double))

(cl:export '#.(swig-lispify "gsl_vector_ushort_add_constant" 'function))

(cffi:defcfun ("gsl_vector_ushort_equal" #.(swig-lispify "gsl_vector_ushort_equal" 'function)) :int
  (u :pointer)
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_equal" 'function))

(cffi:defcfun ("gsl_vector_ushort_isnull" #.(swig-lispify "gsl_vector_ushort_isnull" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_isnull" 'function))

(cffi:defcfun ("gsl_vector_ushort_ispos" #.(swig-lispify "gsl_vector_ushort_ispos" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_ispos" 'function))

(cffi:defcfun ("gsl_vector_ushort_isneg" #.(swig-lispify "gsl_vector_ushort_isneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_isneg" 'function))

(cffi:defcfun ("gsl_vector_ushort_isnonneg" #.(swig-lispify "gsl_vector_ushort_isnonneg" 'function)) :int
  (v :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_isnonneg" 'function))

(cffi:defcfun ("gsl_vector_ushort_get" #.(swig-lispify "gsl_vector_ushort_get" 'function)) :unsigned-short
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_get" 'function))

(cffi:defcfun ("gsl_vector_ushort_set" #.(swig-lispify "gsl_vector_ushort_set" 'function)) :void
  (v :pointer)
  (i :pointer)
  (x :unsigned-short))

(cl:export '#.(swig-lispify "gsl_vector_ushort_set" 'function))

(cffi:defcfun ("gsl_vector_ushort_ptr" #.(swig-lispify "gsl_vector_ushort_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_ptr" 'function))

(cffi:defcfun ("gsl_vector_ushort_const_ptr" #.(swig-lispify "gsl_vector_ushort_const_ptr" 'function)) :pointer
  (v :pointer)
  (i :pointer))

(cl:export '#.(swig-lispify "gsl_vector_ushort_const_ptr" 'function))

(cffi:defcenum #.(swig-lispify "gsl_wavelet_direction" 'enumname)
	(#.(swig-lispify "gsl_wavelet_forward" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "gsl_wavelet_backward" 'enumvalue :keyword) #.-1))

(cl:export '#.(swig-lispify "gsl_wavelet_direction" 'enumname))

(cffi:defcstruct #.(swig-lispify "gsl_wavelet_type" 'classname)
	(#.(swig-lispify "name" 'slotname) :string)
	(#.(swig-lispify "init" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_type" 'classname))

(cl:export '#.(swig-lispify "name" 'slotname))

(cl:export '#.(swig-lispify "init" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_wavelet" 'classname)
	(#.(swig-lispify "type" 'slotname) :pointer)
	(#.(swig-lispify "h1" 'slotname) :pointer)
	(#.(swig-lispify "g1" 'slotname) :pointer)
	(#.(swig-lispify "h2" 'slotname) :pointer)
	(#.(swig-lispify "g2" 'slotname) :pointer)
	(#.(swig-lispify "nc" 'slotname) :pointer)
	(#.(swig-lispify "offset" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet" 'classname))

(cl:export '#.(swig-lispify "type" 'slotname))

(cl:export '#.(swig-lispify "h1" 'slotname))

(cl:export '#.(swig-lispify "g1" 'slotname))

(cl:export '#.(swig-lispify "h2" 'slotname))

(cl:export '#.(swig-lispify "g2" 'slotname))

(cl:export '#.(swig-lispify "nc" 'slotname))

(cl:export '#.(swig-lispify "offset" 'slotname))

(cffi:defcstruct #.(swig-lispify "gsl_wavelet_workspace" 'classname)
	(#.(swig-lispify "scratch" 'slotname) :pointer)
	(#.(swig-lispify "n" 'slotname) :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_workspace" 'classname))

(cl:export '#.(swig-lispify "scratch" 'slotname))

(cl:export '#.(swig-lispify "n" 'slotname))

(cffi:defcvar ("gsl_wavelet_daubechies" #.(swig-lispify "gsl_wavelet_daubechies" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_wavelet_daubechies" 'variable))

(cffi:defcvar ("gsl_wavelet_daubechies_centered" #.(swig-lispify "gsl_wavelet_daubechies_centered" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_wavelet_daubechies_centered" 'variable))

(cffi:defcvar ("gsl_wavelet_haar" #.(swig-lispify "gsl_wavelet_haar" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_wavelet_haar" 'variable))

(cffi:defcvar ("gsl_wavelet_haar_centered" #.(swig-lispify "gsl_wavelet_haar_centered" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_wavelet_haar_centered" 'variable))

(cffi:defcvar ("gsl_wavelet_bspline" #.(swig-lispify "gsl_wavelet_bspline" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_wavelet_bspline" 'variable))

(cffi:defcvar ("gsl_wavelet_bspline_centered" #.(swig-lispify "gsl_wavelet_bspline_centered" 'variable))
 :pointer)

(cl:export '#.(swig-lispify "gsl_wavelet_bspline_centered" 'variable))

(cffi:defcfun ("gsl_wavelet_alloc" #.(swig-lispify "gsl_wavelet_alloc" 'function)) :pointer
  (t_arg0 :pointer)
  (k :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_alloc" 'function))

(cffi:defcfun ("gsl_wavelet_free" #.(swig-lispify "gsl_wavelet_free" 'function)) :void
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_free" 'function))

(cffi:defcfun ("gsl_wavelet_name" #.(swig-lispify "gsl_wavelet_name" 'function)) :string
  (w :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_name" 'function))

(cffi:defcfun ("gsl_wavelet_workspace_alloc" #.(swig-lispify "gsl_wavelet_workspace_alloc" 'function)) :pointer
  (n :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_workspace_alloc" 'function))

(cffi:defcfun ("gsl_wavelet_workspace_free" #.(swig-lispify "gsl_wavelet_workspace_free" 'function)) :void
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_workspace_free" 'function))

(cffi:defcfun ("gsl_wavelet_transform" #.(swig-lispify "gsl_wavelet_transform" 'function)) :int
  (w :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (dir #.(swig-lispify "gsl_wavelet_direction" 'enumname))
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_transform" 'function))

(cffi:defcfun ("gsl_wavelet_transform_forward" #.(swig-lispify "gsl_wavelet_transform_forward" 'function)) :int
  (w :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_transform_forward" 'function))

(cffi:defcfun ("gsl_wavelet_transform_inverse" #.(swig-lispify "gsl_wavelet_transform_inverse" 'function)) :int
  (w :pointer)
  (data :pointer)
  (stride :pointer)
  (n :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet_transform_inverse" 'function))

(cffi:defcfun ("gsl_wavelet2d_transform" #.(swig-lispify "gsl_wavelet2d_transform" 'function)) :int
  (w :pointer)
  (data :pointer)
  (tda :pointer)
  (size1 :pointer)
  (size2 :pointer)
  (dir #.(swig-lispify "gsl_wavelet_direction" 'enumname))
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_transform" 'function))

(cffi:defcfun ("gsl_wavelet2d_transform_forward" #.(swig-lispify "gsl_wavelet2d_transform_forward" 'function)) :int
  (w :pointer)
  (data :pointer)
  (tda :pointer)
  (size1 :pointer)
  (size2 :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_transform_forward" 'function))

(cffi:defcfun ("gsl_wavelet2d_transform_inverse" #.(swig-lispify "gsl_wavelet2d_transform_inverse" 'function)) :int
  (w :pointer)
  (data :pointer)
  (tda :pointer)
  (size1 :pointer)
  (size2 :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_transform_inverse" 'function))

(cffi:defcfun ("gsl_wavelet2d_nstransform" #.(swig-lispify "gsl_wavelet2d_nstransform" 'function)) :int
  (w :pointer)
  (data :pointer)
  (tda :pointer)
  (size1 :pointer)
  (size2 :pointer)
  (dir #.(swig-lispify "gsl_wavelet_direction" 'enumname))
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_nstransform" 'function))

(cffi:defcfun ("gsl_wavelet2d_nstransform_forward" #.(swig-lispify "gsl_wavelet2d_nstransform_forward" 'function)) :int
  (w :pointer)
  (data :pointer)
  (tda :pointer)
  (size1 :pointer)
  (size2 :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_nstransform_forward" 'function))

(cffi:defcfun ("gsl_wavelet2d_nstransform_inverse" #.(swig-lispify "gsl_wavelet2d_nstransform_inverse" 'function)) :int
  (w :pointer)
  (data :pointer)
  (tda :pointer)
  (size1 :pointer)
  (size2 :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_nstransform_inverse" 'function))

(cffi:defcfun ("gsl_wavelet2d_transform_matrix" #.(swig-lispify "gsl_wavelet2d_transform_matrix" 'function)) :int
  (w :pointer)
  (a :pointer)
  (dir #.(swig-lispify "gsl_wavelet_direction" 'enumname))
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_transform_matrix" 'function))

(cffi:defcfun ("gsl_wavelet2d_transform_matrix_forward" #.(swig-lispify "gsl_wavelet2d_transform_matrix_forward" 'function)) :int
  (w :pointer)
  (a :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_transform_matrix_forward" 'function))

(cffi:defcfun ("gsl_wavelet2d_transform_matrix_inverse" #.(swig-lispify "gsl_wavelet2d_transform_matrix_inverse" 'function)) :int
  (w :pointer)
  (a :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_transform_matrix_inverse" 'function))

(cffi:defcfun ("gsl_wavelet2d_nstransform_matrix" #.(swig-lispify "gsl_wavelet2d_nstransform_matrix" 'function)) :int
  (w :pointer)
  (a :pointer)
  (dir #.(swig-lispify "gsl_wavelet_direction" 'enumname))
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_nstransform_matrix" 'function))

(cffi:defcfun ("gsl_wavelet2d_nstransform_matrix_forward" #.(swig-lispify "gsl_wavelet2d_nstransform_matrix_forward" 'function)) :int
  (w :pointer)
  (a :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_nstransform_matrix_forward" 'function))

(cffi:defcfun ("gsl_wavelet2d_nstransform_matrix_inverse" #.(swig-lispify "gsl_wavelet2d_nstransform_matrix_inverse" 'function)) :int
  (w :pointer)
  (a :pointer)
  (work :pointer))

(cl:export '#.(swig-lispify "gsl_wavelet2d_nstransform_matrix_inverse" 'function))


